(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1563207,      30293]
NotebookOptionsPosition[   1537848,      29952]
NotebookOutlinePosition[   1538292,      29969]
CellTagsIndexPosition[   1538249,      29966]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["WL-PDR", "Title",
 CellChangeTimes->{{3.8654830677602253`*^9, 
  3.8654830689457464`*^9}},ExpressionUUID->"99ed4942-640d-4bde-882d-\
29edb32f8af7"],

Cell["\<\
A simple plane-parallel model of a Photon-Dominated Region (PDR)\
\>", "Subtitle",
 CellChangeTimes->{{3.8654830729700127`*^9, 
  3.8654831313704443`*^9}},ExpressionUUID->"21a5a9fb-324d-4180-8c57-\
4b0d041ee12a"],

Cell["\<\
Numerical models of photodissociation regions (PDRs) are an essential tool to \
quantitatively understand observations of massive star forming regions \
through simulations. We introduce WL-PDR, a simple plane-parallel PDR model \
written in Mathematica to act as a numerical testing environment of PDR \
modeling aspects.\
\>", "Abstract",
 CellChangeTimes->{{3.865484548204604*^9, 
  3.865484584236764*^9}},ExpressionUUID->"62696cf4-36bf-4dc8-9d5f-\
d3a7e31f0194"],

Cell["Markus R\[ODoubleDot]llig", "Author",
 CellChangeTimes->{{3.865483146405962*^9, 3.865483182161789*^9}, 
   3.8654844793558874`*^9, {3.865484625967157*^9, 
   3.8654846264170113`*^9}},ExpressionUUID->"a1fa3a0c-8515-4dca-b0e0-\
cb72c1ae5178"],

Cell["\<\
Physikalisches Institut der Universit\[ADoubleDot]t zu K\[ODoubleDot]ln, Z\
\[UDoubleDot]lpicher Stra\[SZ]e 77, 50937 K\[ODoubleDot]ln, Germany
e-mail: roellig@ph1.uni-koeln.de\
\>", "Affiliation",
 CellChangeTimes->{
  3.865484618894418*^9, {3.865484652567156*^9, 
   3.865484664941633*^9}},ExpressionUUID->"03c572dd-dc8e-467e-9f1c-\
e3a8e8ee03e0"],

Cell[TextData[{
 "Published in ",
 ButtonBox["R\[ODoubleDot]llig & Ossenkopf-Okada 2022",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://ui.adsabs.harvard.edu/abs/2022arXiv220504233R/abstract"], 
    None},
  ButtonNote->
   "https://ui.adsabs.harvard.edu/abs/2022arXiv220504233R/abstract"],
 " "
}], "Text",
 CellChangeTimes->{{3.8654832916014767`*^9, 3.865483293573883*^9}, {
  3.865484233359419*^9, 
  3.865484307240796*^9}},ExpressionUUID->"c524b818-8ad1-4c7d-a2f1-\
f621f266b455"],

Cell[CellGroupData[{

Cell["Introduction", "Chapter",
 CellChangeTimes->{{3.865483197918706*^9, 
  3.865483199255704*^9}},ExpressionUUID->"f8c5d479-6c07-4b28-9c1f-\
c1420026cd77"],

Cell["\<\
Photodissociation regions (PDRs) are region sin the interstellar medium, i.e. \
clouds of gas and dust, where the physical and chemical conditions are \
dominated by the local intensity of the far UV (FUV) radiation, coming from \
nearby massive stars.\
\>", "Text",
 CellChangeTimes->{{3.8654855854408407`*^9, 
  3.865485652141778*^9}},ExpressionUUID->"7efd485d-f881-4766-a9a6-\
910c5b37bcb6"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[
      TagBox[
       RasterBox[CompressedData["
1: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
TVKj3RX56cQJISja9j5N0CHwLp69UGViYtJT+fHi133yDtu8Q9Xm0OTjc23h
4eFUbcRp8Pb27tix47333mtSbS4udZ5rOHPJGqo2JodOXjsOvvXehyVKljSp
NpdSRSq3LPL1BbuHJQUqFdW0W3FzKqYlO/5K70ypqPmiA9uTicnG5DZW3hx7
PTXv0TpVm2OTX6oNHYCqjTgTW7duff/998uWLWtejcT12YZN5ixfR9XG5NBp
09/HP/jki1L33GNSbcVLFnmsUZEvTxQZdsPukQkTExMTk3UqN1Y+75lM1Vbo
yceV/yMjI6naiNOwadOmt9566x5zcAvVVr/x8/NXbaRqY3Lo9NfBM590+/Ke
e0qbVFsxlyIP1S7S6xBVGxMTE1PBTGXGyLV9kqjaCj35qNquXbuGnmDvWJuQ
/GHdunUvv/xyqVKlTKrN1bVx8xcXr/2Lqo3JodOOIxe6fvm/0qXLmFRb0eJF
7n+qSLe9VG1MTExMBTOVGiU+WCkSU/IerVO1OTb5qNqio6P9/PzsHWsTkj/8
8ccfTZs2dXV1Na3ZUKLECy+/tmLjLqo2JodOu45d7NH/u9JlDKrtvieKfLGb
qo2JiYmpYKbiI+RbD+Kp2go9+ajaYmJiqNqI07By5co6deoUL15cxbYlSpZ8
+fW3/vDeR9XG5NBp17++vb4ZXLpM2UzVVo6qjYmJialAp3qz5KtL8w5Vm0OT
j6otNjbW39/f3rE2IfnDsmXLqlWrVrRoUdNbrUqVatXmvT99jlK1MTl02nH0
Qvd+N19rc6tcpKsPVRsTExNTgU3Vp4qzEQi28xquU7U5NPmo2uLi4qjaiNOw
dOnSp59+2qDa7mnT7sO/DvxH1cbk0GnbobOf9eh3T+nSmartgapFuv9D1cbE
xMRUYNPjHmKbr0inaivc8FobIVny+++//z975wEVxdWG4buNjoCCKKIiFhCw
F7D33nuMGns3xhh7w27U2P0Tu0YTC72KKAiKqID0DgKKiCjNQhVk/kFw3V0W
CyyZXfZ9z3NydLn7zezsGL/HmbnX0NCQb23KyipjJk3zDk5IzGa+8Qagyrj5
hk2eMZc/OerHOSSNyXw/WBsAAEgt9fZR54OpomrLFqxNpgNrQxCxEbU2FdUJ
P866F5HMeNcNQHVwvhs0dsoM/uSohMMjDdqRhUGwNgAAkFrUdlN771HvYW3y
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
X25lN0yGhIRs3bpVW1u7zNrYbHZrs3Z/XbKLfpnPeOMNQJXxj0tbbblHv4lB
2YldGp4KMR5LfnvOeFsCAABALKq7qUUuVB6sTQpSTWujj7yDQ1ydOvba2jYP
H5ZbW0xMSr9+pb30sWMPvrx1WBusTTqtrU0bZxWVqsxGUhH6qFpYuK5a5fPX
XwH0hm7eDKO3/uV1uoOCgtasWaOlpVVubRxOx67drrh4x74qZLzxBqDKhD17
s+vQyWbNjQSsTZm0GkF+TWa8LQEAACAWld3UbEcqF9YmBXF3D2ve3FpZ+dqx
Yx6VjUlLezNs2OWPLejqyEjRSf5zc4u2bYtks62nT7//9m3hhw8lp0/H16lj
p6pqFx//lfkhMzIyk5JSs7IK+bx9W1RcLLomxOvX7wXHvHnzvkR4SHHxh5SU
zKCgOLofLiMoKLpiY0z38/wBNLSnxAhf66DfQr9RcExV68RUoQ495lvqiIyh
f/vVOlFRUlhHaExw8NfrVBxD16EPfk3U+fvvQHV12yo4GotlxeFYq6nZ0qrY
vLnTzp33/f0jabOOjIyJ+ebpJB89erR8+XINDY2y5pbD5Xbr3d/1Xkh8RhHj
jTcAVSY2vfDY+autTMxYnyZHLbW2lkPJr08Yb0sAAACIRXkXNdUW1iYVCQxM
MDNzVFCw2bat0mlDnj7NNTYuvQJVt+7m+Pi0igMcHJIbNrQn5JqfX2JKytsp
U27TBXfsiCz62pp8kpr5v6SkhC5Fnwnf2hYjyBezaJE3j/cdc0iqqNjo6tob
GTn17Ok2YYLHgQMPb94MDw2t4sJt/v7+ixYtUlNTK2tsaWvrPWCYV3B8fGYx
4403AFUmIbvkrJVru85d6VP6k7UpkeaDyIokxtsSAAAAYlHcQY25Qr0TXeCr
KoG1VTNJSS+7dHHjcKwnTLiXlSX+KwkJSdfSKr13bvjwi2lprysOSEzMHDbs
Fj3g8OFge/tEbW3Hxo2dw8LEjBSJBK0tIyMjPj5esq07Ip/x94+i5YvF+iZf
09KyGzPm1po19w4f9rOzCwkIEL3wWoX4+fnNnj1bVVW1rLHlcrkDh415GPvi
cdYHxhtvAKrDFdc7vQYO4fEUyq2Nq0QMB5BfEhhvSwAAAIiFt50aeBHWJhUp
KCgaO9aHzbbW1XU8cSImP7+g4pg//vD/eDXB9ujRkIICMZdIi4qKf/75Ea1+
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
iKhfvz49bOHChaGhoTExMe7u7r98zOzZs5WUlExNTct+u3r16qioqP/yIyAB
AQGWlpZlXxAdNpttYNhy95FTX/AO6aeitdGk/7khdNpwZx0tWtzsdep7L/g5
0jdMstvVqqdNH8O5S1d+4egt+W0DrcaKSsqOXgGMH6jaCn1s+w8ZqaysUn79
WFmLWKwgq9MZb0j+AypaWxnbZq0/0mP4xbq69Pl/UUF1tvmy+r88rrq4rc0q
nZaTxS41slVplQ6bfr102QXlemTkn7A2AMBXgbUhFKytZlJla7O1tR35Mf36
9VNQUGjatGnZb6dMmfKFa3Z0wjw8bk2YACSIy8iR/zMzW6GouJgQmiUs1lpN
rfPde3tOm317uqzi2tncRkFBxNpoMk5sTFg7y6d7Oxse15qncL1nn2Dr648l
txJ3jVpbfMrb+zsPMH5sZQK74WN2N2n2M5dbdlYvZvMW67RebDZlcYfZtZ4l
7WbuamR+jcUSsbbSi25zNu4Zv/Bc4xZWLBYtboe1W3WfdLWKt0rC2gAANQCs
DaFgbTWTqlmb4I++9w7JYCsr/nTuAHyZitbG58FAc3tVZbp3pYf5/LouLuGV
9FtbdFiSW48+ZfsMwFepaG18DvUde1lFnR5zXklzfP8d6mvSv9vdYG0AgBqA
tjY814bA2moiDFrbDYMGt82agerj1krvso7yOTXWWVVCQ//iSn1VN+Omt9u3
ut3eSKbx6dH++d4VYq0t7ciasJmj3Js3tuawbeto3FmyIvy2f0K1l6j7L6yN
zXZr2pDxYyvl3DI1tG1c94IGp+ysPkuf3lqqZxvqn21qJD/82a7Hjmm/ibW2
bbM3Huk54nxDg6sc3gUlzcUdZhvP8eFurnxSkYrA2gAANYDhESowFdYm75Gg
tRUUFMDaysKgtcXMH5G2bwGoPuGrx53u1XBXK862FoRmZyvu34NbRlnOfnV8
7avj62Sb/63PPL1FrLXRZJ7Z8mTLAu/OJjY8Lq1CLu07Bpy69Lh68zr+B9Zm
zeaETRvO/LGVbpJ+X3p9es8D7dXLzuptLTnbOjXdNnrCtlnr5IetczZazrcU
a21l7J609FTLdmVXb/c17NBpqiPL8psfc4O1AQBqgBZHqbCXsDZ5D6ytJlJ9
awsICFi3bt2pU6e+cYt8a4tfNjbj2M+gmqQfXRaydtyx7trbjNiWrQjNDhPe
P6NNE/5YlnXOsjLfqU083/uL39DupeJGiFNLo4CTFx+n5ki5tYXPGJl1lvlD
J82kHFvlvmDAgc4aZWe1JX16d9K3HD3OcsGXLEYO2T3l5xOmXUsXdCPksLbR
qMH7lNd/26p2sDYAQA3Q8hgVnU6VwNrkO7C2mgjf2saPHx8UFBRRSYKDgyuz
tujo6LCwsC/PQCIYWJtkeXl4id+K4Qc7a2w1YpX1tztNeFfHt3t6+FfGG+//
jPQ/NwRPGmTN5Viz2XaaWp4/zIh//q461jZ70S8xLwtiXxWKZdGKtbC2mib1
f2tvLx56sKvWZ2trr2M5fBisTZT5lttmrT9mMfijuLFOqTccOuIYb1P+1y+6
8a3NoG/pwm2bC8XzoxOsDQDw7Rgdo+KzYG3yHglaW2FhYXJycg04kOyFb20N
GjSgf9G3ktA/UlJSEmtt3xtYm2RJO7TYe2G//R3Vtrb6ZG2mijaTOz0/vobx
xvu/JPPMlpglk92b69so8Oizy3v+0kjf0PiU73a3MmtrbGDYf8iIymhq2IIe
A2urUdL+Wn93+ahD5nXLrY0+vc3ULQf2slywmXlRkkr+GPzD3zp6V3kK9Plv
adDPZLa3wsa8LzVXfGtT1iKGA0mrEeLRNyccDqwNAPCN0NaWkA1rk/dI0Nre
v38PaysL39q+MbA2aSP1wMIbM7vtba/Ct7Y9bZUdp3d78dc6xhvv/56UPT/7
9Gxvq1gqbg4N9R7sPhSfmFEFa/uWwNpqlFenNvr+Nv5IN+1P1kYsTZQs+3Sw
nLuecT+SWnZNXvZn2+5XuaV3Cx+obzpyyAHFDTmVNld8a/uWwNoAAN+G6f+o
5++oaksbrE22A2urifCtrXXr1gsWLFjyMYsXLxb8Bf3fRYsWqampwdqkkJT9
852ndt7TVqmss91qxNrXXs11Vu+0E+sZb7z/e14c+M1/eC97FSX6BLPTqnt3
+eqYqGdVsLb2nS2Wrdq4bNWmZauF+fhKp249YW01TcaZzX5rJx/rofvZ2lor
WPYwtZy9mnE5klq2ztt8zHzwVW7pv1qcVdH+qduvyhveVtpc8a1Ns0npCua9
N4mnzTTCURBjbZvyyKIQMtm6lAX+ZF0W470iAIBxWFup9ieozHwJ9OqwNpmO
BK2tqKgI1lYWvrWNGzfu0aNHYR9De5ngL+j/BgYGVvZc2/cG1iZZkvfOtZnQ
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
/uyiluTknSVSZ/q8QBFLsrqR3qzFdcExk6YFiNSx88jU0xeqQ1uSSJ2rbq+a
NhOqM2XmI5E69GfX0xf6vuYuDRGt4/pKv6lQnWlzA0Xtz+1VQ+H9oQ1LxNpo
s9NrLLStmYuCRe3P+aXI51qyMqzM2u5H5Q4c4Vsda6Pfy+XZKCnb1tN2nLMk
hLbRBzF59Enl7hf70/xl2jr1y2+PZHFIvVZk8B+wNgAAkFpoa1vkAmuTity8
GdqihbWystXp0/cqG5OamtOnj8PHf/BfFROTKvLTd++Ktm6NUFCwadnSJSMj
v6jow9GjMcrKtrQi5eUViS3Ij6Rm/qdPgJcvX8bFxcUiSK2Ira1tt27d+FPt
KSopjxw/5XZgHGb+BzUKLYmHzzypwu2RHI61Vl2Hxk1d23Xy6D/UZ932mOv3
X4tctHW682jIyHHq6p8Wa2NzSX0TMuwYscQS2wAAIKWo7KJm2uEOSanIo0cJ
ZmaOPJ71ihVBlY158iS3ZcvS+6PatTuUnJxRccCdOymmpqU39ri7R4aGvujf
311Dw97BIf7Dh5Ivb11S1kafBmlpabA2pNbE3t6+d+/efGtTUlYePWnandDE
RFgbqEni0ksmTQ/4rgttqmp2nbrenjYncNfhhCsur/zj8h9Xsl7bFVfvzhY9
FBUVP1ubrhkZ8SesDQAApBbFHdSYK5j5Xyry+nVu794epPQBLpeoqGdix3h4
xNFaR4/Zvds/L0/M15aWlj1hgic9YPlyz7/+CiQfHwtKTPzSPCRlkZS1vX//
PjU1FdaG1Jo4OTkNGDBASUmJb21jp8y4F/GU8a4e1G6i04pFnoWsjHrajt17
e/8w69HW/fGu917HZXzl3xPiM4vPWrmYtuvI5fIErrWZ4lobAABIM9ztVP+/
YW3Skn37opSVbZWUrKZMuRkbK3opLTY2tV+/G/Tf0c2bW/v4pIitUFz8YefO
CDU1O1NT19mzS6eUXLnS982bvK9uWlLWVlhYmJKSAmtDak1cXFyGDRumrFw+
QTr9i/E//PQg+jnjXT2o3fzjmKakZFuZqWloOfQfem/+zyHHLzyzvZXhFfQu
MKFAZI3vyoh5WXD4zOUWxqZs/mJttLVpG5MhB/FcGwAASC3sbZT5aeoNrE06
kp9fvGZNKJdrzeNZGxq6DB7svXnz0a1bD61ada1nTw9tbXsOx1pf3/nIkYi3
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
PXhxoM68OOfOvYZKKu+vS2BVFMvAIqVKneatC+ynYpmzZ1/Xrq2031u0uMRb
16NH7rw4LVte5sU5ffq1jc155TKXwHorloHmKllSKU6bNvw4p045Q2dQLNO6
9eVXr5SsFOw+Xn3at7/CWxf4r2rVnHjr4p09uHHDlVefn3++yquPvf3zSpXO
Kpaxst7tcOWpomu7+TK6ZOlzimV+6/HotV+yYrZ88np4pSqXFct0/OXB2zAl
J3XtaVSJUkrr6vbnYxflOI5Xw60qKR0XnX578CFCKTMHL8OL073vUxd/pTgn
roRZWin15y5dH/Iy/PP3IoqXVIrz54Bnb/xTFMscv/S5vOUF5W1/zIsD/pQX
p+/g528ClOLYX/xctrxS//mj9xNenJPXwk1LKMUZMPSlq3KcYxdCzcoo7fee
/Z7x4sC2m5ZU2l+DR75yDVSKc9QptKSZUpw+g57znC+sy0S5PkPGOLspxzl8
LqS48rr6D33Jc+KHz4bwtmvE+NduQamKZQ6dCTEpfpZXZ16cA6eCTZXLjJ7s
4h6kVJ8Dp4OLFlP6bSFkCHvEtvSxFsTAlPQ+Rvp8YLP/KZaBPHxuilLyMCiY
XSJRLNPiNX+GwP4BxEA5TltXfhzwIJJTSmXqPSW/f+CH6ujJMnnFYr19+Zl8
l7dKl3hgE7qqxGnvzo/Tx58fp5OXUhyjs6SbNz9OWzd+tcHs8OvsoRTH+Bz5
4yO/TGtXfpz+gUpl4D3UWSmOE+n+iR+nlQszO4pxwEwploFtbKccp4gT6eHD
j9PyNT/OYOU4876xbVc0ZUXPk16+SmV6+ZCiSn0+9xicIRVukZYurKpDPzNH
Pz2R2OK1YKRQU20zfRtO0/Js29C15VF5dG3h4XGWlufBuK1c+SYpKeMamYOD
V7lyp8uUOf348bss1o6uTbEMujbFMujaFMtYVdpz6vqLt2Ho2tC1FSzXxk3+
32Mf6e2Fri2jALq273Vtw8JI2ats/n+iOWCN0IDlr5P6z9kOUr1oiyCFhoob
6GN/+g1dm7aVR9eWkJDSs+dV+Orvv2+FhMjcVkpKyoQJLyQSx3r1rkRGxmax
dnRtimXQtSmWQdemWAZcm+PVZ+ja0LUVQNemV4R020l6uaNryyiAri2fuDaD
M8T8Jutmf3xSM4YWQQoNFmvp1fc0FV2btpVH1wYtf/z4e/jK0vLcixeyx21/
+BDcqRPL8VasuJX12tG1KZZB16ZYBl2bYpkKFXfZX3yEIyTRtRVM1/b7VtLT
FV1bRgF0bd/r2vr6ExOlYzlPgPurcJN09mL3002OJbOTcapJpJBTdjV19KCp
eTZb6NryqBMnvM3Nz4Fr27fvTmZlwLX17s39YNp5evKnfPTyimra9LpA4DBv
3sNE6aPTT5zwLFvW3sDg1JMnH7Neu7//502bXs6c+WbmTBfp65vt2z/wHBlo
2TIP7luu2Lp17+LjlZ7RHhqasGGD66hRd0aOvM2xaNFDngsATZ58T14AmDPn
oYuLUkYNRgYWVCyzePEjXkbt5fV20qS7imVsbR/yZiyBOAsXKsVZsuQRL8P3
8PDixZk/nx/nwQP3BQuU4ixd+gjslWIZcH+8OLBqXhxwLhBcscyyZY+cnZXi
wCK8OIsX8+Pcu+cGe5kXh+dK4M+JE+/y6uzqqlTm7l23uXOV4ixf/pi3L6B6
vDjLl/PjgJPixVmx4jGvztBcvDhQRjXO7NkPeGV4s6xAN+DFWbnyMW9Gl9u3
XWfNUopjZ/eYNzsKdMsJE5TirF79hBfn8uXnP/+83sBgGCEDAIFgUNUa/+53
vOb1OWPm/xcfEifNdhsz+c2YSS7sdfKbDXt83n5WyrrvvYmdvdiL+5Zj7U4f
1RlLeHE27fV9G6YU565L7MxFnopx1u3y4bm2J17xk5XjbDng9zbsm2KZO69j
WJz0AtI6+6rOgDF5llKcbYf8335WinPbOWb6wvQ40teN+/x4cR648+NsPxzA
j/Mqevp8D8U4Ww748+LcfxM3STnOzqMBvO269TL6P1uPjO2a5LLtUAAvDrQh
L84e+0BenJsvoqfauivG2XGYH+f2qxh+nBNBvDg3nkdNnuOeUWaSy85jgbw4
sK5JM5Xi7HMMeqcc5/rzKKW+Mcll93F+HFaGi5NeDHzcu3ClONfkZSa5DBv7
vHWnQ/oGP/GvtQ33ZZl5qzdSXNjr3yH8VHl8VHoZF9kr+LgFytnF2CjSjhcn
lB9nXBSzcopxwP6M/MJPVP4JTS+WXnJsJH91Q0OZu2yVTns3NXFgQ3hxxn1V
WVeINI6LQpwI/rrAy7R9k02cv4OV4nRwJ6NU4gxSiTNBeVIXcEODlesDZnC0
Shwwv7w4E6NV4sjr45IeR6UNB6jEmRSjVADc36Dg9HaWFujkyeYwkceZncL8
+3fNIamI6CS7pgZOsMxVUvcp+eUda1hYKa+eCFKIKb2KHnKhKejatK1bt9yq
VTtpYOBoZ/csszLBwbHt27Mz26VLL/jwIYT3bXJy6v7970qXPmtqeub9+y9R
Uclz574xNj49ePCTpKRs9gvO/I9CqerFixeTJ08uUaJE+lO2RTa162/ef8Iz
JEExGUYQncMrNGHdrsOmxUsSucC19TxA5sT86KwDKbBMiCaV7363axNIr2lW
uE2aOZPfvcmwcDIrWfvbgiD5klKr6MHX6Nq0rw8fghs3viQUOvTr9zCzMt7e
MWDK4Ffu998Ph4Z+VS3w+nVIixZsANXu3fdu3PAzN3cqV87p4cOwtOymm8Gn
bKNQqnr58uW0adNKlSqV7tqElavWsNu02z04TutZN4LkhQ8R37YfPlWiZOkM
16ZflPQ5QWxVJsNHkBwy5DMpluPhkWLpg7at75DmzmxY7EQ8XYAg2YOuLZ8o
Jia+e/d7QqGjldWFs2f9U1JSVcvs2vUGfuuMjU9t3+6qOFGkXJGRMUOH3heJ
HP/668rSpfegcPfulwMCorJdu6ZcG3SDkJAQdG2ogiFnZ+e5c+eWLl2ac23w
Ws68wowFy90Co7WedSNIHtlz/LxZmbJc32YyMCUDLuBTtpFcMi+VjWnk3amn
iukF5tRavWE3FQ4LI+Oj2d2O+EQ2BMkZpVfTwzhCMh8oLS3N1TXS2voCGLeK
FS/Mn38hODg0OTklOTk1Njbe1dVj2bKXpUqdEQgcWra86eKi5kIbF+TIkY/l
yjmZmJxu3vwyFF669FV8fFK2a9eUa0tJSQkODkbXhioYev369eLFi8uWLSt3
baYlSoyY8N9rP/6zkhFE5zh4+mp5iwrprk1AjEuTv6+RhZg/I7liRiKpfl/N
8Ej4ROjI3FyVu+wWvElxZFoCmZOCd6shSC5gs5G442wk+UWnT78tXvyk9Lfu
BCHTzc1nNm5sZ2GxgpA98IlI5FC//mUnp8AsIri4+DRocF7A5t09UaXK+Rs3
gnKyXnRtKJSqXF1d165da2FhIb8eYWhk3Gfg0MeegVpPuREkjxw5d8OyQkVZ
34bXYhZkyG10bUguGRbGpsrkbJreaTapSKnLxOoWu1utrz+ZnqD9GiKI7mO+
ll56hzP/5xclJqZu3vy6R48HNWteKVfOqWjR00WKMMzNzzdrdmPAgLv37/tk
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
        "], {{0, 163.2}, {351., 0}}, {0, 255}, ColorFunction -> RGBColor, 
        ImageResolution -> {240., 240.}, SmoothingQuality -> "High"], 
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
       Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
      ImageSize -> {456., Automatic}, ImageSizeRaw -> {351., 163.2}, 
      PlotRange -> {{0, 351.}, {0, 163.2}}]}, "CanvasFrame"]},
  "Canvas"]], "Input",
 CellChangeTimes->{
  3.8654844130461435`*^9},ExpressionUUID->"9ca28ab2-20d2-4e28-88ae-\
42a2e21605c1"],

Cell["\<\
Fig . 1 Simplified structure of a PDR. UV radiation (coming from the left) is \
progressively attenuated while penetrating a gas cloud. This leads to a \
chemical stratification and a strong temperature gradient.\
\>", "Text",
 CellChangeTimes->{{3.86548441660119*^9, 
  3.8654844617228565`*^9}},ExpressionUUID->"2c28aa45-2a62-4a92-a401-\
163ff5b65a34"],

Cell["\<\
Numerical models of PDRs are a valuable tool to model their chemical and \
thermodynamic structure and to simulate their line and continuum emission in \
order to compare these predictions with observation to derive local \
conditions in the ISM. Typically, PDR models are very complex numerical \
models written in FORTRAN or C. Here, we introduce WL-PDR, a simple \
plane-parallel PDR model written in Mathematica to act as a numerical testing \
environment of PDR modeling aspects.\
\>", "Text",
 CellChangeTimes->{
  3.8654832847872066`*^9, {3.865484315861319*^9, 3.865484319919263*^9}, {
   3.865485659384661*^9, 
   3.8654857469567785`*^9}},ExpressionUUID->"3edd86c3-be5f-497f-b311-\
3d5fd0ade6a8"],

Cell["\<\
It is useful to reduce the numerical complexity of a model in order to better \
study numerical or physical aspects of the model. For some numerical tests in \
the paper R\[ODoubleDot]llig & Ossenkopf-Okada (2022) we use the simple 1-D, \
semi-infinite plane-parallel PDR model code WL-PDR.  The code is ported to \
Mathematica from PyPDR (Bruderer 2019). PyPDR is used as an educational tool \
to learn about the basic physics and some numerical internals of PDR codes. \
We ported PyPDR to Mathematica  to seamlessly integrate the toy PDR model \
into our research infrastructure and to make use of the advanced analysis, \
numerics and visualization capabilities of Mathematica.  

The features of WL-PDR are summarized in the following Table (Table G.1 from \
R\[ODoubleDot]llig & Ossenkopf-Okada 2022). \
\>", "Text",
 CellChangeTimes->{{3.865485799834833*^9, 3.8654858567505665`*^9}, {
  3.8654859556223297`*^9, 
  3.8654859844363985`*^9}},ExpressionUUID->"fd0e8221-9299-4bd1-b5c5-\
5acd46e57c22"],

Cell[BoxData[
 TemplateBox[{
   TemplateBox[{
     GraphicsBox[
      TagBox[
       RasterBox[CompressedData["
1:eJzsvWd0FEnaqPmd3T/7557de/aa/czMtJvunrY0jffeexAggSSQQEJCIOS9
kPcOee+99957lUpSlWx57733mdoq4UQjGOihe7p74vnBAaoyIzMyKuPJNyLf
+NjG+ZLd//Fv//Zvbv+X8Y9Lt70Ourre9rn8/xj/YfbQzcH+4d07Jx+637W/
67rD5v80/ue/Gb/7/xr/Yvr7KgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAgHemr68vHwAAAAAAAOC3RGVlJQRB/2xL
2oDm5uZ4AAAAAAAAgN8SWVlZBoPhn21JAAAAAAAAAICfj1wuFwIAAAAAAAD8
lhCLxf9sRdoYf3//fQAAAAAAAAC/JS5duqTX6//ZlgQAAAAAAAAA+OWAFaz5
turS5PTc5lm6BoL/2cfzuwbWqyU0GlOs0L3XZmLcSEl6G0Fs3ArWShiYRZoC
XAcAAAAAvAcGOZcwXJXq5hFR2NDeWlOUlFHSPc80wG/oTvTixb7Wsvzs9IJe
ilgL+pz3AOK2h3jkdY1VpT3JaZ6R6kDl/XzUMmJTrMuNB8GDZOl71aOYMFSU
3oAVK3nLQ9n+Fifv1lDBewYAAAAAeA9gnUqEqfX+z08uZQ9iKQRU0xPXvUd9
x7iajfojgwCRa5vcONlXnZCQi6DJ3qRXgNeBuX32f7OowSr1Oq1WZ3hrzcE6
GX2osGJe+lvMuvBbAIaUSw3hZlft23Din9YkpCXODTS1L6k23tCg0+khGIb0
MmTWjb+eLiQBcQIA/rWAtWJSf38HkiIHPRjg52Lg90f+5fObdRgFBBt4I6l/
+3hXxCBng64dFg6EXTmaPKg29v0arR4MNr0zkFpKH0rd+pezaf1YtkCqkgup
ZBIBuzQ/TxCq9DCk5pPxeCqdiMdReHK9Vowo9T+2xat1kUonrYwOzrPkWrWY
tTgzM4/nqBRiKn4ZPbu8MDuNWKJKBCwCnoBZWlzCMRTaP74EQGoJBYvBEZY6
M93OXDGKk0gjYZtqYHFxGc9U6gxy5mSA7YXrce0koUynV7KJOCKVisMRGEKl
AdKJ2eSFxUWyWLO6qp7Ps1oTJ0gt4pCpNAYFO49iqUCjBgB+UWBIIWDgsZhl
NGqRxNEaH2MMGgGTjMNhMaiZeRJXbdCrJFzC/AwKT8ajxvsGJrFUNou0ONjb
M4YmSzVahYiFQyHRBDJmZqx/aJrA4DDw6L6evqklmlxn0CsEFNLa3XWBKFLp
9UoRDb+AnFrBLiEHB8YWaEKdVjpdGXb7hkPpEF6i0ilFdAKRSsauEGg87duf
aAGAl5jE6c+fXSueorGoi42Rtp9/db5kXmxsznqVmEElE/ErqDkMV6aQcGcz
Lv2w068MR2NJNX/8PvrDAesljOma4G//41BQaf8sCtnZ0lTd1NFen+du+zCx
cZ650ulhF1Q+MlKVEhGV1s7k0Vqjrf/0hX1O1+hwVdQPn9mULwrE2MHAmxbW
AXVUBibf2+LYGY+I0ACPsIS0zNKGzq7anFh7+6DaafoffPRUJ5prqErLKG3v
aU71vLbngn0zElFbWtXY2VmTFW1nH9I4y+CstNge23zMu2ACT2cv1D+wC68Z
7iuIDk0oGRIq5Sv9OTZXzRJGmfALcVLyBgrz00rbxgZqYt2rKCDIBwD8kmgF
K/XZhVWNTWVxPldtklA8uQAzVpKQUtrQ0lwc7+kaUDlFZuIGY66dveCRVl8Q
fc/8quX94Pzi3MeedleuOVWimazlrqAzR64G5lVlhd+5anbbLaqkNMvr4a1r
t72b5pb6W5uqmzvba3Pc7jonNy/w2Jj6aOttezzSC5If3bxy2qeIIGB0xTge
324WXzlOFzEHkoOSq/v7K7Iy6wbZCtCvAd4Rkzj9j//59SkLG0uL6xfO3nBN
7eJrjc/h/On+9qr6tu72Cl9bu5CiQTS6K+zYVz84JPZPzNElf/Au+oNjwFTs
/fR6DU4hwbQ5uvk8Ka5rbaqKC/SNKOjHL/TFZgxwFMzuZF8Hp7h5joJY7/PF
lqhZiV6KKt/1jX3FshiWUnJdHW0D6lkKaaP/mR0WufNsJqox4oD147r29qbK
XH/3wOzuZaX+D3xZIDmxx+l+WM08G4ZUSw1hl8xsCgpCjtiGGGugsSLH1+1x
bh9WJsOEWR2xKpxTrhqkK+2xueMcCakx+KGDTx5ZrBXh6+8dPhi/Xpyk5BIP
V0ef3GkKm4HGvjbyBwAAPiBaXGuoTfyQWG9QcxcqinvxPF5XRtDDwCa62rAK
SduCb5y6U4xnLaaev3A1uFWpl8/XBJ09f7t2nqtRYsJvHr5XvqASoyL3Hb2d
Nq7WSSazXY6aPeojiGScCV/LM/diYqxdfZNL61obK2MDfKOKhthK+XTGzS9P
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
ncVeg0kjUVgi1U92qFRqfl7KKhjSq9Uq7S94fWGdWqnSvv3oILWUzxZI9R/s
8sFalUzAZVMZHIn62WQ0SKtgMtg8kVT5rNIhnVLKZXP4QiGPw+EKpJo3VYIp
3atSLuEzyGzFGwaBtXI+icYVy5UanWEtQazOWDyTzmCxmXQ6iycQCCXqt1Yx
pNOoFFIBg8SSv6EIg1JApLwsYhXWy4XGIkxNxlQEny8QqzYoAjZolAqJgMti
CNQgvZUJSKMQM8lEEpUlkqsNGzQ5WKtUyCSql03W2ABUMh6NTMAzX7k6MCQX
MPFEClsg02hUEgGbRCQxuAKhgMek0tgCiVr3yrJDGoVcJnt7M1j7nl6rfnXL
dwDWa1Wq993orQehlEn4HAaJIdCAt0Z+wxhv4CqF/Hl7gdVysUj69IrBOpVM
pgLTV/8JwDoFBzdRlJDWtiz+VcsVTARf9W0lKf/+V5+ikyIqMiPjmmjy3/4C
r5BSSGiNd/juPzfdDC9fepY9CdYsV5w8esMnMvbxA7OvP9l6zTkoNszb+qpt
YstgVeD1P/33rXcexz4xkhjpcuWideboi+wPKiF9ur0gIWOY+/6/EGPfi0d0
5+XkD+PFv8jvC1LzqfN16bElk6y37R9WLNYneSTVsz/Q+rx6NW+0Iu1JbLDl
bY+iSdrTNO3ylZbzp+xDyjrmlpgqWC+lo2sKUkPDEkurq3NT4oICYysGFuUb
upNBwcAtTLUmXvjMqoWwYY4Lw0q155cHH9eOoU3pMgwKzGh1mK+Pl09ATEK0
n/djL4/7rhlTsrdUAaRiE5cQ7SlXPrlWg92w2Ru43UF/2u5TNTpLYkn0BiUZ
2Rzp5+Pl6RedEB3gE+Tnec8+fniDRPkGKRE905jic/NowDhT807V98cGVhIn
Gx32ffHtAafiEaxU/VOlN/4opmuyI8IaqIrnrVEnZ6z0xVzb+T/+773Jk9wX
mVf0Clre/f3/7dPdjzJ6SGRMW6bzd3/62iost6Y8N9zd3TMgMrt6lCZRP8su
pxUNF6TFJnWyVW95iIC1YsZYS3F+9Yzg3R8iTBstd2SlVSN5H+iNEkjOWGgq
ysqMdjthHjLFB53vbxY9FzfZ1Tu8wpYbDGo+eSY9yNU3ByExNR49b3GgsW+S
KPz7rg74sEAqEa4/6+iXp+MGWe+6iYY7P0P9B2/QsE6MRy1xlKY7jEFGnSFw
No5FGOT4BZJAqTXe7CRsCp5k7Hh/Fz9xPWs85+j3FslD9Of/A0kQZRGdGMOq
ljSQfmqPVeYoVadTzA5XloyQyZ0R3/zZupH8tD+FFNju7AHcy5xLNFSx54mv
L5RQ3v/nAWv5g0WBFw6fzkRwfpGKM8hIs3V2mz6+U4/f6Oh0vPk5itK0qI+c
Q14isjWGD/MTlxG7gszc+ohc7NT0ElMCvxCnS49rlgWm8xZiivydzDzylwUm
ETK2t7nK8LNnnWsX+G/cKa/X/q/WbxSnGp8t1ysppgarZSNKzI9c8iyb4q55
IKwTdGQHOEUMCP9uFQuGnD+/8WZxCv78dCHR1MJ13Nlq2+MXnPJG2fKnRYhG
y0JtfTt5b6g/xmDuw2NAnJ5h0PDynU4dtyzGyzdwGK2EkHP/xKazrq0rgnUf
SyaSbD7/y78fcG6kPw/BiLENVnu+/HjP9TKUqeL5yNxzX++LGloTdUgx15Rs
ceRqYPGEYK3jUnHnE22PbDbzHySJ39zKISULFXXnyGGHRvoGtzJYzVuapSp+
+gGkZM7W2n+xw62R+GFCtpBysT4zzD93hcWY7h2nfdD1Fwwy2hyB8zLvH+Dn
A+t4s1nJxeM0ufG6w2oRbqrq+q4fLqdPPE0BDENq/Fhdad0wSwGq+9cGovVZ
bLkc/47iBMnmG6KsogYkH6h0WMOfKov0KhhUvj5sB2u5881OATkItuwDlfar
8bo4wTohky419msvxUkPQwqZaQCLsl6cDCohl8UUrO++1ciMGz9PnIzlctCl
d0/+YuK0anKK0F2fbiROBgVlKPzK4wH+h14WZ3WVM5R6dofLAG29J6wTJ1hD
Hsi6uPm0f+Ws0vA8HsAcerR966Gg9udxIVgroXUVRLuEVKEYaynQ302cYBWx
2ObAX07FL67LVyFjL3ZXjvGfFWUQEhG5cdGReb1YCmGkMtHJr3SaKjIV8W7i
BKup1c5n/nNvIEqqe/GxRozrLBhgP6tLWEpHlyZFBad14PimmyYQp/W8XZwE
2A5/e7tjp8x8SqelL2MtRnF67GRz8rPvbWqWngb2lHNFgQ8crPZtKE5Gu5VR
Sr0s9l4OHCZLIRiizzUG2NvsO2Ye1rjw1uc7ZcPjixuJEwzJSXVh92MHOBuE
lSQzwZsPuX8gcYI1ou54X5t7ORjhB441wRrBdEWMT36f7GfOLACsA5bM5ri7
l6CVz1ZxNej0jESbg1cyJp+vnQArWOjMhNiyacavld3mDwisonVkx8fGRXsF
hFVNUdSQgTnTlBgRnRDu5xacNUmXmp4G6HOV2cmpydGutp6l41QNvE6cDErS
RGteXnFdUYzXky6mXIKfbIp66BSRneNz/ejBi971M3Q+vsfv0vcfXfAp70Gw
Fc9GXXVS5lhraU5mgucdj4LhlYW+gntmVn75fUvd6XfDKtBMObQKqdmzxUlJ
CUmR/t5xg1g6Bd2X6m/v1oblLHf6Ht+958qjwhoEX8EdayrLLykrivRL7sJK
RaS6SKsv9lzwSSpBEvADpXH3o7Mm6DKDTjRWnRIdGx/k5h2W1y9QaXi4oYwA
r+DI2OhH5jv23EjuxCp/ZiPS8QmTFdGPrkRk5Ppa7Tl4LaYWKdLCsEE6UZsS
FRMf4uEdmtPNkcvxIxVBzn7h4TGuVw7vuuLViv3JEMrr4vSCdeL0vNCn4tRA
UkAQpOfN1wzOcmW6dZu8ECdTcK6mpCA7JcLDJbZ9fDjf1Xz31cAxhlzFWch9
kpDVuSjXaQgj1RnpKWFeftFFgwKV7jVxMkiZS63p/tcDY5K9LbftOvowo4tu
7KBhxWxTuqmxePsGp7XRZSomqi3e18/PK8jp2tGtu20KRol8ykSS/V3ntH6x
iNia5md9x70NK4JfipOWPdf2JLWkrjI7Pq4GQyN2pzl/8r+OeufUDs0ujTel
37dMnuapjM2MPNWS8SQpJcb7rnfWNFPCJ0w9r3PrF3W+rllrmIj6qKgnydFB
3gFZU2ShkopI9zH//NPjXgnlI0uM53HqdeKkl4xnuHz37dWcCdrLetSTS65t
+cvuaOzzvgLWK4czHuy2Lic87efeTZy05E6LzR9vCe1VvTIXRq9WvlyUSMVd
jnN3vvdkmKNWzJd7fH8xH6NcK+LdxElHG7Df/9UXrtWvFAEb1IqXI51aCSUn
8MHNkG7W2rM9EKf1vFWc1MjK4OSWoSwn86N3kjEvn1CM4pRc1p5v/u0my8Rh
oVFfpTNxrtmNRYHH9m4sTqsG+Uyp7+4tV7JGqRqdfKw0NKetN97q0rGH+XS5
7qfFGhTEiab05CepCRE3Tu44ZBQnnYY925KUVlpTnp2QWIcRCnBdqZc+/fKi
d1bPJEHEXazMyC6rq8qIjmmd5+jEyODN+656hT+6dmzXKbvsvhWFDtZKqT2V
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
bHuUu82Fi5fuubg+cA4qG1jkK57fuWADd7HHx+amhU/5HH65Oe7u98fC+gk8
k9g+Eye5BNP54NKu7x8ViV6mNFwvTqaj4y33J/jYXzx/7o6z68NHgbntSK78
RapCSEQcD3e8efFhIZojW/dWnZIzmnHwx28s8lD/uoF7WI4ZrrTf8+XXP150
dPfx9fV2sjz9w4HzAXllT2zNb3ikzNJNLr1qkBHHSqy/+PiLfW51E0vLyAbv
02dvPM6bIYsk2IHcyvpFrlJGnkhwPvfnz/fci29ewc5VJzpu+myThW9CXmaC
p62NS0RG+9QKeWUg0eKSZWDeEke9tlsJbiDv8l/+8v1xv9Z5lvr5MWkE2Joo
x/1bN/14/u596xM3A0smkSNpbte+/faEd2JB2APrs5YxYyRcW7DlDztvPGkY
7isMO7h5+/n7kTnJfteO30htHepM9bpi5ZeSmZmaXtQzT1PpDcS+lIu7dh27
GVCQEXRg0znfjPKEMJfH6WX1+ckpDXNMwkSq89Ud3xtvy97NM9R1ESBIiBuL
dbx6+LJPI5KuUstQzSmezs6RCYmxaZVIulBEHAmyvHTCOqxznq3VSNFNsedO
XPAuH2Mw5mJuHdhzJX5oGTta4vvVJ1ezeme68vwPb91/5WFieYrrrm02uf3o
mfq44zsO20e30DdK1wp4H3S8scw7MQOCtbsErBGT0M32+3845VuEpPDWst3C
ItJobkJCP+Eto/oAAOBDsG6o7i3fMonT86G63wNr4nQxoHLxzZma3r49p+vO
2lAdpJXieivrFzjrPjSJ049Xy0ivvSz1fkXw+p2eDtVBOilpJLV+VmV4RZz+
ejIP/7Mi7vT+LKenQ3UGNQfdktlF/ZcOOQEAfwxg1VJbccscTap5/QcNa6Ts
kdbS6jEayEUAAPzSwFpms9eF7Q4pLOXbPEDBmva7edk+aVj4+0iuBqsoYwG+
8aVDKDpb8n6CA2nFPCYZWe9vGTHGUKv5xMkZjPgVq4Ro/ek2HkWTeIZQ/rNW
qDDNsmGTZ5qDLYMHaOpVjXBpGkXgydfVLCRGFFg8yB3F0gTS93lWh9R8Jm26
OSfcM2+Br4PljPGhWR6Y7wAA/CHQyTmo8Uk8V/HaPUHPx0+NzdKUEIjsAQC/
NAY5d6U5JcQzOm9ska5+YwcLsRe7k0ODYvPal9jS34U6QRoZm07C4/EUhuj9
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
TqyemM/ePbDVzMK/fFpm8EZYx2cT8dS3aSUFAAAAAOCVQJLldq8jR66Glk8s
kRlMJoOK6yvNqp3n62SUhkhPh8CcaRJTIOBSZjuCr7uGlI6rdBrGdEtibP7o
qvjNpqlDMlJfgPkJK78c9OLq+imWhypzKiZZOgWrI8nf8U4yCkcTCPnUxb4Y
J4+ArEGRWs9b6kqOTu9bFmzq34OkhG7/k8dsAgow2PWsUnCDZVmV0ywhvt/p
9PHz92tpYg2CQGo6JvDC8cOehRShUsaeL0tKqB7Eb5obBklWOnyOmV55UDr+
+JL7SzOrZ9iC5W47MzOrsCamwZxgSEUdvWN+7KhPKVOseaHBAlGz5woS4gtG
iE+EAeEO3f5qm21a3/JUq9dJO7/UjsXFFqftX/q3EdQqfP6Zz/bE9Ev4+Dyf
W+ZXIzrRi9N96VZ7Dz3sJz+a7IbAWhEu9/qxz60jsWwZbBxETmn0Pv0XU79x
lkQPqxnjlXYnL9qHV8yQaEwWk4afbiis7MfzNGJS6X2v23eLp1dZAgGPMNF0
19U1om5Oqn9tM4ts0ufbPe7Z3Quz3RFnt317p4JFw7YWZ4+s8kX4Vq8zyQtS
wVimu6m1Zz9RICA02O/ZEdxJUiuXs469fyBlTKkWYioLMoobpxaxuGUSky/V
PO77VPOXYh2sz97OHsfO5fic2u1bu8LG1bibbXXLESil2IaIc+aXq+e4G1+I
XkzI97hmes4jr2VoqK2upqqPqaBWh+Sj8EwOYSw2OaEcM17hcfKrU85JJTXV
BUV1g/MScpvFhzs9CoeWUOU2269F149jUfnXDh6Oapvnclfbkr3vVw9VhbqY
HbdPru5G9TSX5zWvykFEBQAAAAD8WEAK5nxZfJD7zTuRDx/GpJYM4zciCyE6
OXuqsyQuKb+qqjQrI7t+dEWmhdYgDaE/58rRa3HVM/I3na4EKdhLDRnhble9
Ix7GxqQU9WLZEIKsx7/kzvVWxCflVtdW5GRkVA1gxWpoDYHo6BI7M9vQ3DHx
M51NhnQWa1JD3G74rKdT3L/E0WnES/1VDzxc3MJyDH9CWvkqpinC1+VWQEr3
LI1PGY29ftE+spLyzOhoSMFaqEh84Gbnu3HJgys8nUa02FsR5ObsHpE/tMyD
NFLSWEOYt7N9UFrfAvOFrkNETh6NcbfY7l31dLQ2LJ6ujLO1cYwprKvNiLwT
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
yZOdpYVFJUVxN7/44+YWJ0RNa0x0P/Tl1w4Pi/vmaQoxuas0t7A4/2FCZtMk
VaMRLw3UJudm5mfG2t+KGWVrHhe2YLYl08rExDaqDs/7hcSTAPwswAoyKqu4
cqQ99cB7B0J7qI8GviDqleG6osLC1IT08r4luRbWKTiYzurS4tzI8MzORRpl
vCEsJLJ6hsalzlUn3vVNGKRwSMP1WQ8Kqirj7nqH1a8wqEPNDa09hoovo3OR
pzPcdPzl1rKy4tLc1OTiSRqPh+uJcrrxoGKMq9DIyGOp6bUTy+MhJ7cfvJqJ
3exvsFap1sIwolOwxtoqiosLk8LiSvuWNTACKdjozpaWrq76nLTmWbYW/k5x
0nHnUTOcl/RnvVqcICl1pq6ivLo892F49hBesN5DJsO2V1U2NeSmREfEJqZU
okSv9g09s9dl7426ZaOlrCEq8lB1WERodu/kYFWivUfcMFX2KKd68WxdZmBM
86pxkU1YQR2NdfVP7yEpn2u1VlJKH4uTXrKa7W5n41tGlRhKV0Nojz9/3LZ0
mv3syyyi4i/n3LOJbMfJNErWaE1yfn1rU1lZ4whHbZRTjYSQ6nftbj1WtgrE
CfBqIAEqLTKjd5FLXSy553Y7rJYlWQj48k/HQ2tmFoYznU7tC6qdHy6Kyh6g
cOmYQt8tBwIxQo1oqf3aUYvrD1vwuJncO7YHzP2bRhexfennvnRqIyvU5AGX
o5b+lYtaMakgPSi+EyugD0bkoZmL9dcvmN+pnhIolaSWsK8/PRld1lRe07FI
nk+5umff3Ra2Ti+eKvPMH1C8QaTrXxKIXjiXcPLUheAGgUShYs9FX7/mFNsp
kArrQmy2Hg1qn1meq4/a9qlZeP0Ufro9yMIhuHiCMlF+P7F7lcuYqgzZttez
n6XenKKcNVkQFVKDJvG4hEqfowZxIgpWCnJK2zArTMpcvLOV7f0mimAp79yX
nzuko+cwJeH2e8z9GrsKPMNaiBzWfEuy6dHbpbMc8erQHcvjF++WTWExqY7H
jkYOihEFriE5KLOBzGYvj5RYH7UKrlkUkZq8QpuNB7alHjd1KcKsorLcd+6+
UTIwN1UT/u0XHv1syVLrQ5MLTkUYovyFJVIQWEXqTTn8rXlgZVdbdnxwbHJO
wwSDR+2MubbzQsYcDZttc+GCbwmVK6JOV9pY2TwcWFVpBNX3Tu65UUtVrFY5
m/7jREA/qqO6Zoi02Gm375BVZDN+bjD05k3niE4avsM3tHaFw17qL7h42jGl
j8TDtke4JA8TWVzq0IPd7x7e3FUHawhDGbYHD8f2LIvl7IFEZ9/ySTaPtdCW
YnbWv4PExbU9PLnLNKSotjijZkH8+H0W0Uum80zfd2pc5qt1EGwEgl/zRmz4
/YBeuwPgVwqiXOpoqqwa5ctXUy7u3ONYsao23O1a9kimV5bBhSiD+UGnXROm
OXxMbUxM7SSDvVIfaHsgqI6w2GhnbRncsSJXC9vCzm21Ll+VU+p9zD828+0Y
bKusaOspC7fxeYghsTElIVecqklsXGFkTss4nkFAR7s4+aWPcCXkQqcD2zzq
6FqdZK7Wv7CHjO+w/+vfTt6qJK+PbjC42kp/gb3FoS0nbiR3L2BqYjyiWlbY
HPpUjeMBm0wMdaUz1c4ruHeJjmuIvnC5iKCAvkucYCmu8Z57GuaFXrNXiZOG
h02PSchum2ZxmMNFYTevhA2RxZzRdFP3Ahx7tS3e+4pT1PAyT/fKTnlEik7e
9WnQKG+jxx82+In77qNeyZXdzcUu+9wq559k1fB6xB8sib0X3bCAHY51vxtZ
OibRQs+nt0mctHxcxM2L5+9W042upV3tSTpx4GzqCFXzbF5gvVrIZfLlGghB
EJ1SKBCJJWKp4tEIBEjJLQlxuni/nb7SCsQJ8Cq05K7LR8OHeCrjT45UIpYp
IP2TrjopOuX6ny+HxwedOOgak19opKS0cUmoU64OXDt260ENVqNRDKX5nrGK
n+fr1vj9du8eiB/lw+yx20es/CoW9XJWdeRts3NeOW1oIlsqJHU62lo+6CAY
3vN5gwm7t7j00DZe+RH6YOr5ffY1c8Sh/OLORdav7wdJvpJx1sL2YZ/h7QYR
rcTZ2TlEdwqVqs6YW/ss8vAKGMLX7H/vXPmyak1JKrxyyTaksiHcfLtD5Eap
FhbWzHIUUi5lftrIDIkzUxF28XTqogR63FVXODldc9Xxhl9cxsb30Dwww5Ov
lph/cjBtHDJU94TOS3sPfvPVBx9fDX2cZtUoWaxgTwVet/HInpQiqsG4C1su
VqxyZh6cdY+uwepg+HFX3eRE3vWPr4Q8ORBFFMyV3DM1Cx7n6DZyXrYsNqjR
UVvPuuWXdtXpWaPZhw57VC8LlNy5KJ8LlwISC4xJFVU19pPZhOLrtrb3G6Ua
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
zmApMdPlnik4cWVyFgmDQhElKrWYQ1mdm8eSCPNjo+MLeJFKvz6VoFrCpBDJ
BDRiaQm5ukbmKl66R4HUYnpP7OVPjiSNklliudx0YmDwBAxqedX0qfUGjZT3
/7P3lt9xHXmj7h9wv5x11zprnXvOvHknMJAJTJw4ju04tmNmliXbsiQLLGZm
ZmaGVouZuSW1GFrQrGZmZt663ZLt2BM4SWYmyczs51vD3rs2VNWzq35VRbY9
AoSdtQ0MhSvk0DFbmxgSeWdlYW4FzRWLSDvL07AFFE1kfQCMKgFpj0y3Ps4U
pkJvVDAWY93vPykcp4hkCjFvD7WF4dumdrHoZLQ9a4bZQyPRdJHKZNTwGSTk
5vbeHnZ5Dr6KZmhM/2YFHQjIfwZ6eqvnk3QY0/TaW6RJzYN31te3LggP1lMw
SshV2UlpnTvyV9ncKJjODo+on9MeGA5gkKKnu1vXMR3pD+9VHIqTtTJn1oc6
5UzT9C99y6xkdqZlZlUuiqxfmdS7fXl2Jz/783uffPUocY4qfaFOckTyee92
vPzfa5Urmzi9dcSntLk8yvXR5aeZcxSZmLoChXSPTQ3XxAfYBTSQRNzxhvzE
gnb4XEu4c8wUVcJYht784tazZMjiHpu+0Rtg75XVvkm12tTVz67HVdXkRT+8
9CipH229rnLqSlNpiXVfHUkeF24EVo2ssOSvumashTwP0V/m8Ok7b13NQIhU
UsJUuMPzqLIhmuwbdQFMso3eBkhn/0hbkat9AGSDJSGtQvNKoH3DQ9DCyOCY
lnW2Wk4dgNSVNPVODrXlRMTkNcC4auMLcaKoFNztBu8rX2ZOalTMqZKgC3Zu
RTVVMT5PHz5OmmNoAA1rNDu3qHNqCJL56KFTZH436ud09xyK04mA8t6xA0bq
E4787yM/IE4WowzRnXX/9t2wnKLUsGeXbjnnD6Pp6LHwe7edU8oLIn1TGib6
O5uK6zonxnoLo6LSSoZpMjljabAJ2jE00J4W7J9YN8fnoloaOoYnx1sLk5y9
82bJUgF6vCCxemxpqjSkapEl5WyNFKbWTSxNFgVUrgrkbOx8S2vfxPRQeajH
0/h+KofY2VxRPwBbHsz1aUS/qtABi6wlwf5u9oIMsOWgnb7sq1/ciC0oT/Z3
uXbZtWqRgJspu33XsXCBLGajC5+fP+vZRxYQBrKevX87uru/IdbT8c7T0NIG
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
L2Ocfi4W5qsYpx+DWU9vjwltnKfKFNYnh2fNvPUdu1I5c3l6Yo0i/BfKgiri
RLxPyRJDopBKJXwyrK26FyOS0ncnR5boUu3/fXsQEBCQn4yJj4GPjMOJIs23
Qk/MEvLKwBBsl604GAmnJsFHJxcpBxFRZhVrZ7R/fJut/NteNUDL3V0YGJ4h
y2wvkoBetDMzPr7Ls75DW99fhXubQ/3TRNHfDquyvl+TtxdGRlaY0p814uo/
FYtBttGXff/cyY8++PD4g4Cm8R2uQvsbq/UM/I3uCMerH3301xPnHiXUjKCY
UuM/sisW0AuxdUH3P/7DHz769OuEEdJrowp1mP6UaxfuN6yzfqNv9oBJIxcJ
ZXJiX/yRD517MLKfPSjCosSU3vnr8eg++Y+7/YBZNlcWdOWro9YH57pzbBsc
K1UbDFqFWCrT/0vNL6QXo4q87p/6+IMPP73kGle1SuRpTEaNQiqRa8z/Ri3X
ICAgvykAs14qFsnU356T0KIS8SRK3YtiFNCJ+SL1q9kpAbNKIhDKvtW6ARhk
QpFUdTg3prVWU1k/6V6NkrMYFGKeSGX6m432jXqZRCzTGMCiDuQfhUkv3IXD
ZqzMWwX/tyvkgJq1Dp+zJnN2FcmV/bxGJ72AjFqEwWZgs+so5m+qxREEBAQE
BAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQE5NsAFrNeTF6eQ0u+I9rH
+qNWSFhbwIosGlZ/Zk5By7rqH7GuNCBcjr8XM0r9wQGDgAY/Uh6V10pT/B0D
6EBAQEBAQEBA/mFYVKytuoirb31VRPyOwfka+lq731//1/UmrNmsomyvbey9
XFDx7wPQ81bH5kjybw18OEiSTixU2Ib2mWQ05PwGXqH/kdMGgICAgICAgID8
s3m1zM13/Wim1F9+1yZOv1BiAIOU0BWVO8UDFyMDAQEBAQEB+WUwyenbYxPw
teXpocEVjlRM3plvr6ganB6vzEjNqh4liTQAYFHx9+ZHBoeH+8vDr//36eLX
xQkw65jopZGhoeHBmoBP/9f1JrRKxtyc7CgdXZfqTHo5exsOW1iagZZPUVV6
nZSxCZ9dWpqGlEyz9GaLXoZfmx0dHelvquqYw8tMwD5gklG2hofHhvvaWgfW
eSq1iI4aa6+BbgstZjVzZ2lyfnllpq8PTlRqxNu9WSfeup09AEdR2KStmcby
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
7IOqmMoXl80iMGetK9T+ypfHbFIHifpftHbWJFxttLzgYRYn0MUCAAB/cBDV
ZkOkb+Hi0+SBkAzXn5ude8ffOaQLt51OHFGy0EWpqW1rgl8WzgcAfiGIUULs
qqysqa/KScvqWWZoNaK1qY6sqOj8wiw/R2e/hEa8SLbenXTmxHHbqLJZIg0/
35ebm9W8IUYQg2B1sLS8ujQ/p7BpXqA1IXrOWH1la09XeXXLLElkgl4WJz11
OPv4X48FN6wbn1uSajHD8n//98WkiooIv/DCvhXKdG106RBZpJTR5wvvuXln
dbGUBi1/vba8aRwn0CvZ0x31zc1VqalJKWkZ5b1Ly7N9zY3VWXEZ9bNU2KTn
E2dr0lOKa+sLo3zsXGO7lrkv+B6iWCm9+8mfz0aVVZQUVfajiDL94/4LYtKJ
FhtyH+b3spVa5nSB1ckrBQtcczWNanqG65lzdqHWxy08i+aN5lsYlk6n3Tls
/WCJr37hu03q+cbEnPqOCKuL5+81CLSPlQeSkhcaa+vrK3KScnopMiNiFK92
1xTX1BXmZJR0o0Xa7aAXb72nuqyqsiAmuWSMKEGeixNNQEbV5uZXN68JBITR
1oLIe6W15Qlut7zSOtAKvcncEaOvTnS1ttRmpiSkpRVUNK9ytb/iJQMAAAD/
aBDpatypG1mzgsfdTZMIU1nWhtpERYe5PRWnRyY5o/xh2L3McYH+t+llAwCv
Qstse/Aw3aw9Ig66M9PN7X7nGps/k/3FO8fjW+fQIxWuh4/dKphirDbZWVmG
ta1IdXoRscP16MHoMapwpfledjuJy8EM5Nu73GvFcqjd4fssizAianfM/fCc
fplG+11xQlTLFUF7/sehuG7Sji3wdNgy+//xH4fTuscL3O3tgtKqHsa34kQ6
yGTScYdiLN+1zCLrTRrqZEZ1yypHhm4Ms4rvo3FWCpyv34hpmu0tfJg3ShOw
UNWhXxwMnpMYdZzFqBuXz/kUrWBXS+/ftnSrJqt2hHaV+LwbJz8+GzJNoK72
FdnfdE/s3FBDCKQRzLakOZ/Y9e67l/KmaeSe+FN7L5WiBeZqGjXsXNdTBw7e
2rvnnFf50pY4IfL5bPcvzviOseQ7TyekxpXdzcdIRXMFvp/t9xqkKx89gpW0
6cyi6rF1BhM/EGBrHTu4vtaWeCe9lSkQUtFd/m5+SR3rah2/OeZOYteaQMhG
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
necbzCqz+OSvX8UuSp+dIURBm/Q7v+/k3SrGS5PozDLP3Rhvau9YYcoNOvZI
afXgxIzZM2RaSEXpsPjXd6+FDQq+M/IEc9qc9/zn+yGzouc/goa3HHFt3yHX
XLz458ec9LyldN/7+c19damRvvkDYq2WPt+dlVzWP9YR65i9olSRJtuzUysH
x9se2mWvSOktD9yu3ohDM3mk+RqbL/5+rwfH3uiLOHf02oPiqszQm5euON1L
qizP9HKyunorpJcgENGmM62/PlW8Khdttj502GfjV1KQdvvaVTvvLDRfa/7d
22MTshp7q9LvX77m+CCtmSh/cvUialpzxP2H5X299fkhsYVzz2YJGRXY7pRd
fznnl9uKpksEZnE6a+WTkB7p7XT+nH1sC1ahYPQ3Nzd1dNUXJN5xi2icWl/r
zbq4/0xgbJynf2zHzEJPrv/+PS7pZYXht22OXvTJq63JCPG0OOcYXz0v00sn
C4ID0+qGWgr9A7LGzVYhxj0WJ5FatNaZfOmIS/fiSk19RXlzT2vJg2Mf7HZL
G+WKGUNtrY0dXY3FKe6uYbUzdJ1Js9FbnJ1f3tzemO534d8+Cf2uOF3adcA6
oWloeGRkZLCnwef8ofO3635AnCAZta2sMKOssb2hOMovLLdplsfBN8Q4Hjvh
9zAqxD+pbKIj8/z/+8wlrRNDZuHN4vSZQ2pF1l17q1PXQ1rQXL2K2Z2Rklde
31KdE343MKN3XSmn16YkpVaj5QYNZbra9cLhGyEJDwMcj5+4eL9mWSSmNGUn
xxe3jvfl+bqlzLElnJUu/4sXnGOyHvq4RuQ3ZMUnJFf1DLdlBPrnLQue9A3M
F7a5EfaysPUOi75rcyu2dagiOSylsmOgLPaWfw1ZKpypuvf18cv3C9rWWSxU
c6L1rTvVKzwNfzk3KaO4vrk+PzXIO6ZxjgayygD+0DyNOOlhRIJPcXJySxwQ
a6SVfqePutZRNMq1Cvd3TmfgBLic+ICg9LqB4f7ypHue4bWbTzfhhdSclsKY
1HasFjYpScPZhRNYdJt3UFT7mgBGIOZc5a2rzvlDY8XODqGdRHNnUM9biLK5
6VE4rZSQnkSckEfQesmX79h1UXUm9oTzwQte5WiDglUe5G4X2MhSaeaKnPZH
j8tNwpF4l/NRjS/sTycasf2/ex/2UTQa0UKx9zufe40Q1nN9HV0ednDUsqWi
5HrCjmlF3xGnA+/tPpWL3THjU7zRYXdw14WoDon2rRen+l8uTsJc10Pnc+Yf
h6hgSFYZeOl8QB/PBEum0t57x29cpBega6+csk8eICplhCS3qw6ZE6SF4rPO
UW2Dgz0t5aH+ITm9G+qneoBIlqMvO90vHiAyuUwClbNS8/VHLvWb8kewfD7f
+8gVnxE8nUmhExZqrO1u588xDYi6LvjCKe8O3HqH14PiFa7SpBXN9nb1z9J1
wknPdw/FTwgQNan0hrVtXJ/OqCMPpt+wcGjFivVrJZ/918XiOTqHyyIOpZ9w
ju0YHOpuLL7nE1o4QtCZEINoM/aOu3vahOSl0TrBUtn3itPVTz7YFY+WPQ8T
yanjPmf3HvOvoMt+Qip7FaX96veJk9PuP70fPi9+/iOouUvhFnsP3s7eFP58
cdJxUSXJDRtc7kJ10KdumXiZbLkh2el6RDeGQltY42nl8xXxznYxfRs02jyG
b5DP5obb2cShORqjciFg/8f3+qgm2WrcgaP2WTNao2y+0OfoVe8hkkTJn71/
88L9LoLeSCk98/7JYozRfGmkOB20CV/iKNhzJY6nrSqXBRCty+KjgFGBToRp
tba9X4XmPjtuREmqjy+dZUlI42XWHv6lS5yndwSiXG8+9qVryaIAQUxCjFmc
HGK7sCoVr+LercveTSvTJRddo5r7+ntaKh7cDcnuXBUtFX725yulczQ2lydT
ayltwe98GjLKUuspA9e/On2vEWvQ8HrM3SefMoqEN1maUr/MFmA6HI745I7S
NKIn4iSBEfVS/tcfOvfg+FyRWKXmdsfZn7BLmecoRMvVFnci67v7etuqIgND
0lvRMs500GmP5k05jGjxjUHv7X4p4nRp1zfX4xoGBoeGhvq76rzOHTq3LU6I
UThSlugfntK+SN8x4K2nj+ZeC8heFagQk3KlMcnSLqyPwBhMuPrphSwUk8vm
i3X8Mdd3j6RM8mHEQDOL0+eegxylgjrlZekaWr1Enc69fCFtRWZEEDW+IXjP
scgR9GjSwwcNK3xzIUp2v8f+r+61rqnUwoUC179/+3CKsNlS1zq2xmATenz3
ny9eFBkYY7e+OeddjhIJmWTsQkVl+zyZQ56r9jlhU4+RPJu/JSUOul+9Hlg2
zaRTCOSVjqqyKSKHMZF/8IO7Y0IVdbLwgr1v3RoPMjfv0/l2l6yq0aSVUs+T
kX0Sc9V0nM4I54NeFXzj73GKJADwmuwQJykh1dl5W5xk1YEXzvr38mE9sdn/
nf0J88SRIO9bcR2LdKYZFpcveTb+pRYuxfrbJo5vL9dCIJ1Ohe9KsLzpPUCS
IubmkTUbaG9zNyHDaveVhJHt6TcQt9Pv0rdB1RIR8Zk4mbBlX22LE8yZun3w
WmQnCVHz6sO9bvpV0xWahUKnz2wqKDr5YuG9O7l96p3eIhpxeDLHCdHh6g/8
+XINTrzekWplH9w93x8b0/7CTPfvDNX5HPnw25Ap9rMHloExU3Lx08N+pQvP
ZODniBOiI/anHf/L4fu1PzhD4ZeIE2xgTBdf+nC/d/7MD07M/GFxEuW7H/1h
cRIu118971kyz9IqaRle12zjeieq/fd4ZG7QGFsXApMtUmifP0tMCmx37q2j
+47deNi7xhE9EydEsVjkd8bpAZprlliIs1T7ojg1jrVFnw8rIEt1WxcQZIQg
+JH4h8QJwpbvftd86rTmM7Ja5r7LpxD/uDrm+ii3NmTYEid3D4/0yZenOckZ
Q+67Pr9yt5mh/k7DrhyLvfzfn3r0054P1fHXWu33HHBKGhL9lD34dJLFgK8/
Pnm7gqT8ThGq5dyb//6OQzvp+VCdlDLkceDr62Edv2SoDoaUq0MtdWadrQz9
xCUDq9DIaHPZXlYHv7kSVDwuNxokpOl0d8sD31iGVsyoXylOckzCgZMe1esI
rESXBZxzDEGxVRrR0n27cx4N6xqIWnH2sThJZ1Kdj91JJko0vJUq5zPnC1Bc
iNFr9Z5FyapUQRpyDk5qw+5YVYAYeKtD5ZXtQ32Vtj53CxZY3ytOFz3ypxl6
raThgdv526XdJQFfe6WvUmiPf1ahXKNfL9v9F4dO8uNfx0TrCP3rl3GLUpOJ
OWa7xyJxmInohUPRd+1ccwkirZQw3VDdND7U5HzUN2vwBXHSLBfuM4sTxdzh
MPJm8o9/bVeI4hpgzWZz+EGvFBSe+rRElXgm9eMPQqaE5mvIQOkM+8ve15zj
pGNNDw7PT7dWZMRnlGNFT+f9I9K5rDvHPFJIEnPREH+lweqqe/7U5mCq1a4b
9bTH50U87rZTnPaErWghLQvlf80tsHhqpsjp4/MlxK3xTkSPqzv4rkVMWmaY
Zx5muwgle9DnyP6YUboJQfSYkj1/ceggCBmrY/X1nbOrPSEHTuXNCyD2pPMB
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
Ie5cOp+KmlpY4rBouOGsyICIGozS5tLTOsMColoo6pe/3jiYqKjPPvPLQ431
lUV+7h3WjiGj+0oymmd5QjIyLqxmho3pLs1B4fgiUkNkSANFRmvP+2H/Dxn1
vRP9pb5r11xvnlfxJ2PWbjxThDGaFRN5l7ccCR5aVKi4wwEHt56twMiUhNwt
723IGFfqBP1JJ9afSiCI1JyJgmObtmWMsq06WlFAWG5Lz8DA8ASGyJYbHr4j
XGp8tddnuyIqB8e7yo6fPBtXMymz3B8tBls5Q+e8fILv9lEXuYypyn1ep1J7
aHoNvzTE1+tk6QIdnXBgz94LsSWIlsaKhqEZqnA859N3j9TNy60O92XfRKoN
+ssnMeNCg57edeiL76NbKUYNry3C/5Bf+vx817kvvj2Zgpwaqr+4+WR4YS+V
jI466X0yqU9oMIhH0z9//3gNeg4R77fK+3oXns6m47r7urEzY7eP7N9zNqoY
0dJU2TCAXTTqaOk+244GZyAHh1vTzn647sa07GEzJWRX8jFhW77Y7l9LVZnd
b0M1n3Dr6MbNx+7OCfXuA4QcRvrk8NDoovlx1HJ/YuczzwTHFvYymLThurLS
6kGhUtyesPez/SUkjdnzTWIkxm3ceC6rg7jImK65/tfPgsakejVzxH+P76Xs
UblsIcvfJ6ain7xIHau9E15QlHThXA3xQUuROzhd+frTK2VDdAaxuyAmuY/G
wTWe2bP/SnbzNLYlYNOW8Lpp9kzr8a/2hNXjDVYTd6z08M5DYSVdk0MVl7fv
S2wlqIyeVm4YdkiJbWe8fW5UYpUWp3C88NC6vdHlPZiuvJ1/9ymaoFKnEKd8
/KJreuaZAmpP+uHtewvGWRpmd+D2K4Vdc4v02aaUjMoRhgssxQv8YbkvlwrS
QHVsQtkUUyzjEREFeXl1g7QlantJWlb1OFsmJPSWx96smxdpDUrWQG125LWw
1KoBrm5lFwhs0/JHa3OiQyJSqgfFnq8Wl0lK66yua+nq7e8fZyo8GQt2aIgD
9UW1qO6+4Tm6xOZyqrn4hryM/Ho0VyZZwrTFx+T2z7P4tKmilJyaQZJCyuqt
Lswq72bKVeTGpOM+p/x8jh3zvXg95mbVjPTx3iEDoa++pLK1r6+3b5woN9//
WnbKMY1JjcMrb349ngxOntBnlJFGOxHNqP6h3qbqRvfV84lJ+C6bVkBoTMlp
GKVqPcPFHwUnCxfTGHIspLiTbH4U4lYGp+WzomLjm4vTotMLK6uq61GjS0rT
o/GS7m9+2eJEYWxuP5Er4S60ZuVX9eI1nqN9HJwkBFS4b2B2w5z+0S5WBqfl
w9fwiF0VmTdSCjy7aB2iS/UrpvE5jYqlntK03C6C3DOx8RnByW4QDCHKumZ4
NgiyatjtRWkZFSNsmZQ+0RgbUzRC4TFxvTnpxe0zLLmY1JSfkd8wLTIYlYyJ
/MQbYbHpSDR9ZaFOWM9pr29qH8XMYNBzNLndqphpLohOLBsh0aZbS+7kVKGp
nun5kE1LHm5IikzMrBuZccfJjimOQqtiY8oSI8JiMlqnlzzBGDbT+yrj4vP7
iXwFF1edEhORXtE7PtaNbBonUmgTzQkxub3zfL37jwLbZeSh3Piw8ISsNsyS
wQ5Bdi22saiicXkwiJZaEH75ciCCu7LIJOw0SBdHGgsjb+dU1tTUNnTiOcrl
tgTYaVHR0L1NyNbewd7mancs5C2naJeG3B16yfdaI+1fF9ZcsQuXScGaaCmL
vZ1dXl1dW9eGZcrulyZwv6eYmAFkU3P3QG9LdW3fLGe5bhikpQ/GBvpcqCK9
fEkn2KYgV6cnJaRVD40PFN/Orhkg0fH91fVdU9iJ3lGy1mJmzfTXIHowMxM9
o1SDC7JpuIPVmZFx6Y1jmFFERdf0Amdxrj4lo6QbL1PJ8J2VqTnV6EWxlDlZ
np1eMYBjs/DNaXEpyEm2kDONLEotRC4IZVxsR15KJmqO4/70R1+4eOaU+/Pp
5x94IyG7R2p98C6DjMKxhpyIyOyWgfHW8pK8mjGx8UHPOGxX4dtLY+KLR2hC
znxfbmo+cpyhUrC6K/PSS/qXlDrl4mTRzciwmLTGcarGoGFPtyXEuf/oPJ3V
BVnVpP7K+OQmvPu7Y3HybnJG7TBJJuWM1ZfmlrRThIKZ5sKomDt1PcP91QXp
hc1zhOm6vKzCpkmeTMKYbE6Mz+sYGqrKTb1dUNc3ODzQjWrrGmKrTWrmVOnt
qLDolIYRitrTjgqrl9BFtyKvxaYUFufl1nUSOeoHdzEuA2dhrDgxLqWgDc9V
eApgkier024mZzdMeQpg2iXUmWksSaw2mG0rbvNgp46HQxTVoHoHBsfnBFqL
XcsbrMu6ldNBEqk9M3BhE7mrND6psA9LmuuvjUssm2bKpKyZiqy8EhRObbEp
mZiW2urWzq6uUaJIsNCZ38N5OKvWHZwur/77kYSSro5WRD9B5/S0m0005MXE
ZyDGsAMNuelVndjpofzbmZW9OJnBatVwBqsyIxNy2tCYzpq8XOSEUL8cnFw2
MWWkKDOvtgcnNthsWk53aUZsckEPehyVc6ewdVYk54/W5calV82wBFT33Uxq
bvssy2iz8PH9NaX1nV19I7hFvfWnqqgBAPBrgFW45HM3u9hKrVqplHJmW4uK
pkQ/fW2BLRqJgMformvomeU8XRlquQDm5SMp87JXGogL6zD5F9fH1hscTrOK
je4ZJnNXtA8sF8CMbaK+1o0WbMBXXdsWVSJwf2XpBJjewXmm4vGELk9wOhte
gn2VCnuwvDdix48KYLr0IsZIVz+OJX/tqn2/DZCRNdnfMTAlMCyfNtjMnOjp
G196zZrXsFk02tGJZut/uXMEWyRTPR0ji9rf2URuWDtflpRQjVHr3J9PGZc0
mJ/fJ7K8WCX/PybIyB0J37tl5+FTV5NKZ3gv2Er5ulaOcfpVdggAwG+YhVsb
eX7Ll1+sXrvNNySjC0tXW37yqwiGTL1pxz9ave1CWgdH86N7d9gpo00gSuo6
+ycoYsPLfMHANoOcghnuaKgo7luwu1w2k0Yh1z6x9opdPt3UUIvsnpwhyyyv
cvVzWFR07EhnU1VpD85gc9qtWrlMbV05xNKhxHU01yI6xqcIEtOL7wIyKbj4
ycHWqqJajPDpFw05jGqZVGX89QsP/yJgs1wg0TwcduX5r1Cqf+01TWCzSiDV
vnyF1pfZhUUjkKp/86uv/JiVP1Ry9oDXF6u/9vK+mFo3SBVq/r2v3bDTpKDj
52ZmZgkMnvZXanuBVVSEz5erI9tplj/GHRAAAK8FdjnsFrObxWqzP6/rHNZL
qFNTBKH22T0eMAy5lkEv+92+4pk/9QjoeY947j4ebuCnLp8rdvEy+3h07P8O
Aw+eOjO/oxf8OzrUlTzl9a2eD6jFYrU7/71D05sCG+iTw92dnT2DGKZUB/rJ
AAAAAAAAAAAAAAAAAAAAfm9gyMDvqc6Jj7mTm5WalFHYUFPcRpSJSYOZMUE+
QSntU0tmp03BnCyNu3bqdDxynKp9dm0z2KXndlZkJcSk5GalJLq3U1fasSAV
LfSnRwX4BKd2z3DMTqtsEV0cE+p3OqFtalG3PGVJL1PobT/baFKXwyjicaSa
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
StSeenouG7b0xu4Dd+ZlZqNKSKdLTA6n1aDiLnElWovTopcJhSKhRCJgU8mL
IpVBpxIzaTQGV2Z2umxGlYgvFIsl/CU6lSnQPllGz/29bdAo3DuXCscCPMGJ
7bSbNSqlQibm8yR6m+se5DBqFUIOVyKXshkMJk9udrhg2GXWqxRKlVwkVOit
LrtJJRVJZGqzgd+ZePiz0FauzmB2H6mEx1KaPCv1Oq06tVIhl/A5Iq2nyg1k
d+9VpVYrJGKR/lEWtKoYZcFXr4Q2UBUmFwTZjGqpRCIRCfhipeVxUUHYaWIX
h3h7JfYKDWYbq3P7e9/nT3M5DBp9SaRzhzcYsupVcpnM/aolaqPriQUtYLtR
4/6V2H1eFXoHBLsveBa9SiqRSkXY1PVvLQcnGLIble7XppRw2DyBext6i92i
V8jlUrFIJFFZnihv6P7TaSUSmcx9lAKZweaE7CbeQMrqD0424cV6s+1+P537
iBn9uTtORTTMskx2C2sg87i3Ty2axKBSFnkKsxOCHpxzyYNzvsLK4ARbxKgI
n396haOFzBXBybMHJb3t9Np1F3LHVQ5PcHr743PtNKVWwe697fPWB4cQVP3P
924FnsGuIaSfPlW38CDbQE6LWiZxv7l5Qpne5rDqlUKh+60kFbAYZDpHZXR/
Jjk0Cp0r0zl/1JXrssgx7fWV9d0zBDyerlz+tR5XEnY6p88KSocDAAB4ruU6
2lhPRXFlXV1h6OnLeV00rZJRfzc7u6K+piAtLOBm4yTLZrfeD054gQxfHfTn
t6+hpXoBpv7I13tDauZVSxPJ530Pn47LS487uWPH3ksZ1VV5108d2rQ1tIMq
4WERVw8ePRt8+/b1H7Zu9Y7rWrI93rdTxZxtyCuoqEPUlyVu/9u7l1vmSdMD
9YjmNmRJ8InzqS1kvUlJ6snzXr0lLKck5tzRTbvCWwkSi57XdfdOKbKnOT0u
s59uFC9URF06H1ZMIKNvH/3krSPJ3RjC0iK25OK2b1KGnU4TizDaUN+Eaq2K
OHkqumpObZQOlxTnIbr7mopTYjrFD5IIrF0cvLpn+4ZDcQ1TTIOG33s3M7e4
uq4k9XrQjdJxlv3BQUMG3kjAtg8/PZvRP7+kpndsf29jUFZx3MXjW7b+kNNF
1ikYzdW1jc2I3KgQv2ulVOXjXjyXgdNeX9/Q3FR488aZoNwprs4so6Hy893n
vqE65cQH/+EJTg49pashPbe+B1V4avfuk6HZPZPTfaiWuqaWmvxk/wtxzbPC
R+NNnEZhX31ZWkENsiY/OiCqsHVGyqd25l7++1vbE8p78Ezp/SudwywdKrj8
6cb9sSVtDKXeHZwOb916I/lmwKl9m3ddrMOxPee8AdmGLA0+cc5zzld0yjwK
TkarRUYeiDqx/2AMQqAXPBmc7hnFs1H7vtsXguAZHEvN1/7Pf60+cTX0ylnf
XRt3BRaMqkD1xF+YZqZ49+c30BL7/YV9WeMtFWWVdaXpF04HFY1QmRM1F328
T8Vkpkf7f79lx6WUmsrs+NN7vt96uYiqfGp9atgkI9fcue571C12kG1Y/ss5
RMOpf9+dTAPFwwEAAO5BRvZQZGLhBFvtsmqxXcimvnl8U8zGoHo1dA+2yfpT
ArddKmCqdfeDE0FhU42nvvPe9Um1C5LNhe7yuV5DsBnEpdf8dpyvYersxtm8
f7y9v3pe5VTP39x48DqCbBTNRvgcOJc1qrRru2J3f3m5Q/rwuu+yKNrz48Nz
RxTuC6sFH/DpO2cK6uPjo1KqOsbGBgrig4LvtHMNLicD8e3b2/Om5RYRJmiX
X0QtQSvFJp84nIicE7EXZnkayKLqTA48fL54USPrvr7pHzHDWs/WBU0nv/om
uc+sohek3Ii82zw6MVKTeu38jVoqn5R9+mpYdjtTJOXMM7QPr+oOHS8v4LxP
RLfU5pJNFxzal7lgcN2DDaTKoNXbU0iGR1cNWfHZb7dmThvcO+F0uYPT7WGB
Vc+uuvjDmRjEXEvUtiuFAxNjPXVZZ05Fo+iPRqc7ZeNpW89n90+M9zUVXDkf
WYnhzDUlnA5vEVihezZa5sZ33cHJoWXk/BCZUks0mmUVkSeOp46xCfVHLic1
D4wMdTXEhVxPa8bpHvS/2UXocp+QrBmR4Z7LSGxOPXwiooeh0mLzv/7nhX6u
dcVf2brUn7nFN6yLpYZhmyc4bT9YNs132Nm3Dqzek1gY4T7nle1jY4PL5xzF
efxK7wcnry+P3qiprynKvhN9M3+QKnPAsqeCk0k6H3d4897gBp7eHZxC/89/
rTpwzPuDv359Kq1LZgIDnH5pEK8r7vPVd/Aal6fXTomN80kckVlhm2K6vq5l
mqWTYsKObDtXjtU4DLi8o+98l4bTWNXzDVs2BNWRFS8QaiHtXNlHH11d/qAC
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
jrekXf7yyeAE2Q1c0iwaPTE+XHHin+9eQdFkTGx1SRdRbDRJF4dRre2jVE/5
cIMIN4kl4NCoKTyHNX3r1MavAspnWWLTcokjyGEkd2fu3O8TXTWwpDQo2MTp
KfRAZ88YgWd1Qla9mDjW0zU0ih1pz88ubBslMakYROndrPKuJbVRxVsYRPUO
DQ00FufmlfWQxQbXPciq5MxisZOjA72DcxKD2SBlYYbbW4YnOuqb+maXpOz7
L3l6amZRq5dia8JX/eVc5SSJtUTur6nvJkrsJilxGFXXPiJQq7jkmcGOzqH+
jsqGHgJtYXoaMzHU3z/qqcf+Bv7SwB+UVTQe6X2+lf6gp3s5OH2792peflFu
aiNG82RLrHimLvxY/ITQDJITAADAq4BNi525NzIaSfMTGZf8TlzJGaaSB2+d
8svuocz0xAcl16F5ZiMLER1RN7qAR5UWDVOsD+9VYQ052+9SKgqHG6q7npDR
vyRTcQYuf/PRgZu1HY155732R7ZSnCbpQEtZbm3v7DwOlXpu1crgBNn5mJ6i
tMpBDO7/Z++t/9s6tr/f/+He+7xezxcO9PT0lCENNA1jwwwOmBJTnJgxMTMz
MzOTzEwyySRbYLHFzKy9cyWHHGhPGuhJ23n/kkjemhlt7Zn5zJo1a82NFF/+
wiScGMiSA9/Z5CBZSuZSmvPtGx4VVKma0BPnlNmNWR5IKmtfQE9Emm3d6V25
TOc9ynoH6xUrnYnHz14Nqx3Fr/YmZzQjF+a68sMvXA/rJ0u0YlJj8J3zV31q
EYjiRJ9LR6+EFTc31mW7Xzzl2bK6jmp0OHfZLiSvvjLz7oWLt4IaCHRMZWlD
z+TcVH+N1+17MfUo9vpEyInvj3hm5qdnlVZXRVrei22aQQ1U+4YldKGJqDLX
//roXs3cGn1tJOTg8ds50zolcyDN5fgN92ESa6U58uAP50Iz88K87173z+qb
mR9HlDrdcktDYJUgRhPg3QDzx9N+2haC5D5W4ybhdOJf//33z/76zZWEHrz+
+RxzIlLvAyuLrAkGsDkBAADAmwBxun1tHDIG9RrxSFqoy90iokRKHmrqxfM5
S213TzhGVi9LJZjYG4ctYpuwFApNIIeeWpw07NH6XqxAtNqdedHWJX+GodMu
+Wz7+F4jTquj1VjtPxjdxcUiQp3dG5f4xg8x++L2bhJOejmjJM7DrQApNg7s
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
mu5t+vbrza5l/cpB7mTWK/q62noFyqEfMMSJAQMGDBgw+EmwaPm1zy8eP2Tn
4OEdlpCcnJSSmhwXV9otkbCK7m2c+5fl53Ia+vVmo4Jf++zAot/MPJRU1zuu
A6VFxSpwOHnwbHC5cegjs2agJdN15r+9t9srjyvXmvXy1iK/le/9ee2d+C6J
2qjqfXn/1M7jV1x8AuKSkxMSU1JTUwrqeXrKJO/IvnvipntIXE5JWVF2YsDD
m2c9MvgTbYRLyZu9T+w84pwrGg65jCVOFGXi1iS53LjhHpxQUFpemBHt7uTk
6pvbrxq+TZrxcVIdNn9+6hlXoR+1qk7CLgk6ucsuKL9nJKQ0ijiBMko6Cx7Y
2Z04f9stKCY5JSUlOSkuNqtZMJxPNGtlrd57vln+pIA/0Jflsu/r426tQtXo
VXXC+pentx8nfZNslzByqyL2rVix46pXfGrwyaXfnfDJaMoPXD518fXYJgm7
5t7eTetO+rVx2gJOb1q368xdL1/Pa9s+Xnghj60YfiGjiRMJOjUk3dx/4OyV
h/7BMSnJiQnJaakZ+R1i235/FpOyKdlt896jQWW9Bguzqo4BAwYMGDD4MbDo
5dyqnOTo0PiMrKys/IoukZoyG+W89vykqMDojIZukcFiUolZpakxL8JSajt5
2leTZpR+oDsj0H6jU/pw3bZFK2U1Foa9CEkubhEqdBaDorelLCYwOCG3rl9G
4j1GpaChOCM2JiYtKysjs7CNpxyy/iYlv6ssN6e4qrqiqLCoslWim7jdAaXl
F8d42O3z7RiOOY0lTuQDs17CbikpLCqvqqkozi2u65bpRtM+i1EjaS9Ni8iq
EqoMo4iTTMoq8bzq5BdZNUJKRhMncmqTSthTmRX/IjolKzsnr7iWLdWMytSZ
dXJedUZMYkWnSCrqrMh6mVneL9OOJk7K/qpn9o6e/kVD3RIoo1pYlxMfGBpf
3NRemZsYl1fT1V6XGBFf2NwvH+gvy0hOzKkVKPVKXnNqRKBfSFRqWlJibnmP
UPUa4kTLwyhhN+clxMfFpmRnZeaWt4rUI8K0mLS8tsqU9Oy63gEjQ5wYMGDA
gAGDvxt0oor01IxG/t/V5FJqVm58QkmfbqQlAE2cPA8vvlzA0f5NZzRLqoPn
L7mW3CvXSroLk9Mb+uQjNIsQpwPnvIr15p/zlGZpU+zq1Zdp4qRXskuSkqu7
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
yVU6dRrf9Nd7/XL49H29mqWeOLFPiATFecjJgftB7HVDr5Ily79+hbR0hLtj
7yHkViIuGN7e7Of0dhhuwpW7YB8Cbqg46Pz2S0Htw+9qDiNBEATx/4x6rC7l
nr2tX0W35gu7Wlz22OrIuQclmivneN0jm502yWK2VDdS/uup7/2ez807eps4
VUkRcgHfmiO9Bt0NrPpR0zu1VCdhAaMbd7G0XGkHkkNR1jVPxamRh7QmlooY
Yg+fYAxOlk64cXGR436HsIK2iSRxUQ7LpeWXQShk6ZnFFah5gm1nIVZB1oBL
1nhYxLrWw6/AKRKaq3ZXBrYeZ6Wb2nLUtTM56SzHzeto0pqOarwz3OEH15SG
N4o+QWZKmkA/gUUt4vke2h/yerpJmpPXp4R7XQ5/3T99yZY3pPiYu4a3zLyI
64tTXwEW/x7noyGuwd418EpniZZnLWD/FAO1MP4IIc8Rcgkn7Vi1pzYOa1Yg
MAviLuSGI6ceVYVIrcGQBIHm8CvW7YLvgw/WIkME5ThybsBgMVaZIrEQVXzk
CTHrNsHfEKeGJKz6HHcy2M2Gzx8gS6QTp44X+OITeCWzWViFcSyZcW7FqbeW
VRclMlQl4iczNEwVgTh5X6r/VZvLvK5p99YXp8kXQcSD6QnktenW+DR7v3Ya
/k8ms3EnXjZjqU4hTnFycg3KlVF3OEEQBPEu4OTdlXcDgpLKxRqLUCsGa3Ii
3d2u3vL3dL4WVdUrV2uuigNV/ic9UxuHZv3ncA9S/GH4GdZbgl/L7qcb60Oi
JxYtZxHqTVVw/wnL/o4dZ5AvwvAA0m/DYCnu89EqhN8ZfLkE68yRVYehXkSc
xz/MmGW9isb2tXCJZ4nhh20Q+wRh4Shq1g+4lwmir7vEFCnU6BfB3hQf/gWf
/JUFtX+9H9kNLN2+IBJ2HvDxZq0yLMmRQ18jQv1w/SZsnVDcxZrYg21guBPX
biM4AnXdE9vnhpvTLx8LrBpUqqVlHqbGS9Z7Vuuth431CCK8rybXDU4uy8ml
aff9vcKKpxcwudHW+Gu3H6TV6ZIelagvgtN3+HQFXAMQ6IM938I2EB2jUEjx
6wUYGMDWjxXWtuxg45W+WASvJJbcbboe5o4oEyL6MoyXwdCEJVOPjqIgGpa2
7LR4+6FNb21qpBOOZiw1fsNuBDyBUMCStZcugrkT6maNPuBQkoBjm2CwGQHJ
GHzDotU1Kmu8GXczWW0w1g3rlmPNTtxLxdAYatOxfxNOeKJJCp4vNq7Ayi24
Ec96k0ofYZcRrjxFswBWq7HNHWWFcHPGrUg8DsLDAr2ELE4pqUq7eyektJN5
p1qJrko478PWo8ipYOVEzSfnRSwuuiKvSat5HDPA9nJcs0ZoJgbHZxx/oT8u
eLE+LhZg1PrS0y8otWbBo0QJgiAI4m0o++vyn6blNfTMaf4GNz4qqUiOesiv
ffPeDGjmxrtzwmNfiCRjCxnCpBrra84ODeA1TpwE1Zi0Nt4/pUP/XasVXbVF
zxKeN88TkA3VuKyhgBfLy+scoRTC+VCN1POz07LLJXOyzUakyH2C7FLo2pTk
KMlGUjpm3gQwC25c1lmQlJCSVTvyLuO4CIIgCIKTdwmK+dUds1c7OGV/W92r
CmH/fxMEsvBw6uFWfk5xh2zhjko92l5e9FLUM3kGuNH2sqKKztkmySmGm6tL
y+u75mgkJx9oLS8qb9eff0XMhHvTJygqErT/lgz9J5tTD7QKispEg7NjzAmC
IAjiHaBWKOZ6CEs8fj8jiTnN8S7kgWk3p9ueSvPnW3asUirnC6NXK+dNUCdm
wCkVC3eW1JqNvY+fTYIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIg
CIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCIIgCOLf8y85
Pjts
        "], {{0, 153.6}, {236.1, 0}}, {0, 255}, ColorFunction -> RGBColor, 
        ImageResolution -> {240., 240.}, SmoothingQuality -> "High"], 
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True], 
       Selectable -> False], DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
      Magnification[2], ImageSizeRaw -> {236.1, 153.6}, 
      PlotRange -> {{0, 236.1}, {0, 153.6}}]}, "CanvasFrame"]},
  "Canvas"]], "Input",
 CellChangeTimes->{
  3.865485895189741*^9},ExpressionUUID->"64c8b24a-aeb3-49a1-9240-\
3c01a6a4d1a2"],

Cell["\<\
The code can be downloaded at https://github.com/markusroellig/WL-PDR\
\>", "Text",
 CellChangeTimes->{{3.8654859890579557`*^9, 
  3.8654859975357056`*^9}},ExpressionUUID->"3f117a61-2b93-4067-a30f-\
0819b6e0f852"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Chapter",
 CellChangeTimes->{{3.865483202193403*^9, 
  3.8654832026193676`*^9}},ExpressionUUID->"59428753-6ad2-44fb-9ee7-\
3069ef580caa"],

Cell[CellGroupData[{

Cell["Definitions", "Section",
 CellChangeTimes->{{3.8654860230166454`*^9, 
  3.8654860266776204`*^9}},ExpressionUUID->"ede1bae0-ec53-4e09-a16b-\
ac4963a4ba8a"],

Cell[CellGroupData[{

Cell["Misc. definitions", "Subsection",
 CellChangeTimes->{{3.865494392436305*^9, 
  3.865494399265159*^9}},ExpressionUUID->"34a8527b-276a-4db2-a97b-\
01c5276ea870"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SetSystemOptions", "[", 
  RowBox[{"\"\<CheckMachineUnderflow\>\"", "->", "True"}], "]"}]], "Input",
 CellChangeTimes->{{3.832324717877087*^9, 3.8323247178790817`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"bde0fc5a-c412-4978-8ed8-4f92c76597f6"],

Cell[BoxData[
 RowBox[{"\<\"CheckMachineUnderflow\"\>", "\[Rule]", "True"}]], "Output",
 CellChangeTimes->{3.8654950470798244`*^9},
 CellLabel->"Out[1]=",ExpressionUUID->"a6a3965d-0de7-4801-9640-f7a22d9a5d72"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$lamdaDir", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865487076628372*^9, 3.865487093956037*^9}, 
   3.8654871319507637`*^9},
 CellLabel->
  "In[114]:=",ExpressionUUID->"71385248-ee77-47ca-b7ab-6cd1b874be68"],

Cell["Physical constants in CGS system (sorry about that).", "Text",
 CellChangeTimes->{{3.8654944100358353`*^9, 
  3.865494420626668*^9}},ExpressionUUID->"b533cb05-8ea7-4aba-b7db-\
fcb505107da8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"c", "=", 
   RowBox[{"2.99792458", "*", 
    SuperscriptBox["10", "10"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{"1.3806504", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "16"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"h", "=", 
   RowBox[{"6.62606896", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "27"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"AMU", "=", 
   RowBox[{"1.660538", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "24"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sigma", "=", 
   RowBox[{"5.670400", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "5"}]]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"hck", "=", 
   RowBox[{"h", "*", 
    RowBox[{"c", "/", "k"}]}]}], ";"}], "\n"}], "Input",
 CellChangeTimes->{{3.733224071256024*^9, 3.7332241484130383`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"576ccfad-d19c-4234-b397-18df06dc57c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"computeTex", "[", "spec_", "]"}], "[", "pop_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"de", "[", "spec", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"tu", "[", "spec", "]"}], ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"de", "[", "spec", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"tl", "[", "spec", "]"}], ",", "1"}], "]"}], "]"}]}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"Log", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"pop", "[", 
         RowBox[{"[", 
          RowBox[{"tu", "[", "spec", "]"}], "]"}], "]"}], 
        RowBox[{"pop", "[", 
         RowBox[{"[", 
          RowBox[{"tl", "[", "spec", "]"}], "]"}], "]"}]], 
       FractionBox[
        RowBox[{
         RowBox[{"g", "[", "spec", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"tl", "[", "spec", "]"}], "]"}], "]"}], 
        RowBox[{
         RowBox[{"g", "[", "spec", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"tu", "[", "spec", "]"}], "]"}], "]"}]]}], "]"}], ")"}], 
    RowBox[{"-", "1"}]]}]}]], "Input",
 CellChangeTimes->{{3.738314582312595*^9, 3.7383146254447374`*^9}, {
   3.738314676235053*^9, 3.73831476357952*^9}, {3.738314801585264*^9, 
   3.738314821243973*^9}, {3.7383149812708597`*^9, 3.7383149940217857`*^9}, 
   3.7383151909073744`*^9},
 CellLabel->"In[8]:=",ExpressionUUID->"2c27f276-4a9a-4f47-bb91-49aa00b9076c"],

Cell["Escape probability beta.", "Text",
 CellChangeTimes->{{3.865494448361549*^9, 
  3.8654944518310294`*^9}},ExpressionUUID->"d34aa0e5-0386-4cc8-983e-\
cf4d025d2230"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"SetAttributes", "[", 
  RowBox[{"beta", ",", "Listable"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "beta", "]"}], "\[IndentingNewLine]", 
 RowBox[{"beta", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"tau", ",", "_Real"}], "}"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{"Which", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tau", "\[LessEqual]", "0."}], ",", "0.5", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"0", "<", "tau", "<", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], ",", 
       RowBox[{"0.5", 
        RowBox[{"(", 
         RowBox[{"1.", "-", "tau"}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"tau", ">", "7"}], ",", 
       FractionBox["1", 
        RowBox[{"4", "tau", " ", 
         SqrtBox[
          FractionBox[
           RowBox[{"Log", "@", "tau"}], 
           SqrtBox["\[Pi]"]]]}]], ",", "\[IndentingNewLine]", "  ", 
       RowBox[{"tau", "\[GreaterEqual]", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], ",", 
       FractionBox[
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2.34"}], "tau"}], "]"}]}], ")"}], 
        RowBox[{"4.68", "tau"}]]}], "]"}], "*)"}], 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tmp", "=", "0.5"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"tau", "\[LessEqual]", "0."}], ",", 
         RowBox[{"tmp", "=", "0.5"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"0.", "<", "tau", "<", 
          SuperscriptBox["10", 
           RowBox[{"-", "5."}]]}], ",", 
         RowBox[{"tmp", "=", 
          RowBox[{"0.5", 
           RowBox[{"(", 
            RowBox[{"1.", "-", "tau"}], ")"}]}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "5."}]], "\[LessEqual]", "tau", "<", "7."}], ",", 
         RowBox[{"tmp", "=", 
          FractionBox[
           RowBox[{"(", 
            RowBox[{"1.", "-", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"-", "2.34"}], "tau"}], "]"}]}], ")"}], 
           RowBox[{"4.68", "tau"}]]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"7.", "\[LessEqual]", "tau"}], ",", 
         RowBox[{"tmp", "=", 
          FractionBox["1.", 
           RowBox[{"4.", "tau", " ", 
            SqrtBox[
             RowBox[{"Log", "[", 
              FractionBox["tau", 
               SqrtBox["\[Pi]"]], "]"}]]}]]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "tmp"}]}], "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"RuntimeAttributes", "\[Rule]", 
     RowBox[{"{", "Listable", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"beta", "[", "tau_", "]"}], ":=", 
    RowBox[{"Which", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tau", "\[LessEqual]", "0."}], ",", "0.5", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"0", "<", "tau", "<", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]]}], ",", 
      RowBox[{"0.5", 
       RowBox[{"(", 
        RowBox[{"1.", "-", "tau"}], ")"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"tau", ">", "7"}], ",", 
      FractionBox["1", 
       RowBox[{"4", "tau", " ", 
        SqrtBox[
         FractionBox[
          RowBox[{"Log", "@", "tau"}], 
          SqrtBox["\[Pi]"]]]}]], ",", "\[IndentingNewLine]", "  ", 
      RowBox[{"tau", "\[GreaterEqual]", " ", 
       SuperscriptBox["10", 
        RowBox[{"-", "5"}]]}], ",", 
      FractionBox[
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2.34"}], "tau"}], "]"}]}], ")"}], 
       RowBox[{"4.68", "tau"}]]}], "]"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7332234513610563`*^9, 3.73322362167511*^9}, {
  3.7332236964570427`*^9, 3.733223865271083*^9}, {3.7332239353342237`*^9, 
  3.7332239603657303`*^9}, {3.734773775037508*^9, 3.7347738001763935`*^9}, {
  3.736586007369782*^9, 3.7365860408734417`*^9}, {3.7365861501732264`*^9, 
  3.7365861502824917`*^9}, {3.736659130019422*^9, 3.736659276564068*^9}, {
  3.738333347131572*^9, 3.7383333500564814`*^9}, {3.7383899288091106`*^9, 
  3.7383899350145807`*^9}, {3.83239345583774*^9, 3.832393467332523*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"8974fbbe-a04e-4fb5-bcf4-16d082fb8ca9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", "_Real", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                   LineBreakWithin -> False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", "_Real", "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "tau", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", "tmp", "}"}], ",", 
                    RowBox[{
                    RowBox[{"tmp", "=", "0.5`"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"tau", "\[LessEqual]", "0.`"}], ",", 
                    RowBox[{"tmp", "=", "0.5`"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"0.`", "<", "tau", "<", "0.00001`"}], ",", 
                    RowBox[{"tmp", "=", 
                    RowBox[{"0.5`", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", "tau"}], 
                    ")"}]}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"0.00001`", "\[LessEqual]", "tau", "<", "7.`"}], 
                    ",", 
                    RowBox[{"tmp", "=", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "-", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "2.34`"}], " ", "tau"}], "]"}]}], 
                    RowBox[{"4.68`", " ", "tau"}]]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"7.`", "\[LessEqual]", "tau"}], ",", 
                    RowBox[{"tmp", "=", 
                    FractionBox["1.`", 
                    RowBox[{"4.`", " ", "tau", " ", 
                    SqrtBox[
                    RowBox[{"Log", "[", 
                    FractionBox["tau", 
                    SqrtBox["\[Pi]"]], "]"}]]}]]}]}], "]"}], ";", "tmp"}]}], 
                    "]"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 13., 5596}, {
    Blank[Real]}, {{3, 0, 0}, {3, 0, 
   6}}, {{False, {1, 0, 2}}, {1., {3, 0, 5}}, {4.68, {3, 0, 9}}, {
    4., {3, 0, 11}}, {3.141592653589793, {3, 0, 12}}, {7., {3, 0, 3}}, {
    0.5, {3, 0, 1}}, {-2.34, {3, 0, 8}}, {0., {3, 0, 2}}, {
    0.00001, {3, 0, 4}}}, {4, 0, 14, 0, 
   0}, {{7, 1, 6}, {27, 4, 3, 0, 2, 3}, {2, 3, 3}, {7, 1, 6}, {3, 1}, {27, 3, 
    3, 2, 0, 4, 3}, {2, 3, 6}, {19, 0, 7}, {13, 5, 7, 10}, {16, 1, 10, 7}, {7,
     7, 6}, {3, 1}, {27, 4, 3, 4, 0, 3}, {2, 3, 4}, {27, 3, 3, 0, 3, 0}, {5, 
    0, 1}, {3, 2}, {5, 2, 1}, {2, 1, 10}, {16, 8, 0, 7}, {40, 32, 3, 0, 7, 3, 
    0, 10}, {19, 10, 7}, {13, 5, 7, 10}, {16, 9, 0, 7}, {40, 60, 3, 0, 7, 3, 
    0, 13}, {16, 10, 13, 10}, {7, 10, 6}, {3, 1}, {27, 4, 3, 3, 0, 1}, {2, 1, 
    11}, {40, 57, 3, 0, 12, 3, 0, 10}, {40, 60, 3, 0, 10, 3, 0, 13}, {16, 0, 
    13, 10}, {40, 34, 3, 0, 10, 3, 0, 13}, {40, 57, 3, 0, 13, 3, 0, 10}, {16, 
    11, 0, 10, 13}, {40, 60, 3, 0, 13, 3, 0, 10}, {16, 5, 10, 13}, {7, 13, 
    6}, {3, 1}, {1}}, 
   Function[{$CellContext`tau}, 
    Module[{$CellContext`tmp}, $CellContext`tmp = 0.5; 
     If[$CellContext`tau <= 0., $CellContext`tmp = 0.5]; 
     If[0. < $CellContext`tau < 0.00001, $CellContext`tmp = 
       0.5 (1. - $CellContext`tau)]; If[
       Inequality[
       0.00001, LessEqual, $CellContext`tau, Less, 
        7.], $CellContext`tmp = (1. - Exp[(-2.34) $CellContext`tau])/(
        4.68 $CellContext`tau)]; 
     If[7. <= $CellContext`tau, $CellContext`tmp = 
       1./(4. $CellContext`tau Sqrt[
          Log[$CellContext`tau/Sqrt[Pi]]])]; $CellContext`tmp], Listable], 
   Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.865495047398275*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"2bda562b-a271-42bb-8e08-b50af2d7565e"]
}, Open  ]],

Cell["\<\
This is for comparison with Radex results. Rename to beta to use it.\
\>", "Text",
 CellChangeTimes->{{3.738471792769702*^9, 
  3.738471805599882*^9}},ExpressionUUID->"46a7c3df-aef5-4e09-b7b9-\
f3c0ac7144d1"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "betaRadex", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"betaRadex", "[", "tau_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "tmp", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tmp", "=", "1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"tau", "\[LessEqual]", "0."}], ",", 
       RowBox[{"tmp", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"0", "<", "tau", "<", 
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]]}], ",", 
       RowBox[{"tmp", "=", 
        RowBox[{"1.`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.375`", " ", "tau"}], "+", 
         RowBox[{"0.1`", " ", 
          SuperscriptBox["tau", "2"]}], "-", 
         RowBox[{"0.020833333333333332`", " ", 
          SuperscriptBox["tau", "3"]}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "1"}]], "\[LessEqual]", "tau", "<", "20"}], ",", 
       RowBox[{"tmp", "=", 
        RowBox[{
         FractionBox["1.5", "tau"], 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           FractionBox["2", 
            SuperscriptBox["tau", "2"]], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              FractionBox["2", "tau"], "+", 
              FractionBox["2", 
               SuperscriptBox["tau", "2"]]}], ")"}], 
            RowBox[{"Exp", "[", 
             RowBox[{"-", "tau"}], "]"}]}]}], ")"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"20", "\[LessEqual]", "tau"}], ",", 
       RowBox[{"tmp", "=", 
        FractionBox["1.5", "tau"]}]}], "]"}], ";", "\[IndentingNewLine]", 
     "tmp"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.738333787167264*^9, 3.7383338612841396`*^9}, {
  3.7384002711992826`*^9, 3.73840034621609*^9}, {3.7384717759090843`*^9, 
  3.7384717803306627`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"8453e11b-fe4d-4a38-9a60-8597f3196a8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"beta2", "[", "tau_", "]"}], ":=", 
  RowBox[{"0.5", 
   FractionBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "3"}], " ", "tau"}], "]"}]}], ")"}], 
    RowBox[{"3", " ", "tau"}]], 
   RowBox[{"(*", " ", 
    RowBox[{"homogeneous", " ", "slab"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.738330076238311*^9, 3.7383301343935423`*^9}, {
  3.7383332166903915`*^9, 3.7383332195495086`*^9}, {3.7383333685264*^9, 
  3.738333406970389*^9}, {3.738333845814599*^9, 3.7383338553314104`*^9}, {
  3.738336523372654*^9, 3.7383365255443707`*^9}, {3.7384718256267977`*^9, 
  3.7384718332294445`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"5efdfd60-bd97-4394-819a-6bf0b9ca358b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"beta", "[", "t", "]"}], ",", 
     RowBox[{"beta2", "[", "t", "]"}], ",", 
     RowBox[{"0.5", 
      RowBox[{"betaRadex", "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7383332769669514`*^9, 3.7383333025768695`*^9}, {
  3.738333337301526*^9, 3.73833334141323*^9}, {3.738333428325645*^9, 
  3.7383334471569076`*^9}, {3.832392905577447*^9, 3.8323929190380225`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5b464a4e-4449-4707-861a-740b4b3e8b90"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAVuBf1/qDEsDUczb4rovmvziG+o7N
gRLAOGC7xOGL5r8aLJVGoH8SwGX+0awUjOa/33fKtUV7EsCW9e/Peozmv2gP
NZSQchLAtxaSY0iN5r96PgpRJmESwAvWo83ojua/n5y0ylE+EsAelk8YP5Lm
v+hYCb6o+BHAeH7Y/USZ5r8GnqGanmERwGyUmcM7qua/ynUizpbUEMBvt35h
fLzmvyyeODhTShDAYE3/UfrQ5r8zJnswr2gPwLNR9pOL6ua/WjVWnrxQDsAi
IEyTAAbnv5rdDvhZIQ3Am+bf60Uo578VJ/K+f/cLwNneHZ4tT+e/25WmM6rh
CsAeuEm73njnv7qdOJRktAnA5bTcjNms57/lypuiI5sIwDusCrGo5Oe/S5kp
HmuHB8Bbbl5mLiPov8oAlYVCXAbAYGw4rwRx6L+VjdGaHkUFwJG7Dw9dxOi/
ebPrm4oWBMB5jSvqFizpv5h6MAp/7QLArT9Mtmeh6b8CZ0YmeNgBwDsurmiY
Huq/hew5LgGsAMBzmzV7/bnqv6gu/ccdJ/+/d3QaXupf6794tkELWcf8v/r0
a9iPLey/voDbKKVy+r8y/38sFhXtv5uVF6L6Rfi/MMACPe0K7r+r3A7zb+r1
vwQ0I4MJOu+/U26on+62879nlNyKrT3wv3BClyZ+jvG/1Pl0Pxrv8L99kYIK
W27uv1dljdYnyPG/STMbf8wP6r8amfp966vyv3k5KqN9U+W//4knjZnA87+U
xON7UK3gv6S+4DCT8PS/vcnDF2yu2L9q7EAvmir2vzSmWS1tjc6/qxTquaah
979UG3wQmvy5v4X7Q8ObIPm/zNzNKDHhoD/IHs6mdbb6v4Fqy97m5cY/HMpk
In2P/L+JhChLmynUP8TdMeETZf6/Cov+x8Ob3T82ZOvWkD4AwJazJWvjNuM/
a+cY8ltDAcC8nKE9w4nnP4S6M4WwSgLAfiGnYGM67D8eQKV2dm4DwIgINGZ4
TfA/Bnxo3IuCBMAgTllEn6zyP+8UODQZsAXAQ1EpSLUA9T9m2vYLX9kGwM0J
V/DBLPc/S15abCbvB8AlkMnArof5P1mnTymJHAnA5suZNZK6+z+a44S39jUK
wDLFFNBk4v0/9LVcOd9JC8AmRmrJixwAQCW/7JYwqgzAZwT5fOAzAUCLmKpo
Fx4OwL4DqMG/OAFAExz0l4EkDsAUA1cGnz0BQEGFKi/rKg7AwAG1j11HAUCo
SjGXvDcOwBr/cKLaWgFAHCZQWlhRDsDO+ejH1IEBQJc8cBB0hA7ANO/YEsnP
AUCI4ik/P+oOwIruh1eo1AFA5mPgRJfwDsDh7Tach9kBQDHrK8Du9g7AjuyU
JUbjAUD42xcZnAMPwOjpUDjD9gFAZbJDX/AcD8Cb5MhdvR0CQMj6iJN/Tw/A
8uN3opwiAkBEpzshz1UPwEjjJud7JwJArWSpKh5cD8D04YRwOjECQAstMbK6
aA/ATt9Ag7dEAkCCgjme7YEPwKTe78eWSQJAaBYPFDmID8D73Z4Mdk4CQP21
iwiEjg/AqNz8lTRYAkBPuOhuGJsPwP7bq9oTXQJA63d/4WGhD8BV21of82EC
QAf+KdSqpw/ArNoJZNJmAkBNiEJH860PwALauKixawJACPUiOzu0D8CPC3SG

       "]]},
     Annotation[#, "Charting`Private`Tag$57067#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwB4QQe+yFib1JlAgAAAE0AAAACAAAAVuBf1/qDEsAHyTgA+KXmvziG+o7N
gRLABXmvDjmm5r8aLJVGoH8SwFfbakB6pua/33fKtUV7EsBq2fsN/abmv2gP
NZSQchLA+OedUwSo5r96PgpRJmESwP9PvZkZqua/n5y0ylE+EsCXAGKaX67m
v+hYCb6o+BHAtyTz11235r8GnqGanmERwHyYnxEWzea/ynUizpbUEMC/JcRg
c+TmvyyeODhTShDAK/QaEK3+5r8zJnswr2gPwFJv/lVjH+e/WjVWnrxQDsDk
NWK4gULnv5rdDvhZIQ3Alh8YHFNu578VJ/K+f/cLwIlbxM8LoOe/25WmM6rh
CsBcZTy5TdXnv7qdOJRktAnA7gl6Z6oX6L/lypuiI5sIwDF5qsreXui/S5kp
HmuHB8A3GCElla7ov8oAlYVCXAbAqM9YKLwR6b+VjdGaHkUFwAn2dU/Me+m/
ebPrm4oWBMBebPCRpP/pv5h6MAp/7QLAuDPrbY2U6r8CZ0YmeNgBwF64F7g1
M+u/hew5LgGsAMBGBocnyffrv6gu/ccdJ/+/xvwLHDzJ7L94tkELWcf8v5Xf
0oMrzO2/voDbKKVy+r+gvr4Ozu7uv5uVF6L6Rfi/zg8ZQS4R8L+r3A7zb+r1
v5EC0koFzvC/U26on+6287+Sy+vUQpXxv3BClyZ+jvG/z12J6SFw8r99kYIK
W27uvwjX3e8uevO/STMbf8wP6r/f1aoZSI/0v3k5KqN9U+W/aWSGNu7c9b+U
xON7UK3gv49VbZqiR/e/vcnDF2yu2L99RIod+bn4vzSmWS1tjc6/3hk2Tldu
+r9UG3wQmvy5v4aACr8pJfy/zNzNKDHhoD9PqTLHyO79v4Fqy97m5cY/umEN
AbD6/7+JhChLmynUP7Itge+S/ADACov+x8Ob3T9pAn0zhxoCwJazJWvjNuM/
3EifBuYrA8C8nKE9w4nnPy3S4s7hOwTAfiGnYGM67D89szwClGUFwIgINGZ4
TfA/MGGEIcN8BsAgTllEn6zyP2I/Ycv3qwfAQ1EpSLUA9T9b+eot6NUIwM0J
V/DBLPc/zANfc+jrCcAlkMnArof5P3DU6Y9dGQvA5suZNZK6+z9Za5YdzzIM
wDLFFNBk4v0/6rydZbhGDcAmRmrJixwAQP9GhcYRcg7AZwT5fOAzAUBcTQ56
ZokPwL4DqMG/OAFAT0m9vkWOD8AUA1cGnz0BQHNFbAMlkw/AwAG1j11HAUBG
PsqM45wPwBr/cKLaWgFA0zGGn2CwD8DO+ejH1IEBQMUe/sRa1w/ANO/YEsnP
AUBRA/eHpxIQwIruh1eo1AFAv4JOKhcVEMDh7Tach9kBQDECpsyGFxDAjuyU
JUbjAUAgAVURZhwQwOjpUDjD9gFAIv+ymiQmEMCb5MhdvR0CQJH7bq2hORDA
8uN3opwiAkAne8ZPETwQwEjjJud7JwJAvvod8oA+EMD04YRwOjECQPD5zDZg
QxDATt9Ag7dEAkBh+CrAHk0QwKTe78eWSQJA/3eCYo5PEMD73Z4Mdk4CQJ/3
2QT+URDAqNz8lTRYAkDh9ohJ3VYQwP7bq9oTXQJAgnbg60xZEMBV21of82EC
QCT2N468WxDArNoJZNJmAkDIdY8wLF4QwALauKixawJAa/Xm0ptgEMDoQnQz

       "]]},
     Annotation[#, "Charting`Private`Tag$57067#2"]& ], 
    TagBox[
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVzns4VHkcx/E5Zw6iMky12nTDIqWQyTN60jm1UW1GRK6pVSqrkuySkEux
o2ZJrXGbca1lumB3RSXm+2vl3qB2elZuudSZwZDIEqW1f3ye9/P672Nw9OyB
4ziDweDN7/+69x75Z+YyGzWKKll2jjRwf55JlsWx0aXSA368ea8wFzrkxbCR
l0XzY995vz7fVG4fyUa3pcGC6HkHsLakpoSwkVX1sjQ074jtWi4mfmxUq1zk
68CjIVd8v8llOxuZxf4g93SiQempKZVM6yJbi1v8LGca1HPys3L8dFFY60sf
bXcamkINW9LkOkgev7JD5UODeQ6X6/qdDhqu5cTGH6XB2iTSsjSAhSqLN3tA
IA3eW9xzqpy10Uhx2eH0H2nI6tae9jJYjLw1agJuRtOwzHRcGjO1EFkQx+ot
BTR0Cgut7/RpIYFeaUNRBg2V2dxU//uaqNJfGRh2m4a3TaICI9ECpOm0lZf4
mIZ9mWarT/E1UE+fxfGW1vl/DGHCzkPqqIHTdERvkAZh0vOs1fZqKHaB3jMu
oYALZcOiq18RSMMQv6VrooCMCEutmBEckbP9VmGOCsBPOpiEt2NoW+Ydj2uh
CkhQ2W7C7jHQgZKGD08lCpBs+ly/yvQLqCzXBvz+WgHhFTsWetV/goy/HYv0
v1GCNLZz3W8hM1CfxA/PPqcEkVCvYMZ+Gqa4Z3yjnirhbpf2xNmhSXj4prY3
ZsMguAZJckcrJiBK1quFMgcheGe6SXTye4h4tTKobekQXLx+ScsnaBTcmi3Z
rsVDsNdaP+YZawj2ry953rJ/GC7Yrr950fUtuPPouLrlKkh9OhDpXNwL4pGE
1rMzKqhurNE7XdIOFXqHWZ6DI8Ap9Np4JqkF3NS4R3VZ78BNP0on69MjMPR3
3X3bcAyedcnWWfXlkYS9xi4f2RjEBTb30G/rSCo0b7d/9nu4Er9un8hMTm47
z1pTETYOWoK5+hpRN/moSEdfcHEC0sqMTw3YDJDDfnMnjJI/QJU4367mioJM
ZSW0ad+fhGiDou+PbVWRj9PUJsW6U5C4gHMinDdGJl3/05kInYa1Tl67cu+N
k6IXcdzkZTPwrYvZnnLGJJnkkaGmI5sFmabH2BPzKVKlVkAIYj+DcUojKuF/
JF2sanR7zn0Bujlzy43KWXJAnEwG3mWgzbVL2/z7P5MRNgZZrvkYMnEIbBSs
ZFCOPm7XC8twdJL4GNVrjVEvm9TJHY+YSMqUPAEuRu2PCIfOaiZayvRQz7XD
KF2Vy69hfzERwsqv+e7GKNONUuviZiZa8SW4oMMboxo2reKt7mGilo/Kenkc
RsWuYaewmATivGtnN7ZilM5p1qsNPAJdHeV7SOQYZVRSvqTNhUB9IzZi/iuM
WswJTfvJnUDJqlRjhwGMWr5HFSI9QiDloDO35l+MIgSXog+GEEj0psG3ehVO
edvkp6ekE2h84HyB2BCnFtc+MLcVE2jPgIki0hSngt2lRH8egT70xQdvtcIp
bf6hKM4dAjm9pi4/2IVThjtt4rqqCHSr51192l6cmqszMuY/IdBsd86iMCec
0ikVaG6uI5Ck65OQ44lTdoPCG4mtBJrrvNuxxBenxIU5Nhw5gQ52eq+Z8MOp
oOzRr3vbCXSvQ9P/xQmcqpLZbvulm0B4x0PJH6dwikrkZHP7CfQfmtFu4w==

       "]]},
     Annotation[#, "Charting`Private`Tag$57067#3"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-4.628886712605407, -4.094344420763586},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Exp[
       Part[#, 1]], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[
     "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
      RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[
     "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
      RotateLabel -> 0], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->NCache[{{-Log[
        Rational[512, 5]], 
      Log[
      10]}, {-4.094344420763586, -0.6968064601140834}}, {{-4.628886712605407, 
    2.302585092994046}, {-4.094344420763586, -0.6968064601140834}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[
     "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
      RotateLabel -> 0], 
     Charting`ScaledTicks[
     "Log", {Log, Exp}, "Nice", WorkingPrecision -> MachinePrecision, 
      RotateLabel -> 0]}, {{{-4.605170185988091, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.01\"", ShowStringCharacters -> False], 0.01, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.05\"", ShowStringCharacters -> False], 0.05, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.10\"", ShowStringCharacters -> False], 0.1, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.50\"", ShowStringCharacters -> False], 0.5, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0., 
       FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
       FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}}, {-6.907755278982137, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-6.214608098422191, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.809142990314028, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.521460917862246, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.298317366548036, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-5.115995809754082, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.961845129926823, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.8283137373023015`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.710530701645918, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      0.6931471805599453, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.0986122886681098`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.3862943611198906`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.791759469228055, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      1.9459101490553132`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.0794415416798357`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.1972245773362196`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      2.995732273553991, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.4011973816621555`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.6888794541139363`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      3.912023005428146, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.0943445622221, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
      4.248495242049359, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}, {{-3.912023005428146, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.02\"", ShowStringCharacters -> False], 0.02, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.05\"", ShowStringCharacters -> False], 0.05, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.10\"", ShowStringCharacters -> False], 0.1, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-1.6094379124341003`, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.20\"", ShowStringCharacters -> False], 0.2, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-0.6931471805599453, 
       FormBox[
        TagBox[
         InterpretationBox[
          StyleBox["\"0.50\"", ShowStringCharacters -> False], 0.5, 
          AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
       0.}}, {-4.8283137373023015`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.710530701645918, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.605170185988091, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-4.199705077879927, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.8971199848858813`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-1.2039728043259361`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.916290731874155, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.5108256237659907, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.35667494393873245`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.2231435513142097, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}, {-0.10536051565782628`, 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {0., 
       FormBox[
        TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
       0.}}}}]]], "Output",
 CellChangeTimes->{{3.738333285997563*^9, 3.7383333031862*^9}, {
   3.7383333379420586`*^9, 3.738333371028884*^9}, {3.738333409378175*^9, 
   3.73833344742247*^9}, 3.738471841281612*^9, 3.832322556588234*^9, 
   3.832323406734969*^9, 3.8323237514142704`*^9, 3.8323248823641014`*^9, {
   3.8323928912225637`*^9, 3.8323929200034494`*^9}, 3.8323935363424106`*^9, {
   3.8324966880766587`*^9, 3.8324967080108643`*^9}, 3.832496870369954*^9, 
   3.8654950476425257`*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"83aa5ba4-bddc-4335-8f7d-d1636964fc18"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"SetAttributes", "[", 
  RowBox[{"Blackbody", ",", "Listable"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Blackbody", "[", 
   RowBox[{"T_", ",", "\[Nu]_"}], "]"}], ":=", 
  RowBox[{"With", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", "=", 
      RowBox[{"h", "*", 
       FractionBox["\[Nu]", 
        RowBox[{"k", " ", "T"}]]}]}], "}"}], ",", 
    RowBox[{"Which", "[", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"x", "<", 
        SuperscriptBox["10", 
         RowBox[{"-", "5"}]]}], ",", 
       FractionBox[
        RowBox[{"2", 
         SuperscriptBox["\[Nu]", "2"], "k", "*", "T"}], 
        SuperscriptBox["c", "2"]], ",", 
       RowBox[{"x", ">", "20"}], ",", 
       FractionBox[
        RowBox[{"2", "*", "h", "*", 
         SuperscriptBox["\[Nu]", "3"]}], 
        RowBox[{
         SuperscriptBox["c", "2"], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "x"}], "]"}]}]], ","}], "*)"}], 
     RowBox[{"True", ",", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "h", " ", 
         SuperscriptBox["\[Nu]", "3"]}], 
        SuperscriptBox["c", "2"]], 
       FractionBox["1", 
        RowBox[{
         RowBox[{"N", "[", 
          RowBox[{
           RowBox[{"Exp", "[", "x", "]"}], ",", "$MachinePrecision"}], "]"}], 
         "-", "1"}]]}]}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "Blackbody2", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{"Blackbody2", ",", "Listable"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Blackbody2", "[", 
   RowBox[{"T_", ",", "\[Nu]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x", "=", 
       RowBox[{"h", "*", 
        FractionBox["\[Nu]", 
         RowBox[{"k", " ", "T"}]]}]}], ",", "RJ", ",", "Wien", ",", 
      "Planck"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"RJ", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "<", 
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]]}], ",", 
        FractionBox[
         RowBox[{"2", " ", 
          SuperscriptBox["\[Nu]", "2"], "k", " ", "T"}], 
         SuperscriptBox["c", "2"]], ",", "0", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Wien", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", ">", "20."}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "h", " ", 
           SuperscriptBox["\[Nu]", "3"]}], 
          SuperscriptBox["c", "2"]], 
         RowBox[{"Exp", "[", 
          RowBox[{"-", "x"}], "]"}]}], ",", "0", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Planck", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "5"}]], "\[LessEqual]", " ", "x", "\[LessEqual]", 
         "20"}], ",", " ", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "h", " ", 
           SuperscriptBox["\[Nu]", "3"]}], 
          SuperscriptBox["c", "2"]], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", "x", "]"}], "-", "1"}], ")"}], 
          RowBox[{"-", "1"}]]}], ",", "0", ",", "0"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RJ", "+", "Wien", "+", "Planck"}]}]}], "]"}], " "}]}], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"ad25dc3f-1514-431f-a87e-52863ff18acb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"logspace", "[", 
   RowBox[{"min_", ",", "max_", ",", "steps_", ",", 
    RowBox[{"f_", ":", " ", "Log"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"InverseFunction", "[", "f", "]"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{
     RowBox[{"f", "@", "min"}], ",", 
     RowBox[{"f", "@", "max"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"f", "@", "max"}], "-", 
        RowBox[{"f", "@", "min"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"steps", "-", "1"}], ")"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.733226184522241*^9, 3.733226186412882*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"c1fd0682-806d-49f2-acc2-2a74d5f7fccd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "lambdaInput2", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"CombineOrthoPara", "\[Rule]", "True"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"CombineOrthoPara", "::", "usage"}], "=", 
   "\"\<CombineOrthoPara is an option which defines how to handle seperate \
collision rates for ortho- and para-H2. The default behavior is to assume LTE \
and combine both into a single rate.\>\""}], ";"}]}], "Input",
 CellChangeTimes->{{3.733568416161601*^9, 3.7335684161646028`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"f132c429-7831-40a9-a8a7-6a53994c39a4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fileRules", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<13co\>\"", "\[Rule]", "\"\<13co.dat\>\""}], ",", 
     RowBox[{"\"\<13cs\>\"", "\[Rule]", "\"\<13cs@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<a-ch3oh\>\"", "\[Rule]", "\"\<a-ch3oh.dat\>\""}], ",", 
     RowBox[{"\"\<c17o\>\"", "\[Rule]", "\"\<c17o.dat\>\""}], ",", 
     RowBox[{"\"\<c18o\>\"", "\[Rule]", "\"\<c18o.dat\>\""}], ",", 
     RowBox[{"\"\<c\>\"", "\[Rule]", "\"\<catom.dat\>\""}], ",", 
     RowBox[{"\"\<c+\>\"", "\[Rule]", "\"\<c+.dat\>\""}], ",", 
     RowBox[{"\"\<co\>\"", "\[Rule]", "\"\<co.dat\>\""}], ",", 
     RowBox[{"\"\<cs\>\"", "\[Rule]", "\"\<cs@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<e-ch3oh\>\"", "\[Rule]", "\"\<e-ch3oh.dat\>\""}], ",", 
     RowBox[{"\"\<h13cn\>\"", "\[Rule]", "\"\<h13cn@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<h13co+\>\"", "\[Rule]", "\"\<h13co+@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<hc18o+\>\"", "\[Rule]", "\"\<hc18o+@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<hc3n\>\"", "\[Rule]", "\"\<hc3n.dat\>\""}], ",", 
     RowBox[{"\"\<hcl\>\"", "\[Rule]", "\"\<hcl.dat\>\""}], ",", 
     RowBox[{"\"\<hcl@hfs\>\"", "\[Rule]", "\"\<hcl@hfs.dat\>\""}], ",", 
     RowBox[{"\"\<hcn\>\"", "\[Rule]", "\"\<hcn@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<hco+\>\"", "\[Rule]", "\"\<hco+@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<hcs+\>\"", "\[Rule]", "\"\<hcs+@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<hnc\>\"", "\[Rule]", "\"\<hnc@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<n2h+_hfs\>\"", "\[Rule]", "\"\<n2h+_hfs.dat\>\""}], ",", 
     RowBox[{"\"\<no\>\"", "\[Rule]", "\"\<no.dat\>\""}], ",", 
     RowBox[{"\"\<o2\>\"", "\[Rule]", "\"\<o2.dat\>\""}], ",", 
     RowBox[{"\"\<o\>\"", "\[Rule]", "\"\<oatom.dat\>\""}], ",", 
     RowBox[{"\"\<o-c3h2\>\"", "\[Rule]", "\"\<o-c3h2.dat\>\""}], ",", 
     RowBox[{"\"\<ocs\>\"", "\[Rule]", "\"\<ocs@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<o-h2co\>\"", "\[Rule]", "\"\<o-h2co.dat\>\""}], ",", 
     RowBox[{"\"\<o-h2o\>\"", "\[Rule]", "\"\<o-h2o.dat\>\""}], ",", 
     RowBox[{"\"\<oh2o-h2\>\"", "\[Rule]", "\"\<oh2o-h2.dat\>\""}], ",", 
     RowBox[{"\"\<o-h2o@lowT\>\"", "\[Rule]", "\"\<o-h2o@lowT.dat\>\""}], ",", 
     RowBox[{"\"\<o-h3o+\>\"", "\[Rule]", "\"\<o-h3o+.dat\>\""}], ",", 
     RowBox[{"\"\<oh\>\"", "\[Rule]", "\"\<oh@hfs.dat\>\""}], ",", 
     RowBox[{"\"\<o-nh3\>\"", "\[Rule]", "\"\<o-nh3.dat\>\""}], ",", 
     RowBox[{"\"\<o-sic2\>\"", "\[Rule]", "\"\<o-sic2.dat\>\""}], ",", 
     RowBox[{"\"\<p-c3h2\>\"", "\[Rule]", "\"\<p-c3h2.dat\>\""}], ",", 
     RowBox[{"\"\<p-h2co\>\"", "\[Rule]", "\"\<p-h2co.dat\>\""}], ",", 
     RowBox[{"\"\<p-h2o\>\"", "\[Rule]", "\"\<p-h2o.dat\>\""}], ",", 
     RowBox[{"\"\<ph2o-h2\>\"", "\[Rule]", "\"\<ph2o-h2.dat\>\""}], ",", 
     RowBox[{"\"\<p-h2o@lowT\>\"", "\[Rule]", "\"\<p-h2o@lowT.dat\>\""}], ",", 
     RowBox[{"\"\<p-h3o+\>\"", "\[Rule]", "\"\<p-h3o+.dat\>\""}], ",", 
     RowBox[{"\"\<p-nh3\>\"", "\[Rule]", "\"\<p-nh3.dat\>\""}], ",", 
     RowBox[{"\"\<sio\>\"", "\[Rule]", "\"\<sio.dat\>\""}], ",", 
     RowBox[{"\"\<sis\>\"", "\[Rule]", "\"\<sis@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<so2\>\"", "\[Rule]", "\"\<so2@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<so\>\"", "\[Rule]", "\"\<so.dat\>\""}], ",", 
     RowBox[{"\"\<13CO\>\"", "\[Rule]", "\"\<13co.dat\>\""}], ",", 
     RowBox[{"\"\<13CS\>\"", "\[Rule]", "\"\<13cs@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<a-CH3OH\>\"", "\[Rule]", "\"\<a-ch3oh.dat\>\""}], ",", 
     RowBox[{"\"\<C17O\>\"", "\[Rule]", "\"\<c17o.dat\>\""}], ",", 
     RowBox[{"\"\<C18O\>\"", "\[Rule]", "\"\<c18o.dat\>\""}], ",", 
     RowBox[{"\"\<C\>\"", "\[Rule]", "\"\<catom.dat\>\""}], ",", 
     RowBox[{"\"\<C+\>\"", "\[Rule]", "\"\<c+.dat\>\""}], ",", 
     RowBox[{"\"\<CO\>\"", "\[Rule]", "\"\<co.dat\>\""}], ",", 
     RowBox[{"\"\<CS\>\"", "\[Rule]", "\"\<cs@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<e-CH3OH\>\"", "\[Rule]", "\"\<e-ch3oh.dat\>\""}], ",", 
     RowBox[{"\"\<H13CN\>\"", "\[Rule]", "\"\<h13cn@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<H13CO+\>\"", "\[Rule]", "\"\<h13co+@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<HC18O+\>\"", "\[Rule]", "\"\<hc18o+@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<HC3N\>\"", "\[Rule]", "\"\<hc3n.dat\>\""}], ",", 
     RowBox[{"\"\<HCl\>\"", "\[Rule]", "\"\<hcl.dat\>\""}], ",", 
     RowBox[{"\"\<HCl@hfs\>\"", "\[Rule]", "\"\<hcl@hfs.dat\>\""}], ",", 
     RowBox[{"\"\<HCN\>\"", "\[Rule]", "\"\<hcn@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<HCO+\>\"", "\[Rule]", "\"\<hco+@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<HCS+\>\"", "\[Rule]", "\"\<hcs+@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<HNC\>\"", "\[Rule]", "\"\<hnc@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<N2H+_hfs\>\"", "\[Rule]", "\"\<n2h+_hfs.dat\>\""}], ",", 
     RowBox[{"\"\<NO\>\"", "\[Rule]", "\"\<no.dat\>\""}], ",", 
     RowBox[{"\"\<O2\>\"", "\[Rule]", "\"\<o2.dat\>\""}], ",", 
     RowBox[{"\"\<O\>\"", "\[Rule]", "\"\<oatom.dat\>\""}], ",", 
     RowBox[{"\"\<o-C3H2\>\"", "\[Rule]", "\"\<o-c3h2.dat\>\""}], ",", 
     RowBox[{"\"\<OCS\>\"", "\[Rule]", "\"\<ocs@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<o-H2CO\>\"", "\[Rule]", "\"\<o-h2co.dat\>\""}], ",", 
     RowBox[{"\"\<o-H2O\>\"", "\[Rule]", "\"\<o-h2o.dat\>\""}], ",", 
     RowBox[{"\"\<oH2O-H2\>\"", "\[Rule]", "\"\<oh2o-h2.dat\>\""}], ",", 
     RowBox[{"\"\<o-H2O@lowT\>\"", "\[Rule]", "\"\<o-h2o@lowT.dat\>\""}], ",", 
     RowBox[{"\"\<o-H3O+\>\"", "\[Rule]", "\"\<o-h3o+.dat\>\""}], ",", 
     RowBox[{"\"\<OH\>\"", "\[Rule]", "\"\<oh@hfs.dat\>\""}], ",", 
     RowBox[{"\"\<o-NH3\>\"", "\[Rule]", "\"\<o-nh3.dat\>\""}], ",", 
     RowBox[{"\"\<o-SiC2\>\"", "\[Rule]", "\"\<o-sic2.dat\>\""}], ",", 
     RowBox[{"\"\<p-C3H2\>\"", "\[Rule]", "\"\<p-c3h2.dat\>\""}], ",", 
     RowBox[{"\"\<p-H2CO\>\"", "\[Rule]", "\"\<p-h2co.dat\>\""}], ",", 
     RowBox[{"\"\<p-H2O\>\"", "\[Rule]", "\"\<p-h2o.dat\>\""}], ",", 
     RowBox[{"\"\<pH2O-H2\>\"", "\[Rule]", "\"\<ph2o-h2.dat\>\""}], ",", 
     RowBox[{"\"\<p-H2O@lowT\>\"", "\[Rule]", "\"\<p-h2o@lowT.dat\>\""}], ",", 
     RowBox[{"\"\<p-H3O+\>\"", "\[Rule]", "\"\<p-h3o+.dat\>\""}], ",", 
     RowBox[{"\"\<p-NH3\>\"", "\[Rule]", "\"\<p-nh3.dat\>\""}], ",", 
     RowBox[{"\"\<SiO\>\"", "\[Rule]", "\"\<sio.dat\>\""}], ",", 
     RowBox[{"\"\<SiS\>\"", "\[Rule]", "\"\<sis@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<SO2\>\"", "\[Rule]", "\"\<so2@xpol.dat\>\""}], ",", 
     RowBox[{"\"\<SO\>\"", "\[Rule]", "\"\<so.dat\>\""}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"combineOrthoPara", "[", 
    RowBox[{"orthoRate_", ",", "paraRate_", ",", "temperature_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"op1", ",", "op2", ",", 
       RowBox[{"T1", "=", "18.73"}], ",", 
       RowBox[{"T2", "=", "155.2"}]}], "}"}], ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
       "calculate", " ", "a", " ", "combined", " ", "collision", " ", "rates",
         " ", "for", " ", "cases", " ", "where", " ", "ortho", " ", "and", 
        " ", "para"}], "-", 
       RowBox[{
       "H2", " ", "collision", " ", "rates", " ", "are", " ", "given"}]}], 
      "*)"}], 
     RowBox[{
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"temperature", "<", "T1"}], ",", 
        RowBox[{"op1", "=", 
         RowBox[{"10", "^", 
          RowBox[{"-", "3"}]}]}], ",", 
        RowBox[{"T1", "\[LessEqual]", "temperature", "\[LessEqual]", "T2"}], 
        ",", 
        RowBox[{"op1", "=", 
         RowBox[{"9.0", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "170.5"}], "/", "temperature"}], "]"}]}]}], ",", 
        "True", ",", 
        RowBox[{"op1", "=", "3.0"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"op1", "=", 
       RowBox[{"op1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "+", "op1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"op2", "=", 
       RowBox[{"1.0", "-", "op1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"op2", " ", "paraRate"}], "+", 
       RowBox[{"op1", " ", "orthoRate"}]}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lambdaInput2", "[", 
   RowBox[{"filename_String", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "inp", ",", "pos", ",", "name", ",", "numLevels", ",", "levels", ",", 
      "numTrans", ",", "numColPartners", ",", "colType", ",", "numColTrans", 
      ",", "numColTemps", ",", "colTemps", ",", "colTrans", ",", "clrat", ",",
       "cinp", ",", "trans", ",", "increment", ",", "orthoParaColTrans", ",", 
      "combineorthopara", ",", "opos", ",", "ppos", ",", "file"}], "}"}], ",", 
    RowBox[{
     RowBox[{"combineorthopara", "=", 
      RowBox[{
       RowBox[{"CombineOrthoPara", "/.", 
        RowBox[{"{", "opts", "}"}]}], "/.", 
       RowBox[{"Options", "[", "lambdaInput2", "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "import", " ", "LAMBDA", " ", "files", " ", "that", " ", "contain", " ",
        "the", " ", "atomic", " ", "constants", " ", "and", " ", "the", " ", 
       "collision", " ", "rates"}], "*)"}], 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"see", " ", 
        RowBox[{"http", ":"}]}], "//", 
       RowBox[{
        RowBox[{
         RowBox[{"www", ".", "strw", ".", "leidenuniv", ".", "nl"}], "/", 
         RowBox[{"~", "moldata"}]}], "/"}]}], "*)"}], 
     RowBox[{"(*", 
      RowBox[{
      "only", " ", "works", " ", "for", " ", "one", " ", "or", " ", "two", 
       " ", "collision", " ", 
       RowBox[{"partnerds", "!"}], " ", "all", " ", "files", " ", "that", " ",
        "give", " ", "more", " ", "partner", " ", "will", " ", "ignore", " ", 
       "all", " ", "except", " ", "first", " ", "two"}], "*)"}], 
     RowBox[{"file", "=", 
      RowBox[{"filename", "/.", "fileRules"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"TODO", ":", 
       RowBox[{"check", " ", "if", " ", "file", " ", "exists"}]}], "*)"}], 
     RowBox[{"inp", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"file", ",", "\"\<Table\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pos", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", 
         RowBox[{"5", "+", "3", "+", 
          RowBox[{"inp", "[", 
           RowBox[{"[", "6", "]"}], "]"}]}], ",", 
         RowBox[{"5", "+", "3", "+", 
          RowBox[{"inp", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "+", "3", "+", 
          RowBox[{"inp", "[", 
           RowBox[{"[", 
            RowBox[{"5", "+", "3", "+", 
             RowBox[{"inp", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "+", "1"}], "]"}], "]"}]}], ",", 
         RowBox[{"5", "+", "3", "+", 
          RowBox[{"inp", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "+", "3", "+", 
          RowBox[{"inp", "[", 
           RowBox[{"[", 
            RowBox[{"5", "+", "3", "+", 
             RowBox[{"inp", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "+", "1"}], "]"}], "]"}], "+", 
          "4"}], ",", 
         RowBox[{"5", "+", "3", "+", 
          RowBox[{"inp", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "+", "3", "+", 
          RowBox[{"inp", "[", 
           RowBox[{"[", 
            RowBox[{"5", "+", "3", "+", 
             RowBox[{"inp", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "+", "1"}], "]"}], "]"}], "+", 
          "6"}], ",", 
         RowBox[{"5", "+", "3", "+", 
          RowBox[{"inp", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "+", "3", "+", 
          RowBox[{"inp", "[", 
           RowBox[{"[", 
            RowBox[{"5", "+", "3", "+", 
             RowBox[{"inp", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "+", "1"}], "]"}], "]"}], "+", 
          "8"}]}], "}"}], "//", "Flatten"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"molecule", " ", "name", " ", "line", " ", "2"}], "*)"}], 
     RowBox[{"name", "=", 
      RowBox[{"inp", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"numer", " ", "of", " ", "energy", " ", "levels"}], "*)"}], 
     RowBox[{"numLevels", "=", 
      RowBox[{"inp", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"energy", " ", "levels", " ", "from", " ", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "+", "1"}], ";;", 
       RowBox[{
        RowBox[{"pos", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "+", "1", "+", "numLevels", "-", 
        "1"}]}], "*)"}], 
     RowBox[{"levels", "=", 
      RowBox[{"inp", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "3"}], ";;", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "+", "3", "+", 
          RowBox[{"First", "@", "numLevels"}], "-", "1"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"numer", " ", "of", " ", "transitions"}], "*)"}], 
     RowBox[{"numTrans", "=", 
      RowBox[{"inp", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "+", "1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Transitions", ":", 
       RowBox[{"!", 
        RowBox[{"TRANS", "+", "UP", "+", "LOW", "+", 
         RowBox[{"EINSTEINA", " ", 
          RowBox[{"(", 
           RowBox[{"s", "^", 
            RowBox[{"-", "1"}]}], ")"}]}], "+", 
         RowBox[{"FREQ", " ", 
          RowBox[{"(", "GHz", ")"}]}], "+", 
         RowBox[{"E_u", " ", 
          RowBox[{"(", "K", ")"}]}]}]}]}], "*)"}], 
     RowBox[{"trans", "=", 
      RowBox[{"inp", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", "3"}], ";;", 
         RowBox[{
          RowBox[{"pos", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "+", "3", "+", 
          RowBox[{"First", "@", "numTrans"}], "-", "1"}]}], "]"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"number", " ", "of", " ", "collision", " ", "partners"}], 
      "*)"}], 
     RowBox[{"numColPartners", "=", 
      RowBox[{"inp", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"pos", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "+", "1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Which", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"numColPartners", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "1"}], ",", 
       RowBox[{"(*", 
        RowBox[{"type", " ", "of", " ", "collision"}], "*)"}], 
       RowBox[{
        RowBox[{"colType", "=", 
         RowBox[{"inp", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"pos", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "+", "3"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "number", " ", "of", " ", "collisional", " ", "transitions"}], 
         "*)"}], 
        RowBox[{"numColTrans", "=", 
         RowBox[{"inp", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"pos", "[", 
             RowBox[{"[", "4", "]"}], "]"}], "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "number", " ", "of", " ", "collision", " ", "tempreature", " ", 
          "points"}], "*)"}], 
        RowBox[{"numColTemps", "=", 
         RowBox[{"inp", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"pos", "[", 
             RowBox[{"[", "5", "]"}], "]"}], "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"collision", " ", "temperature", " ", "poinst"}], "*)"}], 
        RowBox[{"colTemps", "=", 
         RowBox[{"inp", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"pos", "[", 
             RowBox[{"[", "6", "]"}], "]"}], "+", "1"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"collisional", " ", "transistions"}], "*)"}], 
        RowBox[{"colTrans", "=", 
         RowBox[{"inp", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{
             RowBox[{"pos", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "+", "3"}], ";;", 
            RowBox[{
             RowBox[{"pos", "[", 
              RowBox[{"[", "6", "]"}], "]"}], "+", "3", "+", 
             RowBox[{"First", "@", "numColTrans"}], "-", "1"}]}], "]"}], 
          "]"}]}], ";"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"numColPartners", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "2"}], "&&", 
        "combineorthopara"}], ",", 
       RowBox[{
        RowBox[{"colType", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"numColTemps", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"numColTrans", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"colTemps", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"colTrans", "=", 
         RowBox[{"{", 
          RowBox[{"{", "}"}], "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"increment", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"numColPartners", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"colType", "=", 
             RowBox[{"{", 
              RowBox[{"colType", ",", 
               RowBox[{"inp", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"pos", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "+", "3", "+", 
                  "increment"}], "]"}], "]"}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"colType", "=", 
             RowBox[{"Flatten", "/@", "colType"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "number", " ", "of", " ", "collisional", " ", "transitions"}], 
             "*)"}], 
            RowBox[{"numColTrans", "=", 
             RowBox[{"{", 
              RowBox[{"numColTrans", ",", 
               RowBox[{"inp", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"pos", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "+", "1", "+", 
                  "increment"}], "]"}], "]"}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"numColTrans", "=", 
             RowBox[{"Flatten", "[", "numColTrans", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "number", " ", "of", " ", "collision", " ", "tempreature", " ", 
              "points"}], "*)"}], 
            RowBox[{"numColTemps", "=", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"numColTemps", ",", 
                RowBox[{"inp", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"pos", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "+", "1", "+", 
                   "increment"}], "]"}], "]"}]}], "}"}], "//", "Flatten"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"colTemps", "=", 
             RowBox[{"{", 
              RowBox[{"colTemps", ",", 
               RowBox[{"inp", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"pos", "[", 
                   RowBox[{"[", "6", "]"}], "]"}], "+", "1", "+", 
                  "increment"}], "]"}], "]"}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"colTemps", "=", 
             RowBox[{"Flatten", "/@", "colTemps"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"collisional", " ", "transistions"}], "*)"}], 
            RowBox[{"colTrans", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"colTrans", ",", 
               RowBox[{"inp", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"pos", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "+", "3", "+", 
                   "increment"}], ";;", 
                  RowBox[{
                   RowBox[{"pos", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "+", "3", "+", 
                   RowBox[{"Last", "[", "numColTrans", "]"}], "-", "1", "+", 
                   "increment"}]}], "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "<", 
               RowBox[{"First", "@", "numColPartners"}]}], ",", 
              RowBox[{"increment", "=", 
               RowBox[{
                RowBox[{"First", "@", 
                 RowBox[{"inp", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "+", "1", "+", 
                    "increment"}], "]"}], "]"}]}], "+", "9"}]}]}], "]"}], 
            ";"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"colTrans", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{"colTrans", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"colTemps", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
           RowBox[{"colTemps", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"orthoParaColTrans", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"Prepend", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"combineOrthoPara", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"colTrans", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "j"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"colTrans", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "j"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], ",", 
                    RowBox[{"colTemps", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "i"}], "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "@", 
                    RowBox[{"colTemps", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"colTrans", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "j"}], "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}]}], 
               "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "@", 
                RowBox[{"colTrans", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{
           RowBox[{"Return", "[", "$Failed", "]"}], ";", 
           "\[IndentingNewLine]", "Break"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"colTemps", "=", 
         RowBox[{"colTemps", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"colTrans", "=", "orthoParaColTrans"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"numColPartners", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "=", "1"}]}], ",", "True", ",", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "Print", "[", "\"\<More than 2 collision partners!\>\"", "]"}], 
         ";"}], "*)"}], 
       RowBox[{
        RowBox[{"colType", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"numColTemps", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"numColTrans", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"colTemps", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"colTrans", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"increment", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "\[LessEqual]", 
           RowBox[{"numColPartners", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"colType", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"colType", ",", 
               RowBox[{"inp", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"pos", "[", 
                   RowBox[{"[", "3", "]"}], "]"}], "+", "3", "+", 
                  "increment"}], "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"colType", "=", 
               RowBox[{"Flatten", "/@", "colType"}]}], ";"}], "*)"}], 
            RowBox[{"(*", 
             RowBox[{
             "number", " ", "of", " ", "collisional", " ", "transitions"}], 
             "*)"}], 
            RowBox[{"numColTrans", "=", 
             RowBox[{"{", 
              RowBox[{"numColTrans", ",", 
               RowBox[{"inp", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"pos", "[", 
                   RowBox[{"[", "4", "]"}], "]"}], "+", "1", "+", 
                  "increment"}], "]"}], "]"}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"numColTrans", "=", 
             RowBox[{"Flatten", "[", "numColTrans", "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
             "number", " ", "of", " ", "collision", " ", "tempreature", " ", 
              "points"}], "*)"}], 
            RowBox[{"numColTemps", "=", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"numColTemps", ",", 
                RowBox[{"inp", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"pos", "[", 
                    RowBox[{"[", "5", "]"}], "]"}], "+", "1", "+", 
                   "increment"}], "]"}], "]"}]}], "}"}], "//", "Flatten"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"colTemps", "=", 
               RowBox[{"{", 
                RowBox[{"colTemps", ",", 
                 RowBox[{"inp", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "+", "1", "+", 
                    "increment"}], "]"}], "]"}]}], "}"}]}], ";"}], "*)"}], 
            RowBox[{"colTemps", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"colTemps", ",", 
               RowBox[{"inp", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"pos", "[", 
                   RowBox[{"[", "6", "]"}], "]"}], "+", "1", "+", 
                  "increment"}], "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"colTemps", "=", 
               RowBox[{"Flatten", "/@", "colTemps"}]}], ";"}], "*)"}], 
            RowBox[{"(*", 
             RowBox[{"collisional", " ", "transistions"}], "*)"}], 
            RowBox[{"colTrans", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"colTrans", ",", 
               RowBox[{"inp", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"pos", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "+", "3", "+", 
                   "increment"}], ";;", 
                  RowBox[{
                   RowBox[{"pos", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "+", "3", "+", 
                   RowBox[{"Last", "[", "numColTrans", "]"}], "-", "1", "+", 
                   "increment"}]}], "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"i", "<", 
               RowBox[{"First", "@", "numColPartners"}]}], ",", 
              RowBox[{"increment", "=", 
               RowBox[{"increment", "+", 
                RowBox[{"First", "@", 
                 RowBox[{"inp", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"pos", "[", 
                    RowBox[{"[", "4", "]"}], "]"}], "+", "1", "+", 
                    "increment"}], "]"}], "]"}]}], "+", "9"}]}]}], "]"}], 
            ";"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", "increment", "]"}], ";"}], "*)"}], "}"}]}],
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"ppos", "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Pick", "[", 
               RowBox[{
                RowBox[{"Select", "[", 
                 RowBox[{"#", ",", "StringQ"}], "]"}], ",", 
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{
                  RowBox[{"Select", "[", 
                   RowBox[{"#", ",", "StringQ"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"\"\<+\>\"", "|", "\"\<-\>\"", "|", "\"\<\>\""}], "~~",
                    "___", "~~", "\"\<p\>\"", "~~", "___", "~~", 
                   "\"\<h2\>\""}], ",", 
                  RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], ",", 
                "False"}], "]"}], "&"}], "/@", "colType"}], ",", 
            RowBox[{"x_List", "/;", 
             RowBox[{"x", "=!=", 
              RowBox[{"{", "}"}]}]}]}], "]"}], "//", "Flatten"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"opos", "=", 
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Pick", "[", 
               RowBox[{
                RowBox[{"Select", "[", 
                 RowBox[{"#", ",", "StringQ"}], "]"}], ",", 
                RowBox[{"StringFreeQ", "[", 
                 RowBox[{
                  RowBox[{"Select", "[", 
                   RowBox[{"#", ",", "StringQ"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"\"\<+\>\"", "|", "\"\<-\>\"", "|", "\"\<\>\""}], "~~",
                    "___", "~~", "\"\<o\>\"", "~~", "___", "~~", 
                   "\"\<h2\>\""}], ",", 
                  RowBox[{"IgnoreCase", "\[Rule]", "True"}]}], "]"}], ",", 
                "False"}], "]"}], "&"}], "/@", "colType"}], ",", 
            RowBox[{"x_List", "/;", 
             RowBox[{"x", "=!=", 
              RowBox[{"{", "}"}]}]}]}], "]"}], "//", "Flatten"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"{", 
            RowBox[{"opos", ",", "ppos"}], "}"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"colTemps", "[", 
            RowBox[{"[", 
             RowBox[{"opos", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "]"}], ";"}], 
         "*)"}], 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ppos", "=!=", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"opos", "=!=", 
            RowBox[{"{", "}"}]}], "&&", 
           RowBox[{"ppos", "=!=", "opos"}], "&&", "combineorthopara"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"colTemps", "[", 
               RowBox[{"[", 
                RowBox[{"opos", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "\[Equal]", 
              RowBox[{"colTemps", "[", 
               RowBox[{"[", 
                RowBox[{"ppos", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ",", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"Print", "[", "\"\<HERE\>\"", "]"}], ";"}], "*)"}], 
             RowBox[{"orthoParaColTrans", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"Prepend", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"combineOrthoPara", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"colTrans", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"opos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "j"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"colTrans", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"ppos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "j"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "3"}], "]"}], "]"}], ",", 
                    RowBox[{"colTemps", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"opos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "i"}], "]"}], 
                    "]"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "@", 
                    RowBox[{"colTemps", "[", 
                    RowBox[{"[", 
                    RowBox[{"opos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], "}"}]}],
                     "]"}], ",", 
                   RowBox[{
                    RowBox[{"colTrans", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"opos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", "j"}], "]"}], "]"}], 
                    "[", 
                    RowBox[{"[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}]}], 
                  "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", 
                  RowBox[{"Length", "@", 
                   RowBox[{"colTrans", "[", 
                    RowBox[{"[", 
                    RowBox[{"opos", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}], "}"}]}],
                "]"}]}], ",", 
             RowBox[{
              RowBox[{"Return", "[", "$Failed", "]"}], ";", 
              "\[IndentingNewLine]", "Break"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", "orthoParaColTrans", "]"}], ";"}], "*)"}], 
           RowBox[{"(*", 
            RowBox[{
            "remove", " ", "one", " ", "set", " ", "of", " ", "collision", 
             " ", "temperatures"}], "*)"}], 
           RowBox[{"colTemps", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"colTemps", ",", 
              RowBox[{"opos", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Print", "[", "colTrans", "]"}], ";"}], "*)"}], 
           RowBox[{"(*", 
            RowBox[{"replace", " ", "both", " ", 
             RowBox[{"o", "/", "p"}], " ", "H2", " ", "rates", " ", "with", 
             " ", "the", " ", "combined", " ", "rate"}], "*)"}], 
           RowBox[{"colTrans", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{
              RowBox[{"ReplacePart", "[", 
               RowBox[{"colTrans", ",", 
                RowBox[{"ppos", "\[Rule]", "orthoParaColTrans"}]}], "]"}], 
              ",", 
              RowBox[{"opos", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"numColPartners", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"numColPartners", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "-", "1"}]}], ";"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "colType", "]"}], ";"}], "*)"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"levels", ",", "trans", ",", "colTemps", ",", "colTrans", ",", 
       RowBox[{"numColPartners", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "colType"}], "}"}]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7335683744631567`*^9, 3.733568392654006*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"756b1591-ac13-43ac-926f-5ecdad34d6b1"],

Cell["Fast linear interpolation for collision rates", "Text",
 CellChangeTimes->{{3.8654945128562627`*^9, 
  3.865494527338826*^9}},ExpressionUUID->"7bde1ae8-d714-453a-a7d6-\
6129502785bc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "linterp", "]"}], ";"}], "\n", 
 RowBox[{"linterp", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lst", ",", "_Real", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"pt", ",", "_Real"}], "}"}]}], "}"}], ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"pos", "=", 
         RowBox[{"-", "1"}]}], ",", 
        RowBox[{"x", "=", 
         RowBox[{"lst", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
        RowBox[{"y", "=", 
         RowBox[{"lst", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ",", 
        RowBox[{"n0", "=", "1"}], ",", 
        RowBox[{"n1", "=", 
         RowBox[{"Length", "[", "lst", "]"}]}], ",", 
        RowBox[{"m", "=", "0"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"n0", "\[LessEqual]", "n1"}], ",", 
         RowBox[{
          RowBox[{"m", "=", 
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"n0", "+", "n1"}], ")"}], "/", "2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "m", "]"}], "]"}], "\[Equal]", "pt"}], ",", 
            RowBox[{
             RowBox[{"While", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"x", "[", 
                  RowBox[{"[", "m", "]"}], "]"}], "\[Equal]", "pt"}], "&&", 
                RowBox[{"m", "<", 
                 RowBox[{"Length", "[", "lst", "]"}]}]}], ",", 
               RowBox[{"m", "++"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"pos", "=", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"m", "\[Equal]", 
                 RowBox[{"Length", "[", "lst", "]"}]}], ",", "m", ",", 
                RowBox[{"m", "-", "1"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "m", "]"}], "]"}], "<", "pt"}], ",", 
            RowBox[{"n0", "=", 
             RowBox[{"m", "+", "1"}]}], ",", 
            RowBox[{"n1", "=", 
             RowBox[{"m", "-", "1"}]}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"pos", "\[Equal]", 
          RowBox[{"-", "1"}]}], ",", 
         RowBox[{"pos", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", 
              RowBox[{"[", "m", "]"}], "]"}], "<", "pt"}], ",", "m", ",", 
            RowBox[{"m", "-", "1"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"pos", "\[Equal]", "0"}], ",", 
         RowBox[{"y", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"pos", "\[Equal]", 
          RowBox[{"Length", "[", "x", "]"}]}], ",", 
         RowBox[{"y", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], ",", "True", ",", 
         RowBox[{
          RowBox[{"y", "[", 
           RowBox[{"[", "pos", "]"}], "]"}], "+", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"y", "[", 
               RowBox[{"[", 
                RowBox[{"pos", "+", "1"}], "]"}], "]"}], "-", 
              RowBox[{"y", "[", 
               RowBox[{"[", "pos", "]"}], "]"}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "[", 
               RowBox[{"[", 
                RowBox[{"pos", "+", "1"}], "]"}], "]"}], "-", 
              RowBox[{"x", "[", 
               RowBox[{"[", "pos", "]"}], "]"}]}], ")"}]}], "*", 
           RowBox[{"(", 
            RowBox[{"pt", "-", 
             RowBox[{"x", "[", 
              RowBox[{"[", "pos", "]"}], "]"}]}], ")"}]}]}]}], "]"}]}]}], 
     "]"}]}], 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}]}], "*)"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.7338216354834943`*^9, 3.7338216648743887`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"16f4de82-5239-403a-89e5-8c42db8edc7e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "2"}], "}"}], ",", "_Real"}], "}"}],
                     ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "2"}], "}"}], ",", "_Real"}], "}"}],
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"lst", ",", "pt"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"pos", "=", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{"x", "=", 
                    RowBox[{"lst", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    ",", 
                    RowBox[{"y", "=", 
                    RowBox[{"lst", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                    ",", 
                    RowBox[{"n0", "=", "1"}], ",", 
                    RowBox[{"n1", "=", 
                    RowBox[{"Length", "[", "lst", "]"}]}], ",", 
                    RowBox[{"m", "=", "0"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{"n0", "\[LessEqual]", "n1"}], ",", 
                    RowBox[{
                    RowBox[{"m", "=", 
                    RowBox[{"Floor", "[", 
                    FractionBox[
                    RowBox[{"n0", "+", "n1"}], "2"], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"x", "\[LeftDoubleBracket]", "m", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "pt"}], ",", 
                    RowBox[{
                    RowBox[{"While", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"x", "\[LeftDoubleBracket]", "m", 
                    "\[RightDoubleBracket]"}], "\[Equal]", "pt"}], "&&", 
                    RowBox[{"m", "<", 
                    RowBox[{"Length", "[", "lst", "]"}]}]}], ",", 
                    RowBox[{"m", "++"}]}], "]"}], ";", 
                    RowBox[{"pos", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"m", "\[Equal]", 
                    RowBox[{"Length", "[", "lst", "]"}]}], ",", "m", ",", 
                    RowBox[{"m", "-", "1"}]}], "]"}]}], ";", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"x", "\[LeftDoubleBracket]", "m", 
                    "\[RightDoubleBracket]"}], "<", "pt"}], ",", 
                    RowBox[{"n0", "=", 
                    RowBox[{"m", "+", "1"}]}], ",", 
                    RowBox[{"n1", "=", 
                    RowBox[{"m", "-", "1"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"pos", "\[Equal]", 
                    RowBox[{"-", "1"}]}], ",", 
                    RowBox[{"pos", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    
                    RowBox[{"x", "\[LeftDoubleBracket]", "m", 
                    "\[RightDoubleBracket]"}], "<", "pt"}], ",", "m", ",", 
                    RowBox[{"m", "-", "1"}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"Which", "[", 
                    RowBox[{
                    RowBox[{"pos", "\[Equal]", "0"}], ",", 
                    
                    RowBox[{"y", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"pos", "\[Equal]", 
                    RowBox[{"Length", "[", "x", "]"}]}], ",", 
                    RowBox[{"y", "\[LeftDoubleBracket]", 
                    RowBox[{"-", "1"}], "\[RightDoubleBracket]"}], ",", 
                    "True", ",", 
                    RowBox[{
                    
                    RowBox[{"y", "\[LeftDoubleBracket]", "pos", 
                    "\[RightDoubleBracket]"}], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"y", "\[LeftDoubleBracket]", 
                    RowBox[{"pos", "+", "1"}], "\[RightDoubleBracket]"}], "-", 
                    
                    RowBox[{"y", "\[LeftDoubleBracket]", "pos", 
                    "\[RightDoubleBracket]"}]}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"pt", "-", 
                    
                    RowBox[{"x", "\[LeftDoubleBracket]", "pos", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], 
                    RowBox[{
                    RowBox[{"x", "\[LeftDoubleBracket]", 
                    RowBox[{"pos", "+", "1"}], "\[RightDoubleBracket]"}], "-", 
                    
                    RowBox[{"x", "\[LeftDoubleBracket]", "pos", 
                    "\[RightDoubleBracket]"}]}]]}]}], "]"}]}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 13., 5468}, {{
     Blank[Real], 2}, 
    Blank[Real]}, {{3, 2, 0}, {3, 0, 0}, {3, 0, 
   5}}, {{False, {1, 0, 4}}, {0, {2, 0, 4}}, {
    2, {2, 0, 2}}, {-1, {2, 0, 0}}, {1, {2, 0, 1}}, {7., {3, 0, 3}}}, {6, 10, 
   10, 0, 3}, {{6, 0, 3}, {38, 0, 2, -1, 0, 1, 1, 2}, {38, 0, 2, -1, 0, 2, 1, 
    1}, {6, 1, 5}, {33, 0, 6}, {6, 4, 7}, {26, 5, 6, 0}, {2, 0, 43}, {12, 5, 
    6, 8}, {10, 2, 1}, {40, 60, 3, 0, 1, 3, 0, 5}, {10, 8, 1}, {16, 1, 5, 
    1}, {40, 50, 3, 0, 1, 2, 0, 8}, {6, 8, 7}, {38, 2, 0, 7, 0, 1}, {27, 5, 3,
     1, 0, 1}, {2, 1, 24}, {38, 2, 0, 7, 0, 1}, {27, 5, 3, 1, 0, 5}, {2, 5, 
    5}, {33, 0, 8}, {25, 7, 8, 2}, {5, 2, 3}, {3, 2}, {5, 4, 3}, {2, 3, 5}, {
    6, 7, 8}, {12, 8, 1, 9}, {6, 9, 7}, {3, -12}, {33, 0, 8}, {24, 7, 8, 3}, {
    2, 3, 3}, {6, 7, 9}, {3, 3}, {12, 7, 0, 8}, {6, 8, 9}, {6, 9, 3}, {3, 
    11}, {3, 1}, {38, 2, 0, 7, 0, 1}, {27, 3, 3, 1, 0, 1}, {2, 1, 4}, {12, 7, 
    1, 9}, {6, 9, 5}, {3, 3}, {12, 7, 0, 9}, {6, 9, 6}, {3, -43}, {24, 3, 0, 
    0}, {2, 0, 10}, {38, 2, 0, 7, 0, 1}, {27, 3, 3, 1, 0, 1}, {2, 1, 3}, {6, 
    7, 8}, {3, 3}, {12, 7, 0, 9}, {6, 9, 8}, {6, 8, 3}, {3, 1}, {24, 3, 4, 
    0}, {2, 0, 4}, {38, 1, 0, 1, 0, 1}, {7, 1, 5}, {3, 27}, {33, 2, 8}, {24, 
    3, 8, 1}, {2, 1, 4}, {38, 1, 0, 0, 0, 5}, {7, 5, 8}, {3, 20}, {38, 1, 0, 
    3, 0, 4}, {12, 3, 1, 8}, {38, 1, 0, 8, 0, 8}, {38, 1, 0, 3, 0, 7}, {19, 7,
     6}, {13, 8, 6, 8}, {12, 3, 1, 8}, {38, 2, 0, 8, 0, 6}, {38, 2, 0, 3, 0, 
    7}, {19, 7, 9}, {13, 6, 9, 6}, {40, 60, 3, 0, 6, 3, 0, 9}, {16, 8, 9, 
    8}, {38, 2, 0, 3, 0, 9}, {19, 9, 6}, {13, 0, 6, 9}, {16, 8, 9, 8}, {13, 4,
     8, 4}, {7, 4, 8}, {7, 8, 5}, {1}}, 
   Function[{$CellContext`lst, $CellContext`pt}, 
    Module[{$CellContext`pos = -1, $CellContext`x = 
      Part[$CellContext`lst, All, 1], $CellContext`y = 
      Part[$CellContext`lst, All, 2], $CellContext`n0 = 1, $CellContext`n1 = 
      Length[$CellContext`lst], $CellContext`m = 0}, 
     While[$CellContext`n0 <= $CellContext`n1, $CellContext`m = 
        Floor[($CellContext`n0 + $CellContext`n1)/2]; 
       If[Part[$CellContext`x, $CellContext`m] == $CellContext`pt, While[
           And[
           Part[$CellContext`x, $CellContext`m] == $CellContext`pt, \
$CellContext`m < Length[$CellContext`lst]], 
           Increment[$CellContext`m]]; $CellContext`pos = 
          If[$CellContext`m == 
            Length[$CellContext`lst], $CellContext`m, $CellContext`m - 1]; 
         Break[]; Null]; 
       If[Part[$CellContext`x, $CellContext`m] < $CellContext`pt, \
$CellContext`n0 = $CellContext`m + 1, $CellContext`n1 = $CellContext`m - 1]]; 
     If[$CellContext`pos == -1, $CellContext`pos = 
       If[
        Part[$CellContext`x, $CellContext`m] < $CellContext`pt, \
$CellContext`m, $CellContext`m - 1]]; Which[$CellContext`pos == 0, 
       Part[$CellContext`y, 1], $CellContext`pos == Length[$CellContext`x], 
       Part[$CellContext`y, -1], True, 
       Part[$CellContext`y, $CellContext`pos] + ((
          Part[$CellContext`y, $CellContext`pos + 1] - 
          Part[$CellContext`y, $CellContext`pos])/(
         Part[$CellContext`x, $CellContext`pos + 1] - 
         Part[$CellContext`x, $CellContext`pos])) ($CellContext`pt - 
         Part[$CellContext`x, $CellContext`pos])]]], Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8654950476876774`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"23592b56-4fa0-405a-bb7d-0bda2afe8040"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"interpolateCollisions", "[", 
   RowBox[{"i_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"linterp", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"collTemp", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "}"}], "]"}], ",", 
       "T"}], "]"}], "&"}], ",", 
    RowBox[{
     RowBox[{"collUL", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "All"}], "]"}], "]"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.7338220276433506`*^9, 3.745307317486477*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"790cb448-90b2-415b-9625-895a2a6c1612"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"interpolateCollisions", "[", "spec_String", "]"}], "[", 
   RowBox[{"i_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"linterp", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"collTemp", "[", "spec", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "}"}], "]"}], ",", 
       "T"}], "]"}], "&"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"collUL", "[", "spec", "]"}], "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "All"}], "]"}], "]"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.7338220276433506`*^9, {3.734848171460457*^9, 3.7348481880998716`*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"07602322-0787-44a7-bb5c-296c26a7d2fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"createRules", "[", "line_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Rule", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"line", "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2"}], "}"}], "]"}], "]"}], ",", "i"}], "}"}], 
       "]"}], ",", 
      RowBox[{"line", "[", 
       RowBox[{"[", 
        RowBox[{"3", "+", "i"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       RowBox[{"Length", "[", "line", "]"}], "-", "3"}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[31]:=",ExpressionUUID->"77cac0a7-f76b-45bd-b5c2-66a181c79fe9"],

Cell["C self shielding due to ionization", "Text",
 CellChangeTimes->{{3.8654945531090555`*^9, 
  3.865494561594056*^9}},ExpressionUUID->"e0a41cd1-c1dc-483d-b459-\
368a65f85253"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "Cselfs", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Cselfs", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"NH2", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"NC", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"T", ",", "_Real"}], "}"}]}], "}"}], ",", 
    RowBox[{"Max", "[", 
     RowBox[{"0.5", ",", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "1.1"}], " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "17."}]], "*", 
         RowBox[{"Abs", "@", "NC"}]}], "]"}], "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "0.9"}], "*", 
         SuperscriptBox["T", "0.27"], "*", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            RowBox[{"Abs", "@", "NH2"}], 
            SuperscriptBox["10", "22."]], ")"}], "0.45"]}], "]"}]}]}], 
     "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.733500816892186*^9, 3.733500870653381*^9}, {
   3.733501214482976*^9, 3.733501257551708*^9}, {3.733501311898388*^9, 
   3.7335013127825685`*^9}, {3.7356301327765183`*^9, 3.735630172757927*^9}, 
   3.7356355251488633`*^9, {3.735635622141675*^9, 3.7356356539361944`*^9}, {
   3.7365877721647816`*^9, 3.736587778865401*^9}, {3.8654945474648447`*^9, 
   3.86549454797066*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"2eafc1b5-dd08-438b-ae55-e8a401cd0f98"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"NH2", ",", "NC", ",", "T"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Max", "[", 
                    RowBox[{"0.5`", ",", 
                    RowBox[{
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "1.1`"}], " ", "1.`*^-17", " ", 
                    RowBox[{"Abs", "[", "NC", "]"}]}], "]"}], " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "0.9`"}], " ", 
                    SuperscriptBox["T", "0.27`"], " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Abs", "[", "NH2", "]"}], " ", "1.`*^-22"}], 
                    ")"}], "0.45`"]}], "]"}]}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 13., 5468}, {
    Blank[Real], 
    Blank[Real], 
    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 
   7}}, {{-1.1, {3, 0, 4}}, {1.*^-22, {3, 0, 11}}, {0.27, {3, 0, 9}}, {
    0.5, {3, 0, 3}}, {-0.9, {3, 0, 8}}, {0.45, {3, 0, 12}}, {
    1.*^-17, {3, 0, 5}}}, {0, 0, 14, 0, 
   0}, {{40, 38, 3, 0, 1, 3, 0, 6}, {16, 4, 5, 6, 7}, {40, 32, 3, 0, 7, 3, 0, 
    6}, {41, 263, 3, 0, 2, 3, 0, 9, 3, 0, 7}, {40, 38, 3, 0, 0, 3, 0, 10}, {
    16, 10, 11, 10}, {41, 263, 3, 0, 10, 3, 0, 12, 3, 0, 13}, {16, 8, 7, 13, 
    10}, {40, 32, 3, 0, 10, 3, 0, 7}, {16, 6, 7, 6}, {
    42, "MaxR", 3, 0, 3, 3, 0, 6, 3, 0, 7}, {1}}, 
   Function[{$CellContext`NH2, $CellContext`NC, $CellContext`T}, 
    Max[0.5, Exp[(-1.1) 1.*^-17 Abs[$CellContext`NC]] 
     Exp[(-0.9) $CellContext`T^0.27 (Abs[$CellContext`NH2] 1.*^-22)^0.45]]], 
   Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8654950477213993`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"02819bb3-213e-4c99-9fb8-d10ec68de2f9"]
}, Open  ]],

Cell["\<\
H2 self shielding due to dissociation (Draine & Bertoldi 1996)\
\>", "Text",
 CellChangeTimes->{{3.8654945707387104`*^9, 
  3.865494588114185*^9}},ExpressionUUID->"5eae3a3b-272c-4c18-8d16-\
29991e7d739f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"H2selfs", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"NH2", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dv", ",", "_Real"}], "}"}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"0.965", "/", 
      RowBox[{"(", 
       RowBox[{"1.0", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"NH2", "/", 
            RowBox[{"(", 
             RowBox[{"5.", " ", 
              SuperscriptBox["10", "14."]}], ")"}]}], "/", "dv"}], ")"}], 
         "2"]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"0.035", "/", 
       SqrtBox[
        RowBox[{"(", 
         RowBox[{"1.0", "+", 
          RowBox[{"NH2", "/", 
           RowBox[{"(", 
            RowBox[{"5.", " ", 
             SuperscriptBox["10", "14."]}], ")"}]}]}], ")"}]]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "8.5"}], " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "4."}]], "*", 
         SqrtBox[
          RowBox[{"(", 
           RowBox[{"1.0", "+", 
            RowBox[{"NH2", "/", 
             RowBox[{"(", 
              RowBox[{"5.", " ", 
               SuperscriptBox["10", "14."]}], ")"}]}]}], ")"}]]}], ")"}], 
       "]"}]}]}]}], "]"}]}]], "Input",
 CellLabel->"In[34]:=",ExpressionUUID->"123eb1a7-e9d5-4102-8071-f4e3ca34cd21"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real"}], "}"}], ContentPadding -> 
                    False, FrameMargins -> 0, StripOnInput -> True, 
                    BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["2", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Real", ",", "_Real"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"NH2", ",", "dv"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "Compile`$2", ",", "Compile`$10", ",", "Compile`$11"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"Compile`$2", "=", 
                    RowBox[{"NH2", " ", "2.`*^-15"}]}], ";", 
                    RowBox[{"Compile`$10", "=", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "+", 
                    "Compile`$2"}]}], ";", 
                    RowBox[{"Compile`$11", "=", 
                    SqrtBox["Compile`$10"]}], ";", 
                    RowBox[{
                    FractionBox["0.965`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["Compile`$2", "dv"], ")"}], "2"]}]], "+", 
                    FractionBox[
                    RowBox[{"0.035`", " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "8.5`"}], " ", "0.0001`", " ", 
                    "Compile`$11"}], "]"}]}], "Compile`$11"]}]}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 13., 5468}, {
    Blank[Real], 
    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 
   9}}, {{0.965, {3, 0, 7}}, {1., {3, 0, 4}}, {
    0.035, {3, 0, 10}}, {-8.5, {3, 0, 12}}, {0.0001, {3, 0, 13}}, {
    2.*^-15, {3, 0, 2}}}, {0, 0, 15, 0, 
   0}, {{16, 0, 2, 3}, {13, 4, 3, 5}, {40, 57, 3, 0, 5, 3, 0, 6}, {40, 60, 3, 
    0, 1, 3, 0, 8}, {16, 3, 8, 9}, {40, 56, 3, 0, 9, 3, 0, 8}, {13, 4, 8, 
    9}, {40, 60, 3, 0, 9, 3, 0, 8}, {16, 7, 8, 9}, {40, 60, 3, 0, 6, 3, 0, 
    8}, {16, 10, 8, 11}, {16, 12, 13, 6, 8}, {40, 32, 3, 0, 8, 3, 0, 14}, {16,
     11, 14, 11}, {13, 9, 11, 9}, {1}}, 
   Function[{$CellContext`NH2, $CellContext`dv}, 
    Block[{Compile`$2, Compile`$10, Compile`$11}, 
     Compile`$2 = $CellContext`NH2 2.*^-15; Compile`$10 = 1. + Compile`$2; 
     Compile`$11 = Sqrt[Compile`$10]; 
     0.965/(1. + (Compile`$2/$CellContext`dv)^2) + (0.035/Compile`$11) 
       Exp[(-8.5) 0.0001 Compile`$11]]], Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8654950477349052`*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"dd85a3fb-e7ca-436b-8b93-33747145c3b1"]
}, Open  ]],

Cell["Partition function", "Text",
 CellChangeTimes->{{3.865494612517931*^9, 
  3.8654946166381254`*^9}},ExpressionUUID->"6faa2f82-bbd7-420a-9c05-\
e19468932dc5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Qsum", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Tt", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"en", ",", "_Real", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"2.99792458", "*", 
          SuperscriptBox["10", "10."]}]}], ",", 
        RowBox[{"k", "=", 
         RowBox[{"1.3806504", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "16"}]]}]}], ",", 
        RowBox[{"h", "=", 
         RowBox[{"6.62606896", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "27."}]]}]}], ",", 
        RowBox[{"AMU", "=", 
         RowBox[{"1.660538", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "24."}]]}]}], ",", 
        RowBox[{"sigma", "=", 
         RowBox[{"5.670400", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "5."}]]}]}], ",", "hck", ",", 
        RowBox[{"T", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"2.7", ",", "Tt"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hck", "=", 
        RowBox[{"h", "*", 
         RowBox[{"c", "/", "k"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Total", "[", 
        RowBox[{"g", "*", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "hck"}], "*", 
           FractionBox["en", "T"]}], "]"}]}], "]"}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.865494607754467*^9, 3.865494608642333*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"83a49c7c-217d-4dca-8925-be47dc4940c9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}]}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"Tt", ",", "en", ",", "g"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c", "=", "2.99792458`*^10"}], ",", 
                    RowBox[{"k", "=", 
                    FractionBox["1.3806504`", 
                    SuperscriptBox["10", "16"]]}], ",", 
                    RowBox[{"h", "=", "6.62606896`*^-27"}], ",", 
                    RowBox[{"AMU", "=", "1.6605379999999998`*^-24"}], ",", 
                    RowBox[{"sigma", "=", "0.000056704000000000005`"}], ",", 
                    "hck", ",", 
                    RowBox[{"T", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"2.7`", ",", "Tt"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"hck", "=", 
                    FractionBox[
                    RowBox[{"h", " ", "c"}], "k"]}], ";", 
                    RowBox[{"Total", "[", 
                    RowBox[{"g", " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"hck", " ", "en"}], "T"]}], "]"}]}], "]"}]}]}], 
                    "]"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 13., 5468}, {
    Blank[Real], {
     Blank[Real], 1}, {
     Blank[Real], 1}}, {{3, 0, 0}, {3, 1, 0}, {3, 1, 1}, {3, 0, 
   10}}, {{2.7, {3, 0, 8}}, {0.000056704000000000005`, {3, 0, 7}}, {
    6.62606896*^-27, {3, 0, 5}}, {10, {2, 0, 0}}, {4, {2, 0, 3}}, {
    1.6605379999999998`*^-24, {3, 0, 6}}, {2.99792458*^10, {3, 0, 1}}, {
    16, {2, 0, 1}}, {1.3806504, {3, 0, 2}}}, {0, 4, 12, 0, 
   4}, {{41, 263, 2, 0, 0, 2, 0, 1, 2, 0, 2}, {10, 2, 3}, {40, 60, 3, 0, 3, 3,
     0, 4}, {16, 2, 4, 3}, {42, "MaxR", 3, 0, 8, 3, 0, 0, 3, 0, 4}, {40, 60, 
    3, 0, 3, 3, 0, 9}, {16, 1, 9, 10}, {16, 5, 10, 9}, {19, 9, 10}, {40, 60, 
    3, 0, 4, 3, 0, 11}, {41, 259, 3, 0, 11, 3, 1, 0, 3, 1, 2}, {41, 259, 3, 0,
     10, 3, 1, 2, 3, 1, 3}, {40, 32, 3, 1, 3, 3, 1, 2}, {45, 1, 2, 3}, {
    42, "TotalAll", 3, 1, 3, 2, 0, 3, 3, 0, 10}, {1}}, 
   Function[{$CellContext`Tt, $CellContext`en, $CellContext`g}, 
    Module[{$CellContext`c = 2.99792458*^10, $CellContext`k = 
      1.3806504 10^(-16), $CellContext`h = 6.62606896*^-27, $CellContext`AMU = 
      1.6605379999999998`*^-24, $CellContext`sigma = 
      0.000056704000000000005`, $CellContext`hck, $CellContext`T = 
      Max[2.7, $CellContext`Tt]}, $CellContext`hck = $CellContext`h \
($CellContext`c/$CellContext`k); 
     Total[$CellContext`g 
       Exp[(-$CellContext`hck) ($CellContext`en/$CellContext`T)]]]], Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8654950477506213`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"ee678cba-e700-4fff-89ed-a6ec76f544d3"]
}, Open  ]],

Cell["LTE population", "Text",
 CellChangeTimes->{{3.8654946345374937`*^9, 
  3.865494639245202*^9}},ExpressionUUID->"797d7e7c-fd33-456f-bfa2-\
53bd0c036770"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pop", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Tt", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"en", ",", "_Real", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"2.99792458", "*", 
          SuperscriptBox["10", "10."]}]}], ",", 
        RowBox[{"k", "=", 
         RowBox[{"1.3806504", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "16."}]]}]}], ",", 
        RowBox[{"h", "=", 
         RowBox[{"6.62606896", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "27."}]]}]}], ",", 
        RowBox[{"AMU", "=", 
         RowBox[{"1.660538", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "24."}]]}]}], ",", 
        RowBox[{"sigma", "=", 
         RowBox[{"5.670400", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "5."}]]}]}], ",", "hck", ",", 
        RowBox[{"T", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"2.7", ",", "Tt"}], "]"}]}], ",", "Qsum"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hck", "=", 
        RowBox[{"h", "*", 
         RowBox[{"c", "/", "k"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "*", 
        FractionBox[
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "hck"}], "*", 
           FractionBox["en", "T"]}], "]"}], 
         RowBox[{"Total", "[", 
          RowBox[{"g", "*", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "hck"}], "*", 
             FractionBox["en", "T"]}], "]"}]}], "]"}]]}]}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"40cfaa8f-deb0-4c66-872d-237f15b88a65"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}]}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"Tt", ",", "en", ",", "g"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "Compile`$7", ",", "Compile`$8", ",", "Compile`$9", ",", 
                    "Compile`$12", ",", "Compile`$13"}], "}"}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c", "=", "2.99792458`*^10"}], ",", 
                    RowBox[{"k", "=", "1.3806504`*^-16"}], ",", 
                    RowBox[{"h", "=", "6.62606896`*^-27"}], ",", 
                    RowBox[{"AMU", "=", "1.6605379999999998`*^-24"}], ",", 
                    RowBox[{"sigma", "=", "0.000056704000000000005`"}], ",", 
                    "hck", ",", 
                    RowBox[{"T", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"2.7`", ",", "Tt"}], "]"}]}], ",", "Qsum"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"hck", "=", 
                    FractionBox[
                    RowBox[{"h", " ", "c"}], "k"]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$7", "=", 
                    RowBox[{"-", "hck"}]}], ";", 
                    RowBox[{"Compile`$8", "=", 
                    FractionBox["1", "T"]}], ";", 
                    RowBox[{"Compile`$9", "=", 
                    RowBox[{"en", " ", "Compile`$8"}]}], ";", 
                    RowBox[{"Compile`$12", "=", 
                    RowBox[{"Compile`$7", " ", "Compile`$9"}]}], ";", 
                    RowBox[{"Compile`$13", "=", 
                    RowBox[{"Exp", "[", "Compile`$12", "]"}]}], ";", 
                    FractionBox[
                    RowBox[{"g", " ", "Compile`$13"}], 
                    RowBox[{"Total", "[", 
                    RowBox[{"g", " ", "Compile`$13"}], "]"}]]}], ")"}]}]}], 
                    "]"}]}], "]"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 13., 5468}, {
    Blank[Real], {
     Blank[Real], 1}, {
     Blank[Real], 1}}, {{3, 0, 0}, {3, 1, 0}, {3, 1, 1}, {3, 1, 
   6}}, {{2.7, {3, 0, 6}}, {0.000056704000000000005`, {3, 0, 5}}, {
    6.62606896*^-27, {3, 0, 3}}, {4, {2, 0, 0}}, {
    1.6605379999999998`*^-24, {3, 0, 4}}, {2.99792458*^10, {3, 0, 1}}, {
    1.3806504*^-16, {3, 0, 2}}}, {0, 1, 13, 0, 
   7}, {{42, "MaxR", 3, 0, 6, 3, 0, 0, 3, 0, 7}, {40, 60, 3, 0, 2, 3, 0, 8}, {
    16, 1, 8, 9}, {16, 3, 9, 8}, {19, 8, 9}, {40, 60, 3, 0, 7, 3, 0, 10}, {41,
     259, 3, 0, 10, 3, 1, 0, 3, 1, 2}, {41, 259, 3, 0, 9, 3, 1, 2, 3, 1, 3}, {
    40, 32, 3, 1, 3, 3, 1, 4}, {45, 1, 4, 5}, {
    42, "TotalAll", 3, 1, 5, 2, 0, 0, 3, 0, 11}, {40, 60, 3, 0, 11, 3, 0, 
    12}, {41, 259, 3, 0, 12, 3, 1, 4, 3, 1, 5}, {45, 1, 5, 6}, {1}}, 
   Function[{$CellContext`Tt, $CellContext`en, $CellContext`g}, 
    Block[{Compile`$7, Compile`$8, Compile`$9, Compile`$12, Compile`$13}, 
     Module[{$CellContext`c = 2.99792458*^10, $CellContext`k = 
       1.3806504*^-16, $CellContext`h = 6.62606896*^-27, $CellContext`AMU = 
       1.6605379999999998`*^-24, $CellContext`sigma = 
       0.000056704000000000005`, $CellContext`hck, $CellContext`T = 
       Max[
        2.7, $CellContext`Tt], $CellContext`Qsum}, $CellContext`hck = \
$CellContext`h ($CellContext`c/$CellContext`k); (
       Compile`$7 = -$CellContext`hck; Compile`$8 = $CellContext`T^(-1); 
       Compile`$9 = $CellContext`en Compile`$8; 
       Compile`$12 = Compile`$7 Compile`$9; 
       Compile`$13 = 
        Exp[Compile`$12]; $CellContext`g (Compile`$13/
         Total[$CellContext`g Compile`$13]))]]], Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.865495047766317*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"e1a28543-d333-4458-a6c9-86918318c49b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"myExp", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"x", ",", "_Real"}], "}"}], "}"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "100."}], "\[LessEqual]", "x", "\[LessEqual]", "100."}], 
      ",", 
      RowBox[{"N", "@", 
       RowBox[{"Exp", "[", "x", "]"}]}], ",", 
      RowBox[{"N", "@", "0.0"}]}], "]"}], ",", 
    RowBox[{"RuntimeAttributes", "\[Rule]", 
     RowBox[{"{", "Listable", "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"setLTEc", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Tt", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"en", ",", "_Real", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"g", ",", "_Real", ",", "1"}], "}"}]}], "}"}], ",", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c", "=", 
         RowBox[{"2.99792458", "*", 
          SuperscriptBox["10", "10."]}]}], ",", 
        RowBox[{"k", "=", 
         RowBox[{"1.3806504", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "16."}]]}]}], ",", 
        RowBox[{"h", "=", 
         RowBox[{"6.62606896", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "27."}]]}]}], ",", "hck", ",", ",", 
        RowBox[{"T", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"2.7", ",", "Tt"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hck", "=", 
        RowBox[{"h", "*", 
         RowBox[{"c", "/", "k"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"g", "*", 
        RowBox[{"N", "@", 
         FractionBox[
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "hck"}], "*", 
            FractionBox["en", "T"]}], "]"}], 
          RowBox[{"Total", "[", 
           RowBox[{"g", "*", 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "hck"}], "*", 
              FractionBox["en", "T"]}], "]"}]}], "]"}]]}]}]}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"setLTE", "[", "spec_String", "]"}], "[", "T_", "]"}], ":=", 
  RowBox[{"setLTEc", "[", 
   RowBox[{"T", ",", 
    RowBox[{"en", "[", "spec", "]"}], ",", 
    RowBox[{"g", "[", "spec", "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.734854818733778*^9, {3.7356358089403257`*^9, 3.7356358678422117`*^9}, {
   3.7356359086360593`*^9, 3.7356362184256*^9}, {3.735636555260009*^9, 
   3.735636556509912*^9}, {3.735636595930902*^9, 3.735636599555634*^9}, {
   3.735638960222225*^9, 3.735638995141514*^9}, {3.7356391240850706`*^9, 
   3.7356391395526896`*^9}, {3.735639186814809*^9, 3.73563925877824*^9}, {
   3.7356393005563717`*^9, 3.7356393734416485`*^9}, {3.7356395057441835`*^9, 
   3.735639623860483*^9}, {3.7356396613264213`*^9, 3.7356396771533737`*^9}, {
   3.7365878954664073`*^9, 3.7365879183689985`*^9}, {3.73665970127267*^9, 
   3.7366597619685574`*^9}, {3.7366598366184196`*^9, 
   3.7366598462658167`*^9}, {3.7366598955205464`*^9, 3.736659906191624*^9}, {
   3.7366600718724594`*^9, 3.7366601023280287`*^9}, {3.7366793007834325`*^9, 
   3.7366793030596647`*^9}, {3.738471940912665*^9, 3.738471945274226*^9}, {
   3.865494657825367*^9, 3.865494660115611*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"7bc01d91-2b5f-4f6e-b759-816daf0b46aa"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", "_Real", "}"}], ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True, BaselinePosition -> 
                    Baseline, ImageSize -> {{1, 300}, Automatic}], 
                   LineBreakWithin -> False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["1", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", "_Real", "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", "x", "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "100.`"}], "\[LessEqual]", "x", 
                    "\[LessEqual]", "100.`"}], ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"Exp", "[", "x", "]"}], "]"}], ",", 
                    RowBox[{"N", "[", "0.`", "]"}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 13., 5596}, {
    Blank[Real]}, {{3, 0, 0}, {3, 0, 
   6}}, {{100., {3, 0, 2}}, {-100., {3, 0, 1}}, {7., {3, 0, 3}}, {
    0., {3, 0, 5}}}, {1, 0, 7, 0, 
   0}, {{27, 4, 3, 1, 0, 2, 0}, {2, 0, 4}, {40, 32, 3, 0, 0, 3, 0, 4}, {7, 4, 
    6}, {3, 2}, {7, 5, 6}, {1}}, 
   Function[{$CellContext`x}, 
    If[-100. <= $CellContext`x <= 100., 
     N[
      Exp[$CellContext`x]], 
     N[0.]], Listable], Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.865495047782127*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"5d786484-7394-451a-b6de-96b1bc0e8d1d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}]}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    RowBox[{"_Real", ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"_Real", ",", "1"}], "}"}]}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"Tt", ",", "en", ",", "g"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "Compile`$14", ",", "Compile`$15", ",", "Compile`$16", 
                    ",", "Compile`$17", ",", "Compile`$18"}], "}"}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"c", "=", "2.99792458`*^10"}], ",", 
                    RowBox[{"k", "=", "1.3806504`*^-16"}], ",", 
                    RowBox[{"h", "=", "6.62606896`*^-27"}], ",", "hck", ",", 
                    "Null", ",", 
                    RowBox[{"T", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"2.7`", ",", "Tt"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"hck", "=", 
                    FractionBox[
                    RowBox[{"h", " ", "c"}], "k"]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$14", "=", 
                    RowBox[{"-", "hck"}]}], ";", 
                    RowBox[{"Compile`$15", "=", 
                    FractionBox["1", "T"]}], ";", 
                    RowBox[{"Compile`$16", "=", 
                    RowBox[{"en", " ", "Compile`$15"}]}], ";", 
                    RowBox[{"Compile`$17", "=", 
                    RowBox[{"Compile`$14", " ", "Compile`$16"}]}], ";", 
                    RowBox[{"Compile`$18", "=", 
                    RowBox[{"Exp", "[", "Compile`$17", "]"}]}], ";", 
                    RowBox[{"g", " ", 
                    RowBox[{"N", "[", 
                    FractionBox["Compile`$18", 
                    RowBox[{"Total", "[", 
                    RowBox[{"g", " ", "Compile`$18"}], "]"}]], "]"}]}]}], 
                    ")"}]}]}], "]"}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 13., 5468}, {
    Blank[Real], {
     Blank[Real], 1}, {
     Blank[Real], 1}}, {{3, 0, 0}, {3, 1, 0}, {3, 1, 1}, {3, 1, 
   6}}, {{2.7, {3, 0, 4}}, {6.62606896*^-27, {3, 0, 3}}, {4, {2, 0, 0}}, {
    2.99792458*^10, {3, 0, 1}}, {1.3806504*^-16, {3, 0, 2}}}, {0, 1, 11, 0, 
   7}, {{42, "MaxR", 3, 0, 4, 3, 0, 0, 3, 0, 5}, {40, 60, 3, 0, 2, 3, 0, 6}, {
    16, 1, 6, 7}, {16, 3, 7, 6}, {19, 6, 7}, {40, 60, 3, 0, 5, 3, 0, 8}, {41, 
    259, 3, 0, 8, 3, 1, 0, 3, 1, 2}, {41, 259, 3, 0, 7, 3, 1, 2, 3, 1, 3}, {
    40, 32, 3, 1, 3, 3, 1, 4}, {45, 1, 4, 5}, {
    42, "TotalAll", 3, 1, 5, 2, 0, 0, 3, 0, 9}, {40, 60, 3, 0, 9, 3, 0, 10}, {
    41, 259, 3, 0, 10, 3, 1, 4, 3, 1, 5}, {45, 1, 5, 6}, {1}}, 
   Function[{$CellContext`Tt, $CellContext`en, $CellContext`g}, 
    Block[{Compile`$14, Compile`$15, Compile`$16, Compile`$17, Compile`$18}, 
     Module[{$CellContext`c = 2.99792458*^10, $CellContext`k = 
       1.3806504*^-16, $CellContext`h = 6.62606896*^-27, $CellContext`hck, 
       Null, $CellContext`T = 
       Max[2.7, $CellContext`Tt]}, $CellContext`hck = $CellContext`h \
($CellContext`c/$CellContext`k); (Compile`$14 = -$CellContext`hck; 
       Compile`$15 = $CellContext`T^(-1); 
       Compile`$16 = $CellContext`en Compile`$15; 
       Compile`$17 = Compile`$14 Compile`$16; 
       Compile`$18 = Exp[Compile`$17]; $CellContext`g 
        N[Compile`$18/Total[$CellContext`g Compile`$18]])]]], Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8654950477980576`*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"cf3d6069-159e-4e14-be9f-b5b431f77b36"]
}, Open  ]],

Cell["Chemical rate equations", "Text",
 CellChangeTimes->{{3.865494697602306*^9, 
  3.8654947002818213`*^9}},ExpressionUUID->"013a2de3-4cdd-472b-a552-\
1019d84e12ee"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "reactionRateCoefficient", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"reactionRateCoefficient", "[", "type_", "]"}], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a_", ",", "b_", ",", "c_"}], "}"}], ",", "T_", ",", "ntot_", 
    ",", "nH_", ",", "zetaCR_", ",", "G0_", ",", "AV_", ",", "betaH2_", ",", 
    "betaCO_", ",", "betaC_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Switch", "[", 
     RowBox[{"type", ",", "\[IndentingNewLine]", "0", ",", 
      RowBox[{"a", "*", 
       SqrtBox["T"], 
       FractionBox["ntot", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "30."}]], "+", "nH"}]]}], ",", "\[IndentingNewLine]", 
      "1", ",", 
      RowBox[{"a", "*", 
       RowBox[{"(", 
        FractionBox["zetaCR", 
         RowBox[{"1.3", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "17."}]]}]], ")"}]}], ",", "\[IndentingNewLine]", "2",
       ",", 
      RowBox[{"a", "*", 
       SuperscriptBox[
        RowBox[{"(", 
         FractionBox["T", "300."], ")"}], "b"], 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{"-", 
           FractionBox["c", "T"]}], "]"}], ",", "$MachinePrecision"}], 
        "]"}]}], ",", "\[IndentingNewLine]", "3", ",", 
      RowBox[{"a", "*", 
       FractionBox["zetaCR", 
        RowBox[{"1.3", " ", 
         SuperscriptBox["10", 
          RowBox[{"-", "17."}]]}]], 
       FractionBox["c", 
        RowBox[{"1", "-", "0.5"}]]}], ",", "\[IndentingNewLine]", "13", ",", 
      RowBox[{"a", "*", "0.5", "*", "G0", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "c"}], " ", "AV"}], "]"}]}], ",", "\[IndentingNewLine]",
       "14", ",", 
      RowBox[{"a", "*", "0.5", "*", "G0", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "c"}], " ", "AV"}], "]"}], "betaH2"}], ",", 
      "\[IndentingNewLine]", "15", ",", 
      RowBox[{"a", "*", "0.5", "*", "G0", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "c"}], " ", "AV"}], "]"}], "betaCO"}], ",", 
      "\[IndentingNewLine]", "16", ",", 
      RowBox[{"a", "*", "0.5", "*", "G0", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"-", "c"}], " ", "AV"}], "]"}], "betaC"}], ",", 
      "\[IndentingNewLine]", "99", ",", "0.", ",", "\[IndentingNewLine]", "_",
       ",", 
      RowBox[{
       RowBox[{"Print", "[", "\"\<Unknown reaction type\>\"", "]"}], ";", 
       RowBox[{"Abort", "[", "]"}]}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7354558028070836`*^9, 3.735456073756525*^9}, {
   3.7354561605486526`*^9, 3.73545645921169*^9}, {3.735456684353099*^9, 
   3.735456751519994*^9}, {3.7354722334298487`*^9, 3.735472321410807*^9}, 
   3.7356219818207493`*^9, {3.736228084571154*^9, 3.736228093020995*^9}, {
   3.7365864307473397`*^9, 3.73658658380869*^9}, {3.736587838286433*^9, 
   3.7365878759508753`*^9}, {3.7366601472849817`*^9, 
   3.7366601599441586`*^9}, {3.7366793333307714`*^9, 3.736679343127513*^9}, {
   3.832393257431192*^9, 3.8323933166859694`*^9}, {3.8654947037578545`*^9, 
   3.8654947227361984`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"d1da9a9f-e7bd-4ba5-8753-00097bb85185"],

Cell[TextData[{
 "Photo-electric heating and cooling contributions (erg ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["s", 
     RowBox[{"-", "1"}]], " ", 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "71550645-a109-40af-84b1-558a21e15494"],
 ")"
}], "Text",
 CellChangeTimes->{{3.8654947313624496`*^9, 
  3.8654947597656384`*^9}},ExpressionUUID->"bd4f431a-b623-47a3-aa0a-\
ae65c33143c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PEHeatingCooling", "=", 
  RowBox[{"Compile", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"G0", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"AV", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Tt", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ngas", ",", "_Real"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"nelec", ",", "_Real"}], "}"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"g0att", ",", "gamma", ",", "epsilon", ",", 
        RowBox[{"T", "=", 
         RowBox[{"Max", "[", 
          RowBox[{"2.7", ",", "Tt"}], "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"g0att", "=", 
        RowBox[{"0.5", " ", "1.71", " ", "G0", " ", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "3.02"}], " ", "AV"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"gamma", "=", 
        RowBox[{"g0att", 
         FractionBox[
          RowBox[{" ", 
           SqrtBox["T"]}], "nelec"]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"epsilon", "=", 
        RowBox[{
         FractionBox[
          RowBox[{"4.87", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "2."}]]}], 
          RowBox[{"1", "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "3."}]], 
            SuperscriptBox["gamma", "0.73"]}]}]], "+", 
         FractionBox[
          RowBox[{"3.65", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "2."}]], 
           SuperscriptBox[
            RowBox[{"(", 
             FractionBox["T", 
              SuperscriptBox["10", "4"]], ")"}], "0.7"]}], 
          RowBox[{"1", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "4."}]], "gamma"}]}]]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "24."}]], "epsilon", " ", "ngas", " ", "g0att"}], ",", 
         RowBox[{
          RowBox[{"-", "3.49"}], " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "30."}]], 
          SuperscriptBox["T", "0.944"], 
          SuperscriptBox["gamma", 
           FractionBox["0.735", 
            SuperscriptBox["T", "0.068"]]], "ngas", " ", "nelec"}]}], 
        "}"}]}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7354558028070836`*^9, 3.735456073756525*^9}, {
   3.7354561605486526`*^9, 3.73545645921169*^9}, {3.735456684353099*^9, 
   3.735456751519994*^9}, {3.7354722334298487`*^9, 3.735472321410807*^9}, 
   3.7356219818207493`*^9, {3.736228084571154*^9, 3.736228093020995*^9}, {
   3.7365864307473397`*^9, 3.73658658380869*^9}, {3.736587838286433*^9, 
   3.7365878759508753`*^9}, {3.7366601472849817`*^9, 
   3.7366601599441586`*^9}, {3.7366793333307714`*^9, 3.736679343127513*^9}, {
   3.832393257431192*^9, 3.8323933166859694`*^9}, {3.8654947037578545`*^9, 
   3.8654947227361984`*^9}, 3.8654947640878677`*^9},
 CellLabel->"In[42]:=",ExpressionUUID->"bac18b4c-9bcc-4d61-b419-b4e16f49edbe"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "_Real", ",", "_Real", ",", "_Real", ",", "_Real", ",", 
                    "_Real"}], "}"}], ContentPadding -> False, FrameMargins -> 
                    0, StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["5", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "_Real", ",", "_Real", ",", "_Real", ",", "_Real", ",", 
                    "_Real"}], "}"}], ImageSize -> {{1, 500}, Automatic}, 
                   BaselinePosition -> Baseline, ContentPadding -> False, 
                   FrameMargins -> 0, StripOnInput -> True], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "G0", ",", "AV", ",", "Tt", ",", "ngas", ",", "nelec"}], 
                    "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"g0att", ",", "gamma", ",", "epsilon", ",", 
                    RowBox[{"T", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"2.7`", ",", "Tt"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"g0att", "=", 
                    RowBox[{"0.5`", " ", "1.71`", " ", "G0", " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "3.02`"}], " ", "AV"}], "]"}]}]}], ";", 
                    RowBox[{"gamma", "=", 
                    FractionBox[
                    RowBox[{"g0att", " ", 
                    SqrtBox["T"]}], "nelec"]}], ";", 
                    RowBox[{"epsilon", "=", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"4.87`", " ", "0.01`"}], 
                    RowBox[{"1", "+", 
                    RowBox[{"4", " ", "0.001`", " ", 
                    SuperscriptBox["gamma", "0.73`"]}]}]], "+", 
                    FractionBox[
                    RowBox[{"3.65`", " ", "0.01`", " ", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["T", "10000"], ")"}], "0.7`"]}], 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "0.0001`", " ", "gamma"}]}]]}]}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    
                    RowBox[{"1.`*^-24", " ", "epsilon", " ", "ngas", " ", 
                    "g0att"}], ",", 
                    RowBox[{
                    RowBox[{"-", "3.49`"}], " ", "1.`*^-30", " ", 
                    SuperscriptBox["T", "0.944`"], " ", 
                    SuperscriptBox["gamma", 
                    FractionBox["0.735`", 
                    SuperscriptBox["T", "0.068`"]]], " ", "ngas", " ", 
                    "nelec"}]}], "}"}]}]}], "]"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 13., 5468}, {
    Blank[Real], 
    Blank[Real], 
    Blank[Real], 
    Blank[Real], 
    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}, {3, 0, 4}, {3, 
   1, 0}}, {{1.71, {3, 0, 8}}, {0.001, {3, 0, 15}}, {-3.49, {3, 0, 24}}, {
    2.7, {3, 0, 5}}, {4, {2, 0, 1}}, {0.7, {3, 0, 20}}, {-3.02, {3, 0, 9}}, {
    3.65, {3, 0, 18}}, {0.068, {3, 0, 28}}, {0.73, {3, 0, 16}}, {
    1.*^-24, {3, 0, 23}}, {1.*^-30, {3, 0, 25}}, {0.735, {3, 0, 27}}, {
    0.0001, {3, 0, 21}}, {2, {2, 0, 3}}, {0.01, {3, 0, 14}}, {
    4.87, {3, 0, 13}}, {10000, {2, 0, 2}}, {1, {2, 0, 0}}, {0.5, {3, 0, 7}}, {
    0.944, {3, 0, 26}}}, {0, 4, 30, 0, 
   1}, {{42, "MaxR", 3, 0, 5, 3, 0, 2, 3, 0, 6}, {16, 9, 1, 10}, {40, 32, 3, 
    0, 10, 3, 0, 11}, {16, 7, 8, 0, 11, 10}, {40, 57, 3, 0, 6, 3, 0, 11}, {40,
     60, 3, 0, 4, 3, 0, 12}, {16, 11, 12, 11}, {16, 10, 11, 12}, {41, 263, 3, 
    0, 12, 3, 0, 16, 3, 0, 11}, {10, 1, 17}, {16, 17, 15, 11, 17}, {10, 0, 
    11}, {13, 11, 17, 11}, {40, 60, 3, 0, 11, 3, 0, 17}, {16, 13, 14, 17, 
    11}, {10, 2, 17}, {40, 60, 3, 0, 17, 3, 0, 19}, {16, 6, 19, 17}, {41, 263,
     3, 0, 17, 3, 0, 20, 3, 0, 19}, {10, 3, 17}, {16, 17, 21, 12, 17}, {10, 0,
     22}, {13, 22, 17, 22}, {40, 60, 3, 0, 22, 3, 0, 17}, {16, 18, 14, 19, 17,
     22}, {13, 11, 22, 11}, {16, 23, 11, 3, 10, 19}, {41, 263, 3, 0, 6, 3, 0, 
    26, 3, 0, 22}, {41, 263, 3, 0, 6, 3, 0, 28, 3, 0, 17}, {40, 60, 3, 0, 17, 
    3, 0, 29}, {16, 27, 29, 17}, {41, 263, 3, 0, 12, 3, 0, 17, 3, 0, 29}, {16,
     24, 25, 22, 29, 3, 4, 17}, {34, 1, 2, 19, 17, 3, 0}, {1}}, 
   Function[{$CellContext`G0, $CellContext`AV, $CellContext`Tt, \
$CellContext`ngas, $CellContext`nelec}, 
    Module[{$CellContext`g0att, $CellContext`gamma, $CellContext`epsilon, \
$CellContext`T = Max[2.7, $CellContext`Tt]}, $CellContext`g0att = 
      0.5 1.71 $CellContext`G0 
       Exp[(-3.02) $CellContext`AV]; $CellContext`gamma = $CellContext`g0att (
        Sqrt[$CellContext`T]/$CellContext`nelec); $CellContext`epsilon = 
      4.87 0.01/(1 + 4 0.001 $CellContext`gamma^0.73) + 
       3.65 0.01 ($CellContext`T/10000)^0.7/(1 + 
        2 0.0001 $CellContext`gamma); {
      1.*^-24 $CellContext`epsilon $CellContext`ngas $CellContext`g0att, \
(-3.49) 1.*^-30 $CellContext`T^0.944 $CellContext`gamma^(
         0.735/$CellContext`T^0.068) $CellContext`ngas $CellContext`nelec}]], 
   Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8654950478298254`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"4764d030-e837-42d7-a285-b574d92c63a2"]
}, Open  ]],

Cell["Heating/ Cooling due to H2", "Text",
 CellChangeTimes->{{3.8654947672457123`*^9, 
  3.8654947747872744`*^9}},ExpressionUUID->"a3a2de5b-a678-4e9b-9bec-\
a724f9197429"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"H2LineHeatingCooling", "=", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"G0", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"AV", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Tt", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"ngas", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"nH2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"NH2", ",", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dv", ",", "_Real"}], "}"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"g0attH2", ",", "gamma", ",", 
         RowBox[{"T", "=", 
          RowBox[{"Max", "[", 
           RowBox[{"2.7", ",", "Tt"}], "]"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"g0attH2", "=", 
         RowBox[{"0.5", "G0", " ", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "3.02"}], " ", "AV"}], "]"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"0.965", "/", 
             RowBox[{"(", 
              RowBox[{"1.0", "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"NH2", "/", 
                   RowBox[{"(", 
                    RowBox[{"5.", " ", 
                    SuperscriptBox["10", "14."]}], ")"}]}], "/", "dv"}], 
                 ")"}], "2"]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"0.035", "/", 
              SqrtBox[
               RowBox[{"(", 
                RowBox[{"1.0", "+", 
                 RowBox[{"NH2", "/", 
                  RowBox[{"(", 
                   RowBox[{"5.", " ", 
                    SuperscriptBox["10", "14."]}], ")"}]}]}], ")"}]]}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "8.5"}], " ", 
                SuperscriptBox["10", 
                 RowBox[{"-", "4."}]], "*", 
                SqrtBox[
                 RowBox[{"(", 
                  RowBox[{"1.0", "+", 
                   RowBox[{"NH2", "/", 
                    RowBox[{"(", 
                    RowBox[{"5.", " ", 
                    SuperscriptBox["10", "14."]}], ")"}]}]}], ")"}]]}], ")"}],
               "]"}]}]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"gamma", "=", 
         RowBox[{"5.4", " ", 
          SuperscriptBox["10", 
           RowBox[{"-", "13."}]], 
          SqrtBox["T"]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          FractionBox[
           RowBox[{"nH2", " ", "9.4", " ", 
            SuperscriptBox["10", 
             RowBox[{"-", "22"}]], "g0attH2"}], 
           RowBox[{"1", "+", 
            FractionBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1.9", " ", 
                SuperscriptBox["10", 
                 RowBox[{"-", "6."}]]}], "+", 
               RowBox[{"4.7", " ", 
                SuperscriptBox["10", 
                 RowBox[{"-", "10."}]], "g0attH2"}]}], ")"}], 
             RowBox[{"gamma", " ", "ngas"}]]}]], ",", 
          RowBox[{
           RowBox[{"-", "ngas"}], " ", "nH2", " ", "9.1", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "13."}]], "gamma", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{"-", 
             FractionBox["6592.", "T"]}], "]"}], 
           FractionBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8.6", " ", 
               SuperscriptBox["10", 
                RowBox[{"-", "7."}]]}], "+", 
              RowBox[{"2.6", " ", 
               SuperscriptBox["10", 
                RowBox[{"-", "11."}]], "g0attH2"}]}], ")"}], 
            RowBox[{
             RowBox[{"gamma", " ", "ngas"}], "+", 
             RowBox[{"8.6", " ", 
              SuperscriptBox["10", 
               RowBox[{"-", "7."}]]}], "+", 
             RowBox[{"2.6", " ", 
              SuperscriptBox["10", 
               RowBox[{"-", "11."}]], "g0attH2"}]}]]}]}], "}"}]}]}], "]"}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7354558028070836`*^9, 3.735456073756525*^9}, {
   3.7354561605486526`*^9, 3.73545645921169*^9}, {3.735456684353099*^9, 
   3.735456751519994*^9}, {3.7354722334298487`*^9, 3.735472321410807*^9}, 
   3.7356219818207493`*^9, {3.736228084571154*^9, 3.736228093020995*^9}, {
   3.7365864307473397`*^9, 3.73658658380869*^9}, {3.736587838286433*^9, 
   3.7365878759508753`*^9}, {3.7366601472849817`*^9, 
   3.7366601599441586`*^9}, {3.7366793333307714`*^9, 3.736679343127513*^9}, {
   3.832393257431192*^9, 3.8323933166859694`*^9}, {3.8654947037578545`*^9, 
   3.8654947227361984`*^9}, 3.8654947640878677`*^9},
 CellLabel->"In[43]:=",ExpressionUUID->"168cd93a-3d59-4da4-8500-b671d6dc20f7"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["CompiledFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  StyleBox[
                   PaneBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "_Real", ",", "_Real", ",", "_Real", ",", "_Real", ",", 
                    "_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                   False], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.038461538461538464`], {
               FaceForm[{
                 GrayLevel[0.93], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                25.499999999999996`, 2.5}, {25.499999999999996`, 
                1.3953100000000003`}, {24.604699999999998`, 
                0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                0.49999999999999994`}, {1.3953100000000003`, 
                0.49999999999999994`}, {0.49999999999999994`, 
                1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                24.604699999999998`}, {1.3953100000000003`, 
                25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                25.499999999999996`}, {24.604699999999998`, 
                25.499999999999996`}, {25.499999999999996`, 
                24.604699999999998`}, {25.499999999999996`, 23.5}, {
                25.499999999999996`, 2.5}}}]}, {
               FaceForm[{
                 RGBColor[0.5, 0.5, 0.5], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                16.3832, 20.021499999999996`}, {6.930469999999999, 
                20.021499999999996`}, {6.930469999999999, 
                18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                16.3832, 16.357399999999995`}, {20.5426, 
                19.116799999999998`}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                9.46445, 11.079700000000003`}, {9.46445, 
                12.933999999999997`}, {18.917199999999998`, 
                12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIRIGYC4r9qIkoPPog5zJd34+ifoeBwf6HGBfU8aYe0
2dKXhaMEHT77F2xc1CQH52elHtL/aqrg0KrArnpmjpRDvTCXYEG9gsOOYKuI
/6tlHZ5WFpRfO4qQn3ww8NOrXYpw/fNmfE3SCFCG8z8EiLwQ7lSF2w82/44y
nM937b/lmXNKDnK7FuxLZZFwMDfq/3NwgpKDccaL+Q9miDok9Mnt3x6k5FDt
mbylT0ECwk9QhOuXWfO/eIajPCq/WNYh5kh50jV+CYc1eV/nfGGShZsXte2a
OGevDNy8ZqG0W/9KpeD60cMLAIwUgfU=
                "]], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.82453, 
                5.289294374999999}, {11.960858124999998`, 8.29796625}, {
                11.080858124999999`, 8.29796625}, {12.417186249999999`, 
                4.337966249999999}, {13.193201874999998`, 
                4.337966249999999}, {14.540701874999998`, 8.29796625}, {
                13.688201874999999`, 8.29796625}, {12.82453, 
                5.289294374999999}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0,
                 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGIpIGYC4qwFP+fsFjB0WFcz7fnBvSIOLFaTza6GGTjM
l3fj6J+h4GC9PHLBXXc9DH7abOnLwlGCDtPNZKaxndfH4Is8/uOrISAD53uI
GTRGxyP4O4KtIv6fR/BbFdhVz8TIOqj9FNyfdEbfIejt5Y8zXiL4h7TunbCJ
koPzweYvkXP4mfT+6PSlBnD7n25Z/mROiSGcr7S/rqPX1AiuHsaHmQfjw+zz
lubzZjYxgrsHxoe5F8aH+QfGn/B91VROQQQfZr/Ei1viF75j8mHh6eiSdevo
cUM4Hz0+AG0eosQ=
                "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
             AspectRatio -> 1, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Thickness[Tiny], 
               GrayLevel[0.7]]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["7", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"{", 
                    
                    RowBox[{
                    "_Real", ",", "_Real", ",", "_Real", ",", "_Real", ",", 
                    "_Real", ",", "_Real", ",", "_Real"}], "}"}], 
                   ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    
                    RowBox[{
                    "G0", ",", "AV", ",", "Tt", ",", "ngas", ",", "nH2", ",", 
                    "NH2", ",", "dv"}], "}"}], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  PaneBox[
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "Compile`$6", ",", "Compile`$25", ",", "Compile`$26", ",",
                     "Compile`$39", ",", "Compile`$50"}], "}"}], ",", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"g0attH2", ",", "gamma", ",", 
                    RowBox[{"T", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{"2.7`", ",", "Tt"}], "]"}]}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"g0attH2", "=", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$6", "=", 
                    RowBox[{"NH2", " ", "2.`*^-15"}]}], ";", 
                    RowBox[{"Compile`$25", "=", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "+", 
                    "Compile`$6"}]}], ";", 
                    RowBox[{"Compile`$26", "=", 
                    SqrtBox["Compile`$25"]}], ";", 
                    RowBox[{"0.5`", " ", "G0", " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "3.02`"}], " ", "AV"}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    FractionBox["0.965`", 
                    RowBox[{
                    RowBox[{"1.`", "\[VeryThinSpace]"}], "+", 
                    SuperscriptBox[
                    RowBox[{"(", 
                    FractionBox["Compile`$6", "dv"], ")"}], "2"]}]], "+", 
                    FractionBox[
                    RowBox[{"0.035`", " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{
                    RowBox[{"-", "8.5`"}], " ", "0.0001`", " ", 
                    "Compile`$26"}], "]"}]}], "Compile`$26"]}], ")"}]}]}], 
                    ")"}]}], ";", 
                    RowBox[{"gamma", "=", 
                    RowBox[{"5.4`", " ", "1.`*^-13", " ", 
                    SqrtBox["T"]}]}], ";", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Compile`$39", "=", 
                    RowBox[{"gamma", " ", "ngas"}]}], ";", 
                    RowBox[{"Compile`$50", "=", 
                    RowBox[{"2.6`", " ", "1.`*^-11", " ", "g0attH2"}]}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"nH2", " ", "9.4`", " ", "g0attH2"}], 
                    RowBox[{
                    SuperscriptBox["10", "22"], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    FractionBox[
                    RowBox[{"1.8999999999999998`*^-6", "+", 
                    RowBox[{"4.7`", " ", "1.`*^-10", " ", "g0attH2"}]}], 
                    "Compile`$39"]}], ")"}]}]], ",", 
                    RowBox[{"-", 
                    FractionBox[
                    
                    RowBox[{"ngas", " ", "nH2", " ", "9.1`", " ", "1.`*^-13", 
                    " ", "gamma", " ", 
                    RowBox[{"Exp", "[", 
                    RowBox[{"-", 
                    FractionBox["6592.`", "T"]}], "]"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"8.599999999999999`*^-7", "+", "Compile`$50"}], 
                    ")"}]}], 
                    
                    RowBox[{"Compile`$39", "+", "8.599999999999999`*^-7", "+",
                     "Compile`$50"}]]}]}], "}"}]}], ")"}]}]}], "]"}]}], "]"}],
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                   Baseline, ContentPadding -> False, FrameMargins -> 0, 
                   StripOnInput -> True], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  CompiledFunction[{11, 13., 5468}, {
    Blank[Real], 
    Blank[Real], 
    Blank[Real], 
    Blank[Real], 
    Blank[Real], 
    Blank[Real], 
    Blank[Real]}, {{3, 0, 0}, {3, 0, 1}, {3, 0, 2}, {3, 0, 3}, {3, 0, 4}, {3, 
   0, 5}, {3, 0, 6}, {3, 1, 
   0}}, {{0.965, {3, 0, 18}}, {2.7, {3, 0, 7}}, {5.4, {3, 0, 25}}, {
    1., {3, 0, 11}}, {9.4, {3, 0, 29}}, {8.599999999999999*^-7, {3, 0, 38}}, {
    0.035, {3, 0, 20}}, {10, {2, 0, 0}}, {
    22, {2, 0, 1}}, {-3.02, {3, 0, 15}}, {
    4.7, {3, 0, 32}}, {-8.5, {3, 0, 22}}, {1.*^-11, {3, 0, 28}}, {
    0.0001, {3, 0, 23}}, {2.*^-15, {3, 0, 9}}, {2.6, {3, 0, 27}}, {
    1.8999999999999998`*^-6, {3, 0, 31}}, {1.*^-13, {3, 0, 26}}, {
    1, {2, 0, 3}}, {6592., {3, 0, 36}}, {0.5, {3, 0, 14}}, {
    1.*^-10, {3, 0, 33}}, {9.1, {3, 0, 35}}}, {0, 4, 41, 0, 
   1}, {{42, "MaxR", 3, 0, 7, 3, 0, 2, 3, 0, 8}, {16, 5, 9, 10}, {13, 11, 10, 
    12}, {40, 57, 3, 0, 12, 3, 0, 13}, {16, 15, 1, 16}, {40, 32, 3, 0, 16, 3, 
    0, 17}, {40, 60, 3, 0, 6, 3, 0, 16}, {16, 10, 16, 19}, {40, 56, 3, 0, 19, 
    3, 0, 16}, {13, 11, 16, 19}, {40, 60, 3, 0, 19, 3, 0, 16}, {16, 18, 16, 
    19}, {40, 60, 3, 0, 13, 3, 0, 16}, {16, 20, 16, 21}, {16, 22, 23, 13, 
    16}, {40, 32, 3, 0, 16, 3, 0, 24}, {16, 21, 24, 21}, {13, 19, 21, 19}, {
    16, 14, 0, 17, 19, 21}, {40, 57, 3, 0, 8, 3, 0, 24}, {16, 25, 26, 24, 
    16}, {16, 16, 3, 24}, {16, 27, 28, 21, 17}, {41, 263, 2, 0, 0, 2, 0, 1, 2,
     0, 2}, {10, 2, 19}, {40, 60, 3, 0, 19, 3, 0, 30}, {16, 32, 33, 21, 19}, {
    13, 31, 19, 34}, {40, 60, 3, 0, 24, 3, 0, 19}, {16, 34, 19, 34}, {10, 3, 
    19}, {13, 19, 34, 19}, {40, 60, 3, 0, 19, 3, 0, 34}, {16, 4, 29, 30, 21, 
    34, 19}, {19, 3, 30}, {40, 60, 3, 0, 8, 3, 0, 34}, {16, 36, 34, 37}, {19, 
    37, 34}, {40, 32, 3, 0, 34, 3, 0, 37}, {13, 38, 17, 34}, {13, 24, 38, 17, 
    39}, {40, 60, 3, 0, 39, 3, 0, 40}, {16, 34, 40, 34}, {16, 30, 4, 35, 26, 
    16, 37, 34, 30}, {34, 1, 2, 19, 30, 3, 0}, {1}}, 
   Function[{$CellContext`G0, $CellContext`AV, $CellContext`Tt, \
$CellContext`ngas, $CellContext`nH2, $CellContext`NH2, $CellContext`dv}, 
    Block[{Compile`$6, Compile`$25, Compile`$26, Compile`$39, Compile`$50}, 
     Module[{$CellContext`g0attH2, $CellContext`gamma, $CellContext`T = 
       Max[2.7, $CellContext`Tt]}, $CellContext`g0attH2 = (
        Compile`$6 = $CellContext`NH2 2.*^-15; Compile`$25 = 1. + Compile`$6; 
        Compile`$26 = Sqrt[Compile`$25]; 
        0.5 $CellContext`G0 
         Exp[(-3.02) $CellContext`AV] (
          0.965/(1. + (Compile`$6/$CellContext`dv)^2) + (0.035/Compile`$26) 
           Exp[(-8.5) 0.0001 Compile`$26])); $CellContext`gamma = 
       5.4 1.*^-13 Sqrt[$CellContext`T]; (
       Compile`$39 = $CellContext`gamma $CellContext`ngas; 
       Compile`$50 = 
        2.6 1.*^-11 $CellContext`g0attH2; {$CellContext`nH2 9.4 
         10^(-22) $CellContext`g0attH2/(
         1 + (1.8999999999999998`*^-6 + 4.7 1.*^-10 $CellContext`g0attH2)/
          Compile`$39), (-$CellContext`ngas) $CellContext`nH2 9.1 
         1.*^-13 $CellContext`gamma 
         Exp[-(6592./$CellContext`T)] ((8.599999999999999*^-7 + Compile`$50)/(
          Compile`$39 + 8.599999999999999*^-7 + Compile`$50))})]]], Evaluate],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.865495047845414*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"883e5548-a082-4290-bdba-45da7e2b0333"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Chemistry", "Subsection",
 CellChangeTimes->{{3.734848409647852*^9, 
  3.7348484180874805`*^9}},ExpressionUUID->"349830a5-0a26-455e-b732-\
12c8d7e8de76"],

Cell["Import chemical network", "Text",
 CellChangeTimes->{{3.8654935172183523`*^9, 
  3.865493523439288*^9}},ExpressionUUID->"8193ec95-88b9-45aa-84b4-\
24118890dead"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$dataDir", "=", 
   RowBox[{"NotebookDirectory", "[", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.865493582994381*^9, 3.865493589602528*^9}, 
   3.8654956200141125`*^9},
 CellLabel->
  "In[274]:=",ExpressionUUID->"a89c5b27-9d5c-4bf2-acf2-cd68fdaa6aaf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"raw", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$dataDir", ",", "\"\<data_chemnet.dat\>\""}], "}"}], "]"}], 
      ",", "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "elements"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nelem", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"raw", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "//", "Flatten"}], "//", "First"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "chemical", " ", "species"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nspecies", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"raw", "[", 
      RowBox[{"[", 
       RowBox[{"4", "+", "nelem", "+", "1"}], "]"}], "]"}], "//", "Flatten"}],
     "//", "First"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "chemical", " ", "reactions"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"nreactions", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"raw", "[", 
     RowBox[{"[", 
      RowBox[{"7", "+", "nelem", "+", "nspecies", "+", "1"}], "]"}], "]"}], "//",
     "Flatten"}], "//", "First", "\n"}]}]}], "Input",
 CellChangeTimes->{{3.733226352789402*^9, 3.7332263838053384`*^9}, 
   3.734432953292388*^9, {3.7355529103689876`*^9, 3.735552914024908*^9}, {
   3.832322576074695*^9, 3.8323225856549554`*^9}, {3.8654935941172667`*^9, 
   3.8654936611025743`*^9}},
 CellLabel->
  "In[275]:=",ExpressionUUID->"66e61793-f326-4250-8b8f-61ab3ab2451c"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{
  3.735552915024833*^9, 3.7356362938575025`*^9, 3.73616755484787*^9, 
   3.7364939199886894`*^9, 3.7365866272021217`*^9, 3.7371118544922967`*^9, 
   3.7371938588502707`*^9, 3.7375430596129932`*^9, {3.832322572201138*^9, 
   3.8323225866195927`*^9}, {3.832323418512843*^9, 3.8323234237214756`*^9}, 
   3.8323237571306667`*^9, 3.8323249030185795`*^9, 3.832496719899985*^9, 
   3.832496875195063*^9, 3.8654950479431095`*^9, 3.865495650703577*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"6753602f-3b92-4003-b8e5-37fa8326220d"],

Cell[BoxData["31"], "Output",
 CellChangeTimes->{
  3.735552915024833*^9, 3.7356362938575025`*^9, 3.73616755484787*^9, 
   3.7364939199886894`*^9, 3.7365866272021217`*^9, 3.7371118544922967`*^9, 
   3.7371938588502707`*^9, 3.7375430596129932`*^9, {3.832322572201138*^9, 
   3.8323225866195927`*^9}, {3.832323418512843*^9, 3.8323234237214756`*^9}, 
   3.8323237571306667`*^9, 3.8323249030185795`*^9, 3.832496719899985*^9, 
   3.832496875195063*^9, 3.8654950479431095`*^9, 3.8654956507192764`*^9},
 CellLabel->
  "Out[277]=",ExpressionUUID->"3af45241-d25a-4bbf-947f-817a7f6bc0e1"],

Cell[BoxData["307"], "Output",
 CellChangeTimes->{
  3.735552915024833*^9, 3.7356362938575025`*^9, 3.73616755484787*^9, 
   3.7364939199886894`*^9, 3.7365866272021217`*^9, 3.7371118544922967`*^9, 
   3.7371938588502707`*^9, 3.7375430596129932`*^9, {3.832322572201138*^9, 
   3.8323225866195927`*^9}, {3.832323418512843*^9, 3.8323234237214756`*^9}, 
   3.8323237571306667`*^9, 3.8323249030185795`*^9, 3.832496719899985*^9, 
   3.832496875195063*^9, 3.8654950479431095`*^9, 3.865495650726945*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"2f3fd19e-c22f-4991-a59b-96cf24a20bad"]
}, Open  ]],

Cell["CO self shielding factors (shielding from FUV radiation).", "Text",
 CellChangeTimes->{{3.8654936763749275`*^9, 
  3.8654936912057953`*^9}},ExpressionUUID->"bfbadd36-1b93-423a-b6c7-\
278c9ac12e5d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rawSS", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{"$dataDir", ",", "\"\<data_coselfs.dat\>\""}], "}"}], "]"}], 
     ",", "\"\<Table\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"COselfs", ":=", 
  RowBox[{"ListInterpolation", "[", 
   RowBox[{"rawSS", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"logspace", "[", 
       RowBox[{
        SuperscriptBox["10", "14.8"], ",", 
        SuperscriptBox["10", "23."], ",", "42"}], "]"}], ",", 
      RowBox[{"logspace", "[", 
       RowBox[{
        SuperscriptBox["10", "9.8"], ",", 
        SuperscriptBox["10", "19."], ",", "47"}], "]"}]}], "}"}]}], 
   "]"}]}], "\n", 
 RowBox[{"COselfs", "[", 
  RowBox[{
   SuperscriptBox["10", "23"], ",", 
   SuperscriptBox["10", "19"]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7334804958922606`*^9, 3.7334805274081717`*^9}, {
   3.735448328513897*^9, 3.7354483331384907`*^9}, 3.832322614431899*^9, {
   3.865493669587728*^9, 3.865493673750538*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"64a808e4-1c0c-48ac-8300-1637014af84b"],

Cell[BoxData["3.306000000000023`*^-7"], "Output",
 CellChangeTimes->{3.7354483338259387`*^9, 3.7355528996041*^9, 
  3.735636294763688*^9, 3.7361675577687197`*^9, 3.7364939222695255`*^9, 
  3.736586630792845*^9, 3.7371118556644382`*^9, 3.7371938604282637`*^9, 
  3.737543060568727*^9, 3.83232261601044*^9, 3.832323423806249*^9, 
  3.832323760147657*^9, 3.8323249053704834`*^9, 3.8324967200256705`*^9, 
  3.8324968754114847`*^9, 3.8654950480198727`*^9, 3.8654956507518034`*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"a79b3d8f-ced1-4b54-abb7-b7975997e46e"]
}, Open  ]],

Cell["\<\
Species, their relative elemental abundance (relative to H) and their \
elemental composition.\
\>", "Text",
 CellChangeTimes->{{3.865493708268077*^9, 3.8654937148675003`*^9}, {
  3.865493750572775*^9, 
  3.8654937595474377`*^9}},ExpressionUUID->"278200f3-fddb-4abe-a9af-\
3824854d2a23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"species", "=", 
  RowBox[{"raw", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"6", "+", "nelem", "+", "1"}], ";;", 
     RowBox[{"6", "+", "nelem", "+", "nspecies"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7332269260134115`*^9, 3.733226982060766*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"f1488576-aa9b-4e3f-a6a5-5687fdf88c47"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"H\"\>", ",", "1.`", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"H+\"\>", ",", "0.`", ",", "1", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"H2\"\>", ",", "0.`", ",", "2", ",", "0", ",", "2", ",", "0", 
     ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"H2+\"\>", ",", "0.`", ",", "2", ",", "1", ",", "2", ",", "0",
      ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"H3+\"\>", ",", "0.`", ",", "3", ",", "1", ",", "3", ",", "0",
      ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O\"\>", ",", "0.0003`", ",", "16", ",", "0", ",", "0", ",", 
     "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O+\"\>", ",", "0.`", ",", "16", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"OH+\"\>", ",", "0.`", ",", "17", ",", "1", ",", "1", ",", 
     "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"OH\"\>", ",", "0.`", ",", "17", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O2\"\>", ",", "0.`", ",", "32", ",", "0", ",", "0", ",", "0",
      ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"O2+\"\>", ",", "0.`", ",", "32", ",", "1", ",", "0", ",", 
     "0", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"H2O\"\>", ",", "0.`", ",", "18", ",", "0", ",", "2", ",", 
     "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"H2O+\"\>", ",", "0.`", ",", "18", ",", "1", ",", "2", ",", 
     "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"H3O+\"\>", ",", "0.`", ",", "19", ",", "1", ",", "3", ",", 
     "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C\"\>", ",", "0.0001`", ",", "12", ",", "0", ",", "0", ",", 
     "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"C+\"\>", ",", "0.`", ",", "12", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CH\"\>", ",", "0.`", ",", "13", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CH+\"\>", ",", "0.`", ",", "13", ",", "1", ",", "1", ",", 
     "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CH2\"\>", ",", "0.`", ",", "14", ",", "0", ",", "2", ",", 
     "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CH2+\"\>", ",", "0.`", ",", "14", ",", "1", ",", "2", ",", 
     "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CH3\"\>", ",", "0.`", ",", "15", ",", "0", ",", "3", ",", 
     "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CH3+\"\>", ",", "0.`", ",", "15", ",", "1", ",", "3", ",", 
     "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CH4\"\>", ",", "0.`", ",", "16", ",", "0", ",", "4", ",", 
     "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CH4+\"\>", ",", "0.`", ",", "16", ",", "1", ",", "4", ",", 
     "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CH5+\"\>", ",", "0.`", ",", "17", ",", "1", ",", "5", ",", 
     "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CO\"\>", ",", "0.`", ",", "28", ",", "0", ",", "0", ",", "0",
      ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"CO+\"\>", ",", "0.`", ",", "28", ",", "1", ",", "0", ",", 
     "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"HCO+\"\>", ",", "0.`", ",", "29", ",", "1", ",", "1", ",", 
     "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"He\"\>", ",", "0.1`", ",", "4", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"He+\"\>", ",", "0.`", ",", "4", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\<\"e-\"\>", ",", "0.`", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.734681853377338*^9, 3.7346851719644566`*^9, 
  3.7346856271933174`*^9, 3.7350339641349745`*^9, 3.735041025788187*^9, 
  3.7354483140305295`*^9, 3.735552919212036*^9, 3.735636301606942*^9, 
  3.7361675653356466`*^9, 3.7364939248334675`*^9, 3.7365866332793436`*^9, 
  3.7371118587205596`*^9, 3.737193863553046*^9, 3.737543064411618*^9, 
  3.832322618535159*^9, 3.8323234238870325`*^9, 3.8323237608218527`*^9, 
  3.8323249061144934`*^9, 3.8324967200906577`*^9, 3.8324968756109524`*^9, 
  3.8654950480673575`*^9, 3.8654956507740097`*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"8b756cda-3ec6-4a08-97ca-994841ba0218"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"repairReactions", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "e1_", ",", "e2_", ",", "p1_", ",", "p2_", ",", "p3_", ",", 
        "n_Integer", ",", 
        RowBox[{"t_", "?", "Integer"}], ",", "a_", ",", "b_", ",", "c_"}], 
       "}"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
       "e1", ",", "e2", ",", "p1", ",", "p2", ",", "p3", ",", "n", ",", "t", 
        ",", "a", ",", "b", ",", "c"}], "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "e1_", ",", "p1_", ",", "p2_", ",", "n_Integer", ",", "14", ",", "a_", 
        ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
       "e1", ",", "\"\<\>\"", ",", "p1", ",", "p2", ",", "\"\<\>\"", ",", "n",
         ",", "14", ",", "a", ",", "b", ",", "c"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "e1_", ",", "e2_", ",", "p1_", ",", "n_Integer", ",", "0", ",", "a_", 
        ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
       "e1", ",", "e2", ",", "p1", ",", "\"\<\>\"", ",", "\"\<\>\"", ",", "n",
         ",", "0", ",", "a", ",", "b", ",", "c"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "e1_", ",", "e2_", ",", "p1_", ",", "p2_", ",", "n_Integer", ",", "2", 
        ",", "a_", ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
       "e1", ",", "e2", ",", "p1", ",", "p2", ",", "\"\<\>\"", ",", "n", ",", 
        "2", ",", "a", ",", "b", ",", "c"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "e1_", ",", "e2_", ",", "p1_", ",", "p2_", ",", "n_Integer", ",", "3", 
        ",", "a_", ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
       "e1", ",", "e2", ",", "p1", ",", "p2", ",", "\"\<\>\"", ",", "n", ",", 
        "3", ",", "a", ",", "b", ",", "c"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "e1_", ",", "e2_", ",", "p1_", ",", "p2_", ",", "n_Integer", ",", "99",
         ",", "a_", ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
       "e1", ",", "e2", ",", "p1", ",", "p2", ",", "\"\<\>\"", ",", "n", ",", 
        "99", ",", "a", ",", "b", ",", "c"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "e1_", ",", "e2_", ",", "p1_", ",", "p2_", ",", "n_Integer", ",", "1", 
        ",", "a_", ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
       "e1", ",", "e2", ",", "p1", ",", "p2", ",", "\"\<\>\"", ",", "n", ",", 
        "1", ",", "a", ",", "b", ",", "c"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "e1_", ",", "e2_", ",", "p1_", ",", "p2_", ",", "n_Integer", ",", "13",
         ",", "a_", ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
       "e1", ",", "e2", ",", "p1", ",", "p2", ",", "\"\<\>\"", ",", "n", ",", 
        "13", ",", "a", ",", "b", ",", "c"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "e1_", ",", "e2_", ",", "p1_", ",", "p2_", ",", "n_Integer", ",", "15",
         ",", "a_", ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
       "e1", ",", "e2", ",", "p1", ",", "p2", ",", "\"\<\>\"", ",", "n", ",", 
        "15", ",", "a", ",", "b", ",", "c"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "e1_", ",", "e2_", ",", "p1_", ",", "p2_", ",", "n_Integer", ",", "16",
         ",", "a_", ",", "b_", ",", "c_"}], "}"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
       "e1", ",", "e2", ",", "p1", ",", "p2", ",", "\"\<\>\"", ",", "n", ",", 
        "16", ",", "a", ",", "b", ",", "c"}], "}"}]}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7334823311939692`*^9, 3.7334823435847206`*^9}, {
  3.733482385522604*^9, 3.7334826282435355`*^9}, {3.7334952532230854`*^9, 
  3.7334952599262323`*^9}, {3.7334955457257624`*^9, 3.733495549928893*^9}, {
  3.733495788227916*^9, 3.7334958595286474`*^9}, {3.733496129296733*^9, 
  3.7334961369218025`*^9}, {3.733496289423252*^9, 3.733496298923308*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"e3e62bda-e276-4728-931f-133b78697be5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"reactions", "=", 
   RowBox[{
    RowBox[{"raw", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"7", "+", "nelem", "+", "nspecies", "+", "3"}], ";;", 
       RowBox[{
       "7", "+", "nelem", "+", "nspecies", "+", "3", "+", "nreactions", "-", 
        "1"}]}], "]"}], "]"}], "/.", "repairReactions"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.733226688901842*^9, 3.7332267612462797`*^9}, {
  3.733481863720969*^9, 3.733481863830343*^9}, {3.733495292270318*^9, 
  3.7334952942234154`*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"fa87f0e0-ee34-4aca-be7c-ce8ae37d375f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"reactions", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "[", 
      RowBox[{"[", "7", "]"}], "]"}], "\[Equal]", "0"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.735457148644906*^9, 3.7354571828924227`*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"766ebc0d-3bf9-472a-ba8f-fa6ddaa30f1d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\<\"H\"\>", ",", "\<\"H\"\>", ",", "\<\"H2\"\>", ",", "\<\"\"\>", 
    ",", "\<\"\"\>", ",", "306", ",", "0", ",", "3.`*^-18", ",", "0.5`", ",", 
    "0.`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7354571834548235`*^9, 3.8087404926654773`*^9, 
  3.8323234240097065`*^9, 3.8323237630093093`*^9, 3.8324967201754313`*^9, 
  3.8324968851300116`*^9, 3.865495048115145*^9, 3.8654956507835608`*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"bc3a2ae4-a493-40d0-82c9-19162365a7ba"]
}, Open  ]],

Cell["Starting (relative) densities.", "Text",
 CellChangeTimes->{{3.865493778442316*^9, 
  3.865493786760375*^9}},ExpressionUUID->"9df7f178-b16d-473c-98e0-\
3a0f20ceccb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"y0", "=", 
  RowBox[{"species", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.733501715156908*^9, 3.733501730667411*^9}, {
   3.733501762945129*^9, 3.7335017676072817`*^9}, 3.7335036585268936`*^9},
 CellLabel->
  "In[286]:=",ExpressionUUID->"568fdaac-8f2f-4123-9f6d-ce0ccaaea206"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.0003`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.0001`", ",", "0.`", ",", "0.`", ",", "0.`", ",",
    "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.1`", ",", "0.`", ",", 
   "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7335017311139536`*^9, 3.7335017681917396`*^9, 
  3.733503659911284*^9, 3.7344329954924793`*^9, 3.734681862845423*^9, 
  3.734685178307764*^9, 3.7346856315680175`*^9, 3.7350339895237164`*^9, 
  3.7350410324329815`*^9, 3.7354483379506454`*^9, 3.735552924336656*^9, 
  3.7356363058566275`*^9, 3.736167572090084*^9, 3.7364939289253693`*^9, 
  3.7365866389274535`*^9, 3.737111863450799*^9, 3.7371938793331327`*^9, 
  3.7375430683785305`*^9, 3.8087404874412637`*^9, 3.832322623989131*^9, 
  3.832323424066552*^9, 3.8323237642453003`*^9, 3.83232491136327*^9, 
  3.8324967202322793`*^9, 3.8324968873576107`*^9, 3.8654950481784863`*^9, 
  3.865495650799642*^9},
 CellLabel->
  "Out[286]=",ExpressionUUID->"78828273-c026-49c9-a1bb-e6ed385e1f87"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tmp", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Name\>\"", ",", "\"\<Initial\>\"", ",", "\"\<amu\>\"", ",", 
     "\"\<crg\>\"", ",", "\"\<H\>\"", ",", "\"\<He\>\"", ",", "\"\<C\>\"", 
     ",", "\"\<O\>\""}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"spec", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Association", "[", 
      RowBox[{"Rule", "@@@", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"tmp", ",", "#"}], "}"}], "]"}]}], "]"}], "&"}], "/@", 
    "species"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7334809849869056`*^9, 3.733481034487419*^9}, 
   3.7371938859107637`*^9},
 CellLabel->
  "In[287]:=",ExpressionUUID->"5c721553-e4e2-4632-9c27-9f40b9961f05"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"spec", "[", 
   RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<crg\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.7334811922304363`*^9, 3.7334812078087006`*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"465e8a09-5f85-4d10-b177-8dd2adfa33e5"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.7344335495155535`*^9, 3.734685181276301*^9, 
  3.734685636223919*^9, 3.7350339919454117`*^9, 3.7354483412160144`*^9, 
  3.7355529308986588`*^9, 3.832323424145342*^9, 3.832323768532783*^9, 
  3.8324967202881308`*^9, 3.865495048225683*^9, 3.8654956508182073`*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"21a8b7a8-0636-4cea-8bf3-c06d2e98e805"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"spec", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "\"\<Name\>\""}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.734433550859207*^9, 3.7344336126985116`*^9}},
 CellLabel->
  "In[290]:=",ExpressionUUID->"9316ca40-9a2c-4ca2-a656-a0c2ff7d67a1"],

Cell[BoxData["\<\"H+\"\>"], "Output",
 CellChangeTimes->{{3.7344335560307064`*^9, 3.734433613214098*^9}, 
   3.734685637270733*^9, 3.832323424202191*^9, 3.8323237695012207`*^9, 
   3.832496720338997*^9, 3.8654950482680893`*^9, 3.865495650834428*^9},
 CellLabel->
  "Out[290]=",ExpressionUUID->"44431c5e-103e-48dc-8f74-1c65d03cd520"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["nspecies"], "Input",
 CellChangeTimes->{{3.7334978556669664`*^9, 3.733497856542018*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"b642aec1-06b3-448f-acf3-91cb1ce4f9d3"],

Cell[BoxData["31"], "Output",
 CellChangeTimes->{3.73349785683885*^9, 3.808738716642607*^9, 
  3.8323234243887587`*^9, 3.832496720506546*^9, 3.8654950482736177`*^9, 
  3.8654956508526106`*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"4e75c4dc-fffe-4576-b7c2-7baab5c4e603"]
}, Open  ]],

Cell["Helper functions.", "Text",
 CellChangeTimes->{{3.865493819889309*^9, 
  3.8654938224526815`*^9}},ExpressionUUID->"56c9e1e6-c814-477b-8da7-\
fe4685ac2f07"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "getSpecies", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getSpecies", "[", "i_Integer", "]"}], ":=", 
  RowBox[{
   RowBox[{"species", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
   RowBox[{"[", "i", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getSpecies", "[", "i_Missing", "]"}], ":=", 
  RowBox[{"nspecies", "+", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getSpecies", "[", 
   RowBox[{
   "\"\<\>\"", "|", "\"\<CRPHOT\>\"", "|", "\"\<PHOTON\>\"", "|", 
    "\"\<CRP\>\""}], "]"}], ":=", 
  RowBox[{"nspecies", "+", "1"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getSpecies", "[", "i_String", "]"}], ":=", 
  RowBox[{
   RowBox[{"Association", "[", 
    RowBox[{"Rule", "@@@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"species", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"Range", "[", "nspecies", "]"}]}], "}"}], "]"}]}], "]"}], "[", 
   RowBox[{"StringTrim", "[", "i", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getCons", "[", "i_Integer", "]"}], ":=", 
  RowBox[{
   RowBox[{"species", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "nelem"}], ";;", 
     RowBox[{"-", "1"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getCons", "[", "i_Missing", "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", "nelem"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getCons", "[", 
   RowBox[{
   "\"\<\>\"", "|", "\"\<CRPHOT\>\"", "|", "\"\<PHOTON\>\"", "|", 
    "\"\<CRP\>\""}], "]"}], ":=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"0", ",", "nelem"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"getCons", "[", "i_String", "]"}], ":=", 
  RowBox[{
   RowBox[{"Association", "[", 
    RowBox[{"Rule", "@@@", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"species", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"species", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{
            RowBox[{"-", "nelem"}], ";;", 
            RowBox[{"-", "1"}]}]}], "]"}], "]"}]}], "}"}], "]"}]}], "]"}], 
   "[", 
   RowBox[{"StringTrim", "[", "i", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.733480044016218*^9, 3.733480061578929*^9}, {
  3.733480193892634*^9, 3.7334802045333595`*^9}, {3.733480234533572*^9, 
  3.733480262158883*^9}, {3.7334953574739833`*^9, 3.733495366020996*^9}, {
  3.733496414127512*^9, 3.7334964223307137`*^9}, {3.7334964765342836`*^9, 
  3.733496534706709*^9}, {3.733496605095337*^9, 3.733496610282896*^9}, {
  3.733496796847084*^9, 3.7334968002534266`*^9}, {3.7334969472390833`*^9, 
  3.733496958335755*^9}, {3.733497834588631*^9, 3.733497877167203*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"d2a6bc17-6274-4df8-82e7-1243bf448ce9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"getCons", "[", "\"\<H\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.733496613767291*^9, 3.7334966167204437`*^9}},
 CellLabel->
  "In[301]:=",ExpressionUUID->"33742ee2-df83-45bf-b490-80df7a30c998"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7334966173298397`*^9, 3.734433197675172*^9, 
  3.7346856472543907`*^9, 3.808740505628869*^9, 3.83232263034083*^9, 
  3.8323234244745035`*^9, 3.832323777104025*^9, 3.8324967205633936`*^9, 
  3.8654950483371544`*^9, 3.865495650881226*^9},
 CellLabel->
  "Out[301]=",ExpressionUUID->"662df52f-f0dd-4635-8971-78810ea7a49b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"checkConservation", "[", 
    RowBox[{"spec_", ",", "reacs_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"e1", "=", 
        RowBox[{"getCons", "/@", 
         RowBox[{"reacs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"e2", "=", 
        RowBox[{"getCons", "/@", 
         RowBox[{"reacs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"p1", "=", 
        RowBox[{"getCons", "/@", 
         RowBox[{"reacs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"p2", "=", 
        RowBox[{"getCons", "/@", 
         RowBox[{"reacs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "4"}], "]"}], "]"}]}]}], ",", 
       RowBox[{"p3", "=", 
        RowBox[{"getCons", "/@", 
         RowBox[{"reacs", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "5"}], "]"}], "]"}]}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e1", "+", "e2"}], "\[Equal]", 
      RowBox[{"p1", "+", "p2", "+", "p3"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7334814908112836`*^9, 3.7334816898287535`*^9}, {
   3.733481751048003*^9, 3.7334817682512856`*^9}, 3.733496375595853*^9, {
   3.7334966465176463`*^9, 3.7334966565646176`*^9}, {3.733497006949668*^9, 
   3.733497017949765*^9}, {3.733497054746981*^9, 3.733497061637719*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"6cdf6e02-234f-4bd1-b4c8-3d45f1ab9141"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"checkConservation", "[", 
  RowBox[{"species", ",", "reactions"}], "]"}]], "Input",
 CellChangeTimes->{{3.733481648515848*^9, 3.7334816553127556`*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"0a7856be-fdeb-47f4-b81e-9443de2ab4e7"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.733481656281513*^9, 3.733481691266224*^9}, {
   3.7334817537199197`*^9, 3.7334817694544373`*^9}, 3.7334818831898518`*^9, 
   3.7334966590489683`*^9, 3.7334968090815716`*^9, {3.7334970009964795`*^9, 
   3.733497019184144*^9}, 3.733497063543925*^9, 3.7335060225801325`*^9, 
   3.7344334637560863`*^9, 3.7346818779537134`*^9, 3.734685191838029*^9, 
   3.735033998976142*^9, 3.7354483515746207`*^9, 3.8087387269001875`*^9, 
   3.832323424578224*^9, 3.8323237784977083`*^9, 3.8323249168486423`*^9, 
   3.832496721270503*^9, 3.8324968962803764`*^9, 3.865495048432067*^9, 
   3.8654956509135184`*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"fd13caa6-9640-46e2-ad85-076607199a9e"]
}, Open  ]],

Cell["Construct all chemical DEQs. Input parameters:", "Text",
 CellChangeTimes->{{3.865493951356619*^9, 3.8654939677970934`*^9}, {
  3.8654940174535217`*^9, 
  3.8654940232624145`*^9}},ExpressionUUID->"ea7d7199-b5a8-4feb-9e8e-\
3251a5b5d654"],

Cell[TextData[{
 "y\t\tinitial chemical density vector ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e19d2969-d39a-43c2-a88d-9c28ac9290e2"]
}], "ItemParagraph",
 CellChangeTimes->{{3.8654940343409452`*^9, 3.8654940825672894`*^9}, {
   3.865494282659626*^9, 3.865494283403256*^9}, 
   3.8654978765122986`*^9},ExpressionUUID->"ca1a25ca-d49f-48cf-b52c-\
c6a8a1df356a"],

Cell["time\t\ttarget time (s)", "ItemParagraph",
 CellChangeTimes->{{3.8654940343409452`*^9, 3.8654940899544315`*^9}, 
   3.865497878342578*^9},ExpressionUUID->"4837cf21-54ae-4470-8b4e-\
67262a1d8c0d"],

Cell["T\t\tgas temperature (K)", "ItemParagraph",
 CellChangeTimes->{{3.8654940343409452`*^9, 3.865494097688655*^9}, 
   3.865497879122921*^9},ExpressionUUID->"b7613202-e650-4830-9a0b-\
0e6f05cf892b"],

Cell[TextData[{
 "ntot\t\ttotal gas temperature ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "6276764c-667e-417e-bf8f-6fafba86ec97"]
}], "ItemParagraph",
 CellChangeTimes->{{3.8654940343409452`*^9, 3.8654941145897737`*^9}, 
   3.865497879662608*^9},ExpressionUUID->"c1d4181a-b2ea-4511-844d-\
467de68462b6"],

Cell[TextData[{
 "zetaCR\t\tcosmic ray ionization rate ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["s", 
     RowBox[{"-", "1"}]], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ac2fdbc7-9ecd-4eeb-bef0-9db21eee5b4e"]
}], "ItemParagraph",
 CellChangeTimes->{{3.8654940343409452`*^9, 3.8654941593322935`*^9}, 
   3.865497880285287*^9},ExpressionUUID->"ce1a1e98-d0da-4998-9c6c-\
1027457d499d"],

Cell["G0\t\tstrength of local FUV radiation (in Habing units)", \
"ItemParagraph",
 CellChangeTimes->{{3.8654940343409452`*^9, 3.8654941620280557`*^9}, 
   3.865497880878019*^9},ExpressionUUID->"0ceaf407-fdc8-4f06-b34e-\
1ac6772b47a3"],

Cell["AV\t\tlocal visual extinction, i.e. depth in cloud", "ItemParagraph",
 CellChangeTimes->{{3.8654940343409452`*^9, 3.8654941777361097`*^9}, 
   3.8654978820034285`*^9},ExpressionUUID->"ff812340-e8f4-4622-b7cf-\
1c62fd98099f"],

Cell[TextData[{
 "NH2\t\tlocal H2 column density ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "2"}]], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b1aa069c-2bcb-4ce7-9e3c-99f2522a71ae"],
 ", i.e. H2 column perpendicular to the surface"
}], "ItemParagraph",
 CellChangeTimes->{{3.8654940343409452`*^9, 3.8654942031362853`*^9}, 
   3.8654978826328387`*^9},ExpressionUUID->"458cbd0d-f7fb-44ba-a248-\
2778741517a2"],

Cell[TextData[{
 "NCO\t\t local CO column density ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "2"}]], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "c4e6e4a2-76cc-4962-ae63-86e86f730fef"],
 ", i.e. CO column perpendicular to the surface"
}], "ItemParagraph",
 CellChangeTimes->{{3.8654940343409452`*^9, 3.8654942183903413`*^9}, 
   3.865497883420054*^9},ExpressionUUID->"f554234d-bc62-4414-a912-\
5aa65449f60d"],

Cell[TextData[{
 "NC\t\tlocal C column density ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "2"}]], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ba7a1786-8553-4813-b7dc-ecd9b4f25b4c"],
 ", i.e. C column perpendicular to the surface"
}], "ItemParagraph",
 CellChangeTimes->{{3.8654940343409452`*^9, 3.865494234990923*^9}, 
   3.86549788400569*^9},ExpressionUUID->"5e3c7e80-d7e5-40c1-9069-\
41932ff74211"],

Cell[TextData[{
 "dv\t\tDoppler line width (km ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", 
    RowBox[{"-", "1"}]], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "f1f8324d-c407-4bbb-8a29-0d023208625d"],
 ")"
}], "ItemParagraph",
 CellChangeTimes->{{3.8654940343409452`*^9, 3.8654942445442686`*^9}, 
   3.8654978846576815`*^9},ExpressionUUID->"c950e554-d335-4577-87c4-\
7e8e499384a0"],

Cell["Output: system of differential equations to be solved.", "Text",
 CellChangeTimes->{{3.8654942558604937`*^9, 
  3.8654943131303625`*^9}},ExpressionUUID->"d78f9577-969f-4a7d-ac8f-\
5e55c19c4f82"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "setUpChemistry", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"setUpChemistry", "[", 
   RowBox[{"y_", ",", 
    RowBox[{"time_", ":", 
     SuperscriptBox["10", "13"]}], ",", 
    RowBox[{"T_", ":", "100"}], ",", 
    RowBox[{"ntot_", ":", 
     SuperscriptBox["10", "4"]}], ",", 
    RowBox[{"zetaCR_", ":", 
     SuperscriptBox["10", 
      RowBox[{"-", "17"}]]}], ",", 
    RowBox[{"G0_", ":", "1."}], ",", 
    RowBox[{"AV_", ":", "1."}], ",", 
    RowBox[{"NH2_", ":", 
     SuperscriptBox["10", "12"]}], ",", 
    RowBox[{"NCO_", ":", 
     SuperscriptBox["10", "12"]}], ",", 
    RowBox[{"NC_", ":", 
     SuperscriptBox["10", "12"]}], ",", 
    RowBox[{"dv_", ":", "1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"e1", "=", 
       RowBox[{"getSpecies", "/@", 
        RowBox[{"reactions", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"e2", "=", 
       RowBox[{"getSpecies", "/@", 
        RowBox[{"reactions", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"p1", "=", 
       RowBox[{"getSpecies", "/@", 
        RowBox[{"reactions", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "3"}], "]"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"p2", "=", 
       RowBox[{"getSpecies", "/@", 
        RowBox[{"reactions", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "4"}], "]"}], "]"}]}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"p3", "=", 
       RowBox[{"getSpecies", "/@", 
        RowBox[{"reactions", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "5"}], "]"}], "]"}]}]}], ",", "mat", ",", 
      "\[IndentingNewLine]", "betaH2", ",", "betaCO", ",", "betaC", ",", 
      "\[IndentingNewLine]", 
      RowBox[{"H2FormIndex", "=", 
       RowBox[{"First", "@", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{"reactions", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "7"}], "]"}], "]"}], ",", "0"}], "]"}], 
         "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mat", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"nspecies", "+", "1"}], ",", "nreactions"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"betaH2", "=", 
      RowBox[{"H2selfs", "[", 
       RowBox[{"NH2", ",", "dv"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"betaCO", "=", 
      RowBox[{"COselfs", "[", 
       RowBox[{"NH2", ",", "NCO"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"betaC", "=", 
      RowBox[{"Cselfs", "[", 
       RowBox[{"NH2", ",", "NC", ",", "T"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", " ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mat", "[", 
          RowBox[{"[", 
           RowBox[{"#1", ",", 
            RowBox[{"First", "@", "#2"}]}], "]"}], "]"}], "--"}], "&"}], ",", 
       "e1"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", " ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mat", "[", 
          RowBox[{"[", 
           RowBox[{"#1", ",", 
            RowBox[{"First", "@", "#2"}]}], "]"}], "]"}], "--"}], "&"}], ",", 
       "e2"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", " ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mat", "[", 
          RowBox[{"[", 
           RowBox[{"#1", ",", 
            RowBox[{"First", "@", "#2"}]}], "]"}], "]"}], "++"}], "&"}], ",", 
       "p1"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", " ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mat", "[", 
          RowBox[{"[", 
           RowBox[{"#1", ",", 
            RowBox[{"First", "@", "#2"}]}], "]"}], "]"}], "++"}], "&"}], ",", 
       "p2"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"MapIndexed", " ", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"mat", "[", 
          RowBox[{"[", 
           RowBox[{"#1", ",", 
            RowBox[{"First", "@", "#2"}]}], "]"}], "]"}], "++"}], "&"}], ",", 
       "p3"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"kRate", "=", 
      RowBox[{
       RowBox[{"Quiet", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"reactionRateCoefficient", "[", 
            RowBox[{"reactions", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "7"}], " ", "]"}], "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"reactions", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", 
               RowBox[{"8", ";;", "10"}]}], "]"}], "]"}], ",", "T", ",", 
            "ntot", ",", 
            RowBox[{"y", "[", 
             RowBox[{"[", 
              RowBox[{"getSpecies", "[", "\"\<H\>\"", "]"}], "]"}], "]"}], 
            ",", "zetaCR", ",", "G0", ",", "AV", ",", "betaH2", ",", "betaCO",
             ",", "betaC"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "[", "reactions", "]"}]}], "}"}]}], "]"}]}], 
       "*", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"y", ",", "1."}], "]"}], "[", 
        RowBox[{"[", "e1", "]"}], "]"}], "*", 
       RowBox[{
        RowBox[{"Append", "[", 
         RowBox[{"y", ",", "1."}], "]"}], "[", 
        RowBox[{"[", "e2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"mat", "[", 
       RowBox[{"[", 
        RowBox[{
         RowBox[{"1", ";;", "nspecies"}], ",", "All"}], "]"}], "]"}], ".", 
      "kRate"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.7334976366898346`*^9, 3.733497670080739*^9}, {
   3.7334978917766705`*^9, 3.7334979506678796`*^9}, {3.7334980226529107`*^9, 
   3.733498136247634*^9}, {3.7334982109755096`*^9, 3.7334982420664015`*^9}, {
   3.733498401458929*^9, 3.733498403537073*^9}, {3.7334984415687027`*^9, 
   3.7334984595375843`*^9}, {3.733498614007778*^9, 3.7334986811958313`*^9}, {
   3.7334990637178526`*^9, 3.733499159337695*^9}, {3.7334992112756677`*^9, 
   3.733499231947749*^9}, {3.733502184267545*^9, 3.733502497480152*^9}, {
   3.73350287828489*^9, 3.7335028815898075`*^9}, {3.733503011473855*^9, 
   3.733503037747366*^9}, {3.733503081259725*^9, 3.733503108258654*^9}, {
   3.7335031472787085`*^9, 3.733503150094455*^9}, {3.7335032879116516`*^9, 
   3.733503309588516*^9}, {3.7335034113499165`*^9, 3.7335034554037614`*^9}, {
   3.733503485446125*^9, 3.7335035099081106`*^9}, {3.7335042032423315`*^9, 
   3.7335042121083965`*^9}, {3.7344338482651515`*^9, 3.734433864050191*^9}, 
   3.7344339002663393`*^9, {3.7344340867957444`*^9, 3.7344340871394973`*^9}, 
   3.7354573876884513`*^9, {3.7354574301384296`*^9, 3.7354574397586484`*^9}, 
   3.735457478380782*^9, {3.735552470399381*^9, 3.735552488772992*^9}, 
   3.73555270046406*^9, {3.73555281498682*^9, 3.7355528278452425`*^9}},
 CellLabel->
  "In[304]:=",ExpressionUUID->"bcbce9b3-0b00-44c9-9d48-ebc6ebae2742"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"setUpChemistry", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"yy", "[", "i", "]"}], "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "nspecies"}], "}"}]}], "]"}], ",", "t"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.733504060479705*^9, 3.733504070807308*^9}, {
  3.733504156489064*^9, 3.733504181427943*^9}, {3.7335046831016426`*^9, 
  3.733504703232767*^9}},
 CellLabel->
  "In[306]:=",ExpressionUUID->"74e79b9b-178f-43d1-adb0-e731806e0a57"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            TemplateBox[{"117"},
             "OutputSizeLimit`Skeleton"], "+", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "+", 
            RowBox[{"7.647140436737501`*^-7", " ", 
             RowBox[{
              RowBox[{"yy", "[", "25", "]"}], "[", "t", "]"}], " ", 
             RowBox[{
              RowBox[{"yy", "[", "31", "]"}], "[", "t", "]"}]}], "+", 
            RowBox[{"3.2999999999999996`*^-7", " ", 
             RowBox[{
              RowBox[{"yy", "[", "28", "]"}], "[", "t", "]"}], " ", 
             RowBox[{
              RowBox[{"yy", "[", "31", "]"}], "[", "t", "]"}]}]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            TemplateBox[{"35"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            TemplateBox[{"91"},
             "OutputSizeLimit`Skeleton"], "+", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           TemplateBox[{"25"},
            "OutputSizeLimit`Skeleton"], ",", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            TemplateBox[{"25"},
             "OutputSizeLimit`Skeleton"]}], ",", 
           RowBox[{"0.`", "\[VeryThinSpace]", "+", 
            TemplateBox[{"45"},
             "OutputSizeLimit`Skeleton"]}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{49.2099609375, {2., 7.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{39.884765625, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 306, 31029452096179365880, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{46.73583984375, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 306, 31029452096179365880, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{34.4970703125, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 306, 31029452096179365880, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.73046875, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{59.73046875, {0., 7.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[31029452096179365880 === $SessionID, 
   Out[306], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.733504181962674*^9, {3.7335046843352566`*^9, 3.7335046997489586`*^9}, 
   3.734433763297082*^9, {3.734433880955204*^9, 3.7344339031567554`*^9}, 
   3.735457579814885*^9, 3.7355529436633334`*^9, 3.832322650690714*^9, 
   3.832323427066581*^9, 3.832323839283857*^9, 3.832324931093794*^9, 
   3.8324967234367113`*^9, 3.832496781024736*^9, 3.8324969172357235`*^9, 
   3.865495048718489*^9, 3.8654956510138083`*^9},
 CellLabel->
  "Out[306]=",ExpressionUUID->"678ac0af-9e76-434a-bcbb-40aa4506612e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqns", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          SuperscriptBox[
           RowBox[{"yy", "[", "i", "]"}], "\[Prime]",
           MultilineFunction->None], "[", "t", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nspecies"}], "}"}]}], "]"}], "==", 
       RowBox[{"setUpChemistry", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"yy", "[", "i", "]"}], "[", "t", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nspecies"}], "}"}]}], "]"}], ",", 
         "t"}], "]"}]}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", "i", "]"}], "[", "0", "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"y0", "[", 
          RowBox[{"[", "i", "]"}], "]"}], 
         SuperscriptBox["10", "4"]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "nspecies"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.733499173994077*^9, 3.7334991787910132`*^9}, {
   3.73349923616652*^9, 3.7334992376196747`*^9}, {3.733503118040284*^9, 
   3.73350312662368*^9}, {3.7335034648557177`*^9, 3.7335034942646155`*^9}, {
   3.733503677970373*^9, 3.7335036954187207`*^9}, 3.733504190495592*^9, {
   3.7335042302559423`*^9, 3.7335042315560155`*^9}, {3.7335042769256477`*^9, 
   3.7335043039746017`*^9}, {3.733504353031314*^9, 3.733504359744171*^9}, 
   3.7335043948688326`*^9, {3.733504746434585*^9, 3.7335047661822643`*^9}, {
   3.733504984419962*^9, 3.733505034336211*^9}},
 CellLabel->
  "In[307]:=",ExpressionUUID->"d59b6b8f-e391-42c4-9a2a-2eaa8b4d0db5"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ysol", "=", 
    RowBox[{"Quiet", "@", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{"eqns", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"yy", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nspecies"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         SuperscriptBox["10", "13"]}], "}"}], ",", 
       RowBox[{"AccuracyGoal", "->", "20"}], ",", 
       RowBox[{"PrecisionGoal", "->", "20"}], ",", 
       RowBox[{"WorkingPrecision", "->", "35"}], ",", 
       RowBox[{"MaxSteps", "->", "Infinity"}]}], "]"}]}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7335047720129547`*^9, 3.733504778426035*^9}, {
   3.733504829602994*^9, 3.7335048564669456`*^9}, {3.733504923342314*^9, 
   3.733504928957375*^9}, 3.7335050508889055`*^9, {3.733505181999529*^9, 
   3.7335051939349365`*^9}, {3.73350523902833*^9, 3.7335052472737794`*^9}, {
   3.7335052864982967`*^9, 3.733505293710886*^9}, {3.7335062740047755`*^9, 
   3.7335062744357653`*^9}, {3.733506418206601*^9, 3.7335064186376157`*^9}, 
   3.832323969506799*^9},
 CellLabel->
  "In[308]:=",ExpressionUUID->"4a4e3dbf-e1fe-4d83-95d8-d1603b505724"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"ysol", "=", 
    RowBox[{"Quiet", "@", 
     RowBox[{"NDSolveValue", "[", 
      RowBox[{"eqns", ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"yy", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "nspecies"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         SuperscriptBox["10", "13"]}], "}"}], ",", 
       RowBox[{"AccuracyGoal", "\[Rule]", 
        RowBox[{"Abs", "@", 
         RowBox[{"Log10", "[", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "10"}]], "*", 
           SuperscriptBox["10", "4"]}], "]"}]}]}], ",", 
       RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
       RowBox[{"MaxSteps", "\[Rule]", "10000"}]}], "]"}]}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7335047720129547`*^9, 3.733504778426035*^9}, {
   3.733504829602994*^9, 3.7335048564669456`*^9}, {3.733504923342314*^9, 
   3.733504928957375*^9}, 3.7335050508889055`*^9, {3.733505181999529*^9, 
   3.7335051939349365`*^9}, {3.73350523902833*^9, 3.7335052472737794`*^9}, {
   3.7335052864982967`*^9, 3.733505293710886*^9}, {3.7335062740047755`*^9, 
   3.7335062744357653`*^9}, {3.733506418206601*^9, 3.7335064186376157`*^9}, {
   3.7354512462917023`*^9, 3.7354513202287693`*^9}, {3.73545135427535*^9, 
   3.7354513639464455`*^9}, {3.7361676464350123`*^9, 3.736167647626647*^9}, 
   3.8324969534392843`*^9},
 CellLabel->
  "In[309]:=",ExpressionUUID->"3b7e3762-6fae-42a0-a0e7-f98ec294bdd0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"eqnsSS", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nspecies"}], "}"}]}], "]"}], "==", 
     RowBox[{"setUpChemistry", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"yy", "[", "i", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nspecies"}], "}"}]}], "]"}], ",", 
       "t"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.735448517656124*^9, 3.7354485215308375`*^9}, {
  3.735448598884444*^9, 3.7354486032122273`*^9}},
 CellLabel->
  "In[310]:=",ExpressionUUID->"5c1103d4-4b38-493f-bdc7-1e6dc8dc2c05"],

Cell["Solve chemistry", "Text",
 CellChangeTimes->{{3.865493987354412*^9, 3.8654939932773037`*^9}, {
  3.8654943276674843`*^9, 
  3.865494328096057*^9}},ExpressionUUID->"24d427a4-f48b-4064-80fa-\
b7cc6a1e3a6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ysol", "=", 
   RowBox[{"Quiet", "@", 
    RowBox[{"NDSolveValue", "[", 
     RowBox[{"eqns", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"yy", "[", "i", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "nspecies"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        SuperscriptBox["10", "13"]}], "}"}], ",", 
      RowBox[{"MaxSteps", "\[Rule]", "Infinity"}], ",", 
      RowBox[{"AccuracyGoal", "->", "10"}], ",", 
      RowBox[{"PrecisionGoal", "->", "10"}]}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.733567637621498*^9, 3.7335676386371336`*^9}, {
   3.7335676924501185`*^9, 3.7335677256067295`*^9}, 3.733567795904194*^9, {
   3.735040561545718*^9, 3.7350406394954453`*^9}, 3.73504073347523*^9, 
   3.808740601297905*^9},
 CellLabel->
  "In[311]:=",ExpressionUUID->"eea732ea-6ad5-4d43-bf81-848a023171e1"],

Cell["Plot result with time on the x axis.", "Text",
 CellChangeTimes->{{3.865494346975957*^9, 
  3.865494358374152*^9}},ExpressionUUID->"933b194e-9c1b-4ed9-8782-\
bb6ce65d3d72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{
         RowBox[{"ysol", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "[", "x", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "nspecies"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"logspace", "[", 
         RowBox[{"1.", ",", 
          SuperscriptBox["10", "13"], ",", "50"}], "]"}]}], "}"}]}], "]"}], 
    "]"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"getSpecies", "/@", 
     RowBox[{"Range", "[", "nspecies", "]"}]}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", "6"], ",", 
        SuperscriptBox["10", "13"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "10"}]], ",", 
        SuperscriptBox["10", "4"]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.733505058987876*^9, 3.733505083929937*^9}, {
   3.733505184351906*^9, 3.7335051952966733`*^9}, {3.7335061641326947`*^9, 
   3.733506170431575*^9}, {3.733506202005597*^9, 3.733506230153066*^9}, {
   3.733506279784938*^9, 3.733506280202131*^9}, {3.733506347668712*^9, 
   3.7335063904783154`*^9}, {3.733506423828689*^9, 3.733506424298789*^9}, {
   3.733506792311596*^9, 3.7335068395890923`*^9}, {3.7335070469424305`*^9, 
   3.7335071381373405`*^9}, 3.733567629824608*^9, {3.7346819633225718`*^9, 
   3.7346819734625206`*^9}},
 CellLabel->
  "In[355]:=",ExpressionUUID->"05fe449e-ca70-46d2-a45a-b30081ee01f5"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.9, 0.36, 0.054], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQNHgrfu3pit5FDF+JQ1s+ex/fIgZP5n+9kBEL55
0/WOuUF/7a/5IMszOzxxhfBvOMa5N+dzOEhaIqvndehUhPC9EzWe3pYSdFD4
tgVJv7CD1jIIf+XChWrf/oo63BPagmSehEMn82Ywn+ORVIbAQymHXfwbkcyX
deAuXwvmpylNWal1RN5B5PoyJPsUHf4vmgXmJ21sK10UDNSn0YJkv7JD4/4o
MH9SoPM0/aMqDk4VfEjuUXXY9LVxF4h/8OP/bXvM1B3SFet3Ityn4eATuWg7
iP9h4p7rnis0HWJFTbYg3KvlsNnx0VoQX96o8sc1SR2Hs1J2ixDu13XoLD7T
A+L7XzKVTOnWc3gi65OK8I++g3BthwyIb2/5c05FnYHDXeP6aRvg/jN0cImb
MX89kB/eGa5rv93QwaDi9I21cP8aOcT/5528CsjPu7l1L+sHI4cXrf+6l8D9
b+zg+Plr4Uwgv01TxO+MhonDxmMCDK3w8DBxkFoRHx0P5M+tLLo3KdHU4cQG
E2EpePiYOnTFnlw+K0vJYevJC3mRs8wc9u7RWrAhExZe5g6+741uMmcoOZyV
1P8vf9ncYfePhNtfU2DhZ+EQsu/96fx4JYcnmb39z7gtHYw9n4XNDoWFp6XD
ih0vbi1yUXL4s/O1/FoXK4f5fRt0GDVh4Wvl0PHrb8B7BiUHES6vDcW11g4c
Qq2zr19ShIa3jUP/87Qyho2KDtpRKxysttk4xNb0tV9ZqggNf1sHhxNikdeX
KDo4r2K7yPDe1kGsK+L6FSAfAFcGW/g=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.365248, 0.427802, 0.758297], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQvYpJVWXrHjmH6FWLtOaxmR9IU5qyUuuIvMPVqTdP
HzhidsA7UePpbSlFB4n4Vb2xGmYHkja2lS4KVnKIi1sa/Kvb9EAV41PWzB5l
h0dysuLT35scmBToPE3/qIrDhC3LHxoHmxxYuXCh2re/qg4z3vzYe2Gb8YGD
H/9v22Om7rDXYPnzXCnjAzcc49yb8zUcTtVt7eWuMzrwYeKe654rNB3WC9zm
XvXQ8ADHI6kMgYdaDsVzmQS9XA0PyBtV/rgmqeNwxdfh0ZcVBgfMm653zA3S
dVjg8X9JHY/BAf9LppIp3XoOSewHTpk90IP6R9/h4Ym3YfnLdQ/YW/6cU1Fn
4NB6N/zZsjwdqP8MHTLbWlffMdU+EN4Zrmu/3dBh1bl9b/n+akL9a+QwZxrT
ZcsjGgfybm7dy/rByKHxn+WJ4G51qP+NHYIPHBF3C1I70KYp4ndGw8Sh3LE6
9byEKjQ8TBzMdpVzG91TPjC3sujepERTh5p5/BHhC5Sg4WPq0Gbfsf9xpOKB
rScv5EXOMgOaZ1dZwaAADS9zB77VGW/cJGUPnJXU/y9/2dzh/ZVqk1uaUtDw
s3Awbz+4Xnqm+IEnmb39z7gtHQI2TtD0PysKDU9LhyNfmr9ZN4se+LPztfxa
FysHveOCSjf/iEHD18pBXnXRo9I5EgdEuLw2FNdaO6y8fbS++JIkNLxtHCab
8M/36JI6oB21wsFqm43DFwul5vMHpaDhb+tgmTSnZP4xqQPOq9guMry3ddjN
/HXhaiAfAMzNHRM=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.945109, 0.593901, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQOrVRu9X843PlDF+JQ1s+exvdz3QOY2Zhj/sz37
IaXdSulGB8ybrnfMDfprf6b+c9H+U4ZQeWaHtxpHtGL0DA/ccIxzb87ncDi2
asqjHxMNoOp5HVROnDTRfq1/wDtR4+ltKUGH6QaZS1I26UH1Czu4bWATmVep
e2DlwoVq3/6KOkRuWtB83UEHap6Eg3+MyWcBDu0DHI+kMgQeSjkkLNyT5HVe
E2q+rIPPc4NLzdM0DqQpTVmpdUTegX1rs+PeWHWofYoOSe5LNnxTUTuQtLGt
dFGwkgOncL+8wRsVqP3KDnoBs/oyNysfmBToPE3/qIpDiInV30VVSlD3qDqs
8Z2bfcdR8cDBj/+37TFTdzixuPKGKKcC1H0aDsb3nFrnLZA98GHinuueKzQd
7MU/+QvqS0Pdq+XwlEuUs2WvxAF5o8of1yR1HFZPSFn2zVsM6n5dh/jHcyQz
bwkf8L9kKpnSrefgpjs343aGINQ/+g6vqiprZ7/jPWBv+XNORZ2Bw51yxYhG
bk6o/wwdOGIdqrM0WA6Ed4br2m83dCgOn2+/uevffoh/jRxmBwZNW3rky/68
m1v3sn4wcui5Zfir9O/T/RD/Gzsom84u+Tdh8/42TRG/MxomDgcT2/p9JR7a
Q8LDxMGjszCtPeCT/dzKonuTEk0dTst+/hcr/MceEj6mDlGbTJauf8nksPXk
hbzIWWYOd16tZBI9zu4ACS9zB9uy2CXr5/M4nJXU/y9/2dzBR3Zv6v7tAg6Q
8LNwWMTzMni2uLDDk8ze/mfclg5L3NSzr2aIOkDC09Lhd+r1Iwfnizv82fla
fq2LlQP/8rothSskHSDha+XAzn9pd3CytIMIl9eG4lprh8TXIpvWL5NxgIS3
jUPmdXebxmBZB+2oFQ5W22yA8ZMl1t0i6wAJf1uHlK0rrXd2yDo4r2K7yPDe
1uFN0JfTh4F8ANN/Y6A=
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.645957, 0.253192, 0.685109], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{23.883564995600402`, -23.025850929940457`}, {
         24.43559690524293, -22.48026398632407}, {
         25.046486827874006`, -21.908603879503747`}, {
         25.65737675050508, -21.384291717212143`}, {
         26.268266673136154`, -20.91698654127996}, {
         26.879156595767228`, -20.530266094681767`}, {
         27.4900465183983, -20.257956997077674`}, {
         28.100936441029372`, -20.11697244359809}, {
         28.711826363660446`, -20.07762780116585}, {
         29.32271628629152, -20.074288165030243`}, {
         29.933606208922594`, -20.074255210077677`}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.285821, 0.56, 0.450773], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{22.60742354856892, -23.025850929940457`}, {
         23.213817059980787`, -22.18655877155721}, {
         23.82470698261186, -21.405765191252698`}, {
         24.43559690524293, -20.65471998225829}, {
         25.046486827874006`, -19.89231024358628}, {
         25.65737675050508, -19.06452909469015}, {
         26.268266673136154`, -18.172118580626645`}, {
         26.879156595767228`, -17.351793249379597`}, {
         27.4900465183983, -16.75212472916932}, {
         28.100936441029372`, -16.435323556171312`}, {
         28.711826363660446`, -16.345987159722494`}, {
         29.32271628629152, -16.338383726347388`}, {
         29.933606208922594`, -16.338308680701395`}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.7, 0.336, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQPHmNZWvZr80b6K8SlrZs9j+14U/md7FSjfvOl6
x9ygv/bJjMjyzA7//68B8284xrk353M45P9dg6Se12HrDwjfO1Hj6W0pQQfm
D2uQ9As7/L0P4a9cuFDt219Rh8pDyOZJOEj2QPgcj6QyBB5KOXxURzZf1qEo
fzWYn6Y0ZaXWEXmH6dKrkOxTdOhduRzMT9rYVrooWMkhXGMxkv3KDpx3ZoH5
kwKdp+kfVXF4OKkbyT2qDnVZ+WD+wY//t+0xU3dY1W2N5D4Nh8q/tytB/A8T
91z3XKHpcPqTdiXCvVoO+6Y/Lwfx5Y0qf1yT1HHo2TyxFOF+XYfUyy6FIL7/
JVPJlG49hw0XwjIR/tF3qF69PQrEt7f8OaeizsBh8uH99gj/GTocUfvHC+KH
d4br2m83dLi5Q27TS7h/jRz4QnQ5QPy8m1v3sn4wcggSPH3mOdz/xg4HPAwb
ngL5bZoifmc0TBzs1L5oP4SHh4nDO7PHb24A+XMri+5NSjR1uF19QOgkPHxM
HUxr7n1dBeRvPXkhL3KWmcM1/vPXS+HhZe4QtVDEUh3IPyup/1/+srmD8doX
XHsnwcLPwsHxRrv1j4kf7Z9k9vY/47Z0sJrU8D1mAiw8LR0ezWJ/Kt370f7P
ztfya12sHKy7m/7/7ICFr5XDvkPLuLa0fbQX4fLaUFxr7TBdVshBsg0W3jYO
d9cEP/ME8rWjVjhYbbNxqApjO5PdBgt/WwdHgSjZfCDfeRXbRYb3tg415ZdU
QXwAZwqPYA==
         "]]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.491486, 0.345109, 0.8], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBYQGe/iFib1JlAgAAABUAAAACAAAAfl/eUEG/MUBbqqIqngY3wGKxhnWi
UzJApTxI8KtxNsBu2bW9BfAyQPHYXOXp1DXAegHlBWmMM0B72va1NDg1wIYp
FE7MKDRAqj/2Rk+bNMCSUUOWL8U0QLddfLOr/TPAnXly3pJhNUACxRp00V0z
wKmhoSb2/TVAHKBhdEa4MsC1ydBuWZo2QN99MpyjBzLAwfH/trw2N0CIg385
30sxwM0ZL/8f0zdAUTdFIziVMMDYQV5Hg284QNlWXNUI8C/A5GmNj+YLOUBH
x3d1fBYvwPCRvNdJqDlAQPyclE8BL8D8uesfrUQ6QBvwaper0y/ACOIaaBDh
OkDciUwEDV8wwBQKSrBzfTtAyBQpLLS5MMAfMnn41hk8QFz8jm8j8DDAK1qo
QDq2PEAlSBDPoAAxwDeC14idUj1Ar3Tezw4CMcBDqgbRAO89QBQRDG4SAjHA
JQ6aug==
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.71788, 0.568653, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBQQG+/iFib1JlAgAAABMAAAACAAAAdTuemNlaM0BbqqIqngY3wHoB5QVp
jDNA5ClE0Z2UNsCGKRROzCg0QBDuPMzqOjXAklFDli/FNEAbh7S78g40wJ15
ct6SYTVAK8Ngv2UgM8CpoaEm9v01QJe62LXIWDLAtcnQblmaNkBnVhuBJqAx
wMHx/7a8NjdAq7IkwZrnMMDNGS//H9M3QM8M3yNnMzDA2EFeR4NvOECfWvyI
bikvwORpjY/mCzlANBVu3V1GLsDwkbzXSag5QJyDqGWcIi7A/LnrH61EOkCh
Cpq9BOYuwAjiGmgQ4TpAyMqZkyvGL8AUCkqwc307QAT8Nw/EOjDAHzJ5+NYZ
PEAtxEBoM3AwwCtaqEA6tjxAjeHfrFSAMMA3gteInVI9QAEibsO7gTDAQ6oG
0QDvPUBRDCdQv4EwwE2QjLg=
         "]]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.70743, 0.224, 0.542415], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQA2IQzW/5/IrpRTmH6FWLtOaxmR9IU5qyUuuIvMNKx9Kf
D06aHfBO1Hh6W0rR4W+sxKFaXbMDSRvbShcFKzn4ceydKDXR9EAV41PWzB5l
h8xl6rHbv5gcmBToPE3/qIqDQu12s5AIkwMrFy5U+/ZX1eFpnZLUx93GBw5+
/L9tj5m6Q6HCCvM+eeMDNxzj3JvzNRxElkTu0m42OvBh4p7rnis0HdIfBnw4
+czwAMcjqQyBh1oOV3PW5mR6GR6QN6r8cU1Sx2HaSiMH7nUGB8ybrnfMDdJ1
mBrsmrRR0OCA/yVTyZRuPYcvahVP973Sg/pH30HL0MzOYpPuAXvLn3Mq6gwc
Xs4zyHpeqQP1n6HDkV0z9v901D4Q3hmua7/d0MFvUvmpQ1xaUP8aOQjcMCm5
c0XjQN7NrXtZPxg5yF1RWpS4UB3qf2OH6adeXkwoUjvQpinid0bDxOHWS4ak
xd6q0PAwceCwFVRWNVE5MLey6N6kRFOHio0ffA5aKEPDx9RhQZ7Y/ZoCpQNb
T17Ii5xl5pBzv1NCi0EJGl7mDsuvcR8O5lY6cFZS/7/8ZXOHmU9V1YKKlaDh
Z+Hw7sPPD6bXlA48yeztf8Zt6fBNKrZn1gslaHhaOrTMNf5xfrPSgT87X8uv
dbFyUKm7nlIxUwkavlYOfUn3Ah+0KR0Q4fLaUFxr7bDfe9fRJc1K0PC2cVjK
EhL8t1fpgHbUCgerbTYOvNHNov8nKUHD39ah/6plU8VkpQPOq9guMry3dZDr
KtteCeQDAIcNGXk=
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.287228, 0.490217, 0.664674], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBoQFe/iFib1JlAgAAABkAAAACAAAAhe6UsxToLkBbqqIqngY3wGYilKkq
xC9AgKLgdwIrNsA/OfmceH4wQDjNe7K+8jTAS2Eo5dsaMUC9E9pQg7ozwFeJ
Vy0/tzFAfrGL/4WCMsBisYZ1olMyQEsrYOUbSzHAbtm1vQXwMkDepNYk7xQw
wHoB5QVpjDNAoQGsL/XALcCGKRROzCg0QKwE7gdoXyvAklFDli/FNEAme2N0
GgwpwJ15ct6SYTVArzdlDofTJsCpoaEm9v01QAETKYqTziTAtcnQblmaNkAT
F8V6aC8jwMHx/7a8NjdAm5+ETiRXIsDNGS//H9M3QIUqg5UEyiLA2EFeR4Nv
OEA04+JnpB8kwORpjY/mCzlAZENX7p37JMDwkbzXSag5QF+3XYKsPSXA/Lnr
H61EOkAXbOETakklwAjiGmgQ4TpAjv6BZMo1JcAUCkqwc307QAotrkKxLCXA
HzJ5+NYZPEDw9puRizMlwCtaqEA6tjxAFtkq2YQ3JcA3gteInVI9QMa6L33n
NyXAQ6oG0QDvPUCowkZ56DclwNnItps=
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[
         0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{19.760040745236513`, -23.025850929940457`}, {
         20.15936744682542, -21.86947186058794}, {
         20.770257369456495`, -20.41780584150026}, {
         21.381147292087565`, -19.598380492814805`}, {
         21.99203721471864, -19.149722940722818`}, {
         22.602927137349713`, -18.78686579374084}, {
         23.213817059980787`, -18.565495654687183`}, {
         23.82470698261186, -18.67301024009687}, {
         24.43559690524293, -18.947905176082376`}, {
         25.046486827874006`, -19.097878080031037`}, {
         25.65737675050508, -19.330973313149514`}, {
         26.268266673136154`, -19.789628909984085`}, {
         26.879156595767228`, -20.185977466892197`}, {
         27.4900465183983, -20.479050274342793`}, {
         28.100936441029372`, -20.661527421245953`}, {
         28.711826363660446`, -20.71754032696782}, {
         29.32271628629152, -20.722425440439054`}, {
         29.933606208922594`, -20.722473749323612`}}]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAaPAqrx8SMUBbqqIqngY3wEthKOXb
GjFAbV8Ynyr1NsBXiVctP7cxQDWGMtEEvTXAYrGGdaJTMkC4KzNPbYU0wG7Z
tb0F8DJAdMqBUPlOM8B6AeUFaYwzQPpr8igVGjLAhikUTswoNEChA6qRg+gw
wJJRQ5YvxTRAq6xWSqZ6L8CdeXLekmE1QMPsIAHJOy3AqaGhJvb9NUByJEh1
GCorwLXJ0G5ZmjZA3TVEU6BwKcDB8f+2vDY3QLFx4Q9PXSjAzRkv/x/TN0At
Lf050y8owNhBXkeDbzhAtZwaCW7TJ8DkaY2P5gs5QHGVtTyZnSbA8JG810mo
OUDQ0IbG/IUlwPy56x+tRDpAr97eqzj3JMAI4hpoEOE6QDqdnvR1mSTAFApK
sHN9O0D1xxkUTWkkwB8yefjWGTxAbobmC51gJMArWqhAOrY8QGk9phHUYCTA
N4LXiJ1SPUAWzOoD6GAkwEOqBtEA7z1AikiSOehgJMBOX6jn
         "]]}, {
        Hue[0.5028157299974758, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{20.176079146871693`, -23.025850929940457`}, {
         20.770257369456495`, -21.23705496600867}, {
         21.381147292087565`, -20.034324818951635`}, {
         21.99203721471864, -19.17111744368346}, {
         22.602927137349713`, -18.40553983732257}, {
         23.213817059980787`, -17.660545769234115`}, {
         23.82470698261186, -16.930092782807137`}, {
         24.43559690524293, -16.25938726383752}, {
         25.046486827874006`, -15.71393524871765}, {
         25.65737675050508, -15.46854157922468}, {
         26.268266673136154`, -15.63036285148004}, {
         26.879156595767228`, -15.8864821982047}, {
         27.4900465183983, -16.12171682429337}, {
         28.100936441029372`, -16.28087358979062}, {
         28.711826363660446`, -16.331337820240424`}, {
         29.32271628629152, -16.33575509704824}, {
         29.933606208922594`, -16.335798794831533`}}]}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{20.71394157126561, -23.025850929940457`}, {
         20.770257369456495`, -22.775995133055805`}, {
         21.381147292087565`, -21.19464472153553}, {
         21.99203721471864, -20.256112189072432`}, {
         22.602927137349713`, -19.48116460319269}, {
         23.213817059980787`, -18.707324856173948`}, {
         23.82470698261186, -17.94445116387448}, {
         24.43559690524293, -17.201439405314495`}, {
         25.046486827874006`, -16.504582640119583`}, {
         25.65737675050508, -15.97375788620248}, {
         26.268266673136154`, -15.715412426566727`}, {
         26.879156595767228`, -15.538139338937118`}, {
         27.4900465183983, -15.44529230817602}, {
         28.100936441029372`, -15.428340151095886`}, {
         28.711826363660446`, -15.428675802206708`}, {
         29.32271628629152, -15.428818923747718`}, {
         29.933606208922594`, -15.428820428455339`}}]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[
         0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1kA0s1HEYx//eRdQ5hF6OCx0lnPdzdo+Qo5W5LNWwsZS3eUmRLIVYirzW
Cic05SpihZT7/5hEktc5moUcamdyFyt5Sdr/32979tt3z+/3PN/vxygkhhcq
j2EYc7P+3f9PhAeGtQrKhZflZpTCs8WcrLlNXV9L6kUOP1cO43q0CB3SRm7w
eeuc9Sp5rGtLN9lXAG6KIhaxOiIcdQ3yTI9RhaIHKhhfd5Z8rwFaC1sx/ZNL
wiPBjJkxAwrck+m0ilrkceI/FT6zTAw1D1FwQUWF6c91HfDxS5kM6KbhxDw9
6PMTlTd4WuCqUwZh278YwIvKyNSeXyycmL8b3sjCvpeJuPhZepHA/C0NFF7q
GidPnsCJfUZgPrCgs0IJxUPqMy9WHqdD7wf3byvn4sn9eyEoNlHv4UQqXuDr
dteywxjMBjnlnIQ80o8JPDPMy+jgleFtso3GFvt9YBrYkxA9/5T0xwCuZl2C
86tmXJrfMuJVbQZWxXSW9fNO0q85tAeYTKX2DuM0ZtKySP8AKNUodOVoTZP+
LaDq8WL1YuIP3GfQTv/MrYMglg37Nq1iiMhjCZZ7luLyHbYhjtPv0kspVpBq
Ja8ord2FiHzWMCS63tkcaI78s/wtOE3WsEq/Sl0DR0TkZUIUT3etk3cYRX9q
ECpJmcCIrG8ryfFDRH4bEKuplLrOh6BMM+1jPQxbeHeBP+cfHYcIHragW+jr
80fjGuInnR8vCLaDmrTkHezCHETwsYP0EWXMy6UENbzvjz5VbA9ZwXhRN1WA
CF4OgNjFlVL1JvRR33KDNuQAsvuPbMc1OhDBzxGYaoLbnPFBNB2ekzur7gT9
IUlSXDyBCJ5O8JprIc62+4rWmudoNe4sSDgqZKeNSRDBlwWUnbHUUYU5pK3m
XRd/xRlsxBX0kjsSRPBmg09++XKftwTtP10NrEY2RFIXevJsJIjg7wJRszrB
N60lyO2J8gC24AKiunbI2NR/AbbSfCo=
         "]]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.9, 0.36, 0.054], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQ/SmTJ4JzP4tD9KpFWvPYzA/ccIxzb87ncPjwaseb
vglmB8ybrnfMDeJ1EPnQtUT7i+kB70SNp7elBB0EP8XGnAg3PVDF+JQ1s0fY
4e5hI5HU3SYHVi5cqPbtr6iD+jOuM4zyJlDzJBzc+V42z2syPsDxSCpD4KGU
w3T2S9bWz4yg5ss63P1z9vN1T6MDaUpTVmodkXeo3vFydclaQ6h9ig7RKqYp
goKGB5I2tpUuClZyeDh3s8y6EgOo/coOD6eorZq6Qf/ApEDnafpHVRwelGyU
Pl+uB3WPqsMxCfk+DnvdAwc//t+2x0zdYVsxF6sTmw7UfRoOLr6NzdVntQ58
mLjnuucKTQeBIEv+rVM0oe7VclgcybT5XbTGAXmjyh/XJHUcbofaGGsqq0Pd
r+vg/CbydOIr1QP+l0wlU7r1HB6n2qyas1EF6h99h5WNRy9cr1A+YG/5c05F
nYHD2+fmNSIOSlD/GTrodjS9CGZXPBDeGa5rv93Q4Xb2wvMGc+Wh/jVyCDit
0XhGW/ZA3s2te1k/GDlMD965tWuXFNT/xg43u7s2d3hKHGjTFPE7o2HicMRI
le3vDVFoeJg4rO/TEPHLFD4wt7Lo3qREUweGO84hdr8FoOFj6rDn517rLgXe
A1tPXsiLnGXmsMic16IljAMaXuYO66dn1e5ZzHzgrKT+f/nL5g73VkZvdrX9
tx8SfhYO6i8dxX69/rr/SWZv/zNuS4cMngirMKV3+yHhaelgMu3VIY2ap/v/
7Hwtv9bFyuGAAv+q9d2P9kPC18rhRH+D5NmWR/tFuLw2FNdaO5gE3k+68uDR
fkh42zi8/S0dISb1eL921AoHq202Dhqu27m8tB/vh4S/rcM9c6XLx3Qe73de
xXaR4b2tw8SrNdNOAfkAJehVpQ==
         "]]}, {
        Hue[0.44708763999663503`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.365248, 0.427802, 0.758297], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQ/fbQzesvFko7RK9apDWPzfyAedP1jrlBsg7M5/Ta
qmeZHUhTmrJS64i8Q8OimRuN/pke8E7UeHpbStHh5qnfu34lmh5I2thWuihY
yWHl3o23rxw1OVDF+JQ1s0fZQfbiVqUlmiYHJgU6T9M/quKQu1tv6/Re4wMr
Fy5U+/ZX1WHaTo3WhR+NDhz8+H/bHjN1B/avz7eYhhkduOEY596cr+HwQ0fm
zv7dhgc+TNxz3XOFpoNumcwWNmXDAxyPpDIEHmo5rC9XdZ7Ua3BA3qjyxzVJ
HYfPk5ljRP/oQ92v67C56F7yxI96B/wvmUqmdOs5fDt4/PIZTj2of/Qd/G2s
mKdH6B6wt/w5p6LOwOHw/eipIR91oP4zdFjX5F908KzOgfDOcF377YYOaiJy
X/ee1IH618jhWumSOUeA/LybW/eyfjByMGrd0cV7Sgfqf2MHrQdzpk0C8ts0
RfzOaJg4LAndHN9+WgcaHiYO/rzRH9yB5s+tLLo3KdHUQe76O92qCzrQ8DF1
mD17WbnzNZ0DW09eyIucZeaw/erOa/0PdKDhZe4w1zqx0uqTzoGzkvr/5S+b
O/ikX5d5x6sLDT8Lh5d3V1hL6+seeJLZ2/+M29JB7/vRkB4jXWh4WjpsXdbz
/tsZnQN/dr6WX+ti5fCx2Lhzxi9taPhaOXg2ZZyWF9Y+IMLltaG41tqh+3qa
s1qQFjS8bRzWPLNkn/tA84B21AoHq202DuVu85Ye3qcJDX9bh67J5oXXd2se
cF7FdpHhva3Dx7fNPBeAfAAyoS15
         "]]}, {
        Hue[0.6831556174964248, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.945109, 0.593901, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{20.168221658869108`, -23.025850929940457`}, {
         20.770257369456495`, -22.437245771328467`}, {
         21.381147292087565`, -21.836918218089423`}, {
         21.99203721471864, -21.236197420453937`}, {
         22.602927137349713`, -20.64058518276837}, {
         23.213817059980787`, -20.057550468750318`}, {
         23.82470698261186, -19.499935103391106`}, {
         24.43559690524293, -18.992587705201117`}, {
         25.046486827874006`, -18.58473420844176}, {
         25.65737675050508, -18.34607455592621}, {
         26.268266673136154`, -18.299875167281954`}, {
         26.879156595767228`, -18.3619176548775}, {
         27.4900465183983, -18.445316835508702`}, {
         28.100936441029372`, -18.50547070182829}, {
         28.711826363660446`, -18.525144814707247`}, {
         29.32271628629152, -18.52688258452469}, {
         29.933606208922594`, -18.526899787478452`}}]}, {
        Hue[0.9192235949962146, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.645957, 0.253192, 0.685109], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{21.45349821836074, -23.025850929940457`}, {
         21.99203721471864, -22.42650668318224}, {
         22.602927137349713`, -21.70386288925296}, {
         23.213817059980787`, -20.91835116758476}, {
         23.82470698261186, -20.058204263105047`}, {
         24.43559690524293, -19.128358088204955`}, {
         25.046486827874006`, -18.15740319218979}, {
         25.65737675050508, -17.218396841342244`}, {
         26.268266673136154`, -16.397807836415843`}, {
         26.879156595767228`, -15.739295372982095`}, {
         27.4900465183983, -15.258346028701709`}, {
         28.100936441029372`, -14.992486831725465`}, {
         28.711826363660446`, -14.915078396182846`}, {
         29.32271628629152, -14.908430135984759`}, {
         29.933606208922594`, -14.908364468747187`}}]}, {
        Hue[0.15529157249600445`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.285821, 0.56, 0.450773], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{19.670252839877755`, -23.025850929940457`}, {
         20.15936744682542, -21.989800911748045`}, {
         20.770257369456495`, -21.07346637683671}, {
         21.381147292087565`, -20.355045650100607`}, {
         21.99203721471864, -19.67284449769501}, {
         22.602927137349713`, -19.07260736540024}, {
         23.213817059980787`, -18.437370210221314`}, {
         23.82470698261186, -17.857139843661322`}, {
         24.43559690524293, -17.293739518960287`}, {
         25.046486827874006`, -16.769037736649636`}, {
         25.65737675050508, -16.340691905663153`}, {
         26.268266673136154`, -16.05378507355891}, {
         26.879156595767228`, -15.896994312018284`}, {
         27.4900465183983, -15.818435749726458`}, {
         28.100936441029372`, -15.786194910959473`}, {
         28.711826363660446`, -15.778203673383688`}, {
         29.32271628629152, -15.777545646425446`}, {
         29.933606208922594`, -15.777539168968142`}}]}, {
        Hue[0.39135954999579425`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.7, 0.336, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{22.609932668150506`, -23.025850929940457`}, {
         23.213817059980787`, -21.224233979622646`}, {
         23.82470698261186, -19.49416632101049}, {
         24.43559690524293, -17.899349571404773`}, {
         25.046486827874006`, -16.509574805431246`}, {
         25.65737675050508, -15.333305325771668`}, {
         26.268266673136154`, -14.317487750057817`}, {
         26.879156595767228`, -13.542358405048907`}, {
         27.4900465183983, -13.020714703173036`}, {
         28.100936441029372`, -12.74920634422183}, {
         28.711826363660446`, -12.672740185742558`}, {
         29.32271628629152, -12.66623121215367}, {
         29.933606208922594`, -12.666166967546227`}}]}, {
        Hue[0.6274275274955841, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.491486, 0.345109, 0.8], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{20.25668366559365, -23.025850929940457`}, {
         20.770257369456495`, -21.56812841506217}, {
         21.381147292087565`, -20.509748572835132`}, {
         21.99203721471864, -19.744889596239695`}, {
         22.602927137349713`, -19.040971546153912`}, {
         23.213817059980787`, -18.40425671160663}, {
         23.82470698261186, -17.753404738191957`}, {
         24.43559690524293, -17.101027971698098`}, {
         25.046486827874006`, -16.42950542251116}, {
         25.65737675050508, -15.714359864175828`}, {
         26.268266673136154`, -15.007113580181048`}, {
         26.879156595767228`, -14.416778322495775`}, {
         27.4900465183983, -14.010327322133193`}, {
         28.100936441029372`, -13.801934219416914`}, {
         28.711826363660446`, -13.743849852408475`}, {
         29.32271628629152, -13.738919251487742`}, {
         29.933606208922594`, -13.738870596591127`}}]}, {
        Hue[0.8634955049953739, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.71788, 0.568653, 0.], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{23.9963578487875, -23.025850929940457`}, {
         24.43559690524293, -21.721896966163126`}, {
         25.046486827874006`, -20.133960864822107`}, {
         25.65737675050508, -18.67964288569983}, {
         26.268266673136154`, -17.30377457145308}, {
         26.879156595767228`, -16.17068246514439}, {
         27.4900465183983, -15.383835629886404`}, {
         28.100936441029372`, -14.974348585677095`}, {
         28.711826363660446`, -14.859337502533165`}, {
         29.32271628629152, -14.84955596772056}, {
         29.933606208922594`, -14.8494594293964}}]}, {}, {}, {
        Hue[0.5716994374947433, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[
         0.982289285128704, 0.5771321368979874, 0.011542503255145636`], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBsQFO/iFib1JlAgAAABoAAAACAAAABboVRJjzLUBbqqIqngY3wE/SNRlk
iy5AFUNH0Pp6NsBmIpSpKsQvQGCO25i2aTXAPzn5nHh+MEBfMUBLTGs0wEth
KOXbGjFAthTXhqt+M8BXiVctP7cxQPdGva6UlzLAYrGGdaJTMkCdUOTRIacx
wG7Ztb0F8DJA2vf6nBqlMMB6AeUFaYwzQFYw7fFdIS/AhikUTswoNEDye3eE
o9kswJJRQ5YvxTRA4uXNguJ6KsCdeXLekmE1QGqe8dW6CyjAqaGhJvb9NUCz
9YI4L5IlwLXJ0G5ZmjZAOZC7WKYcI8DB8f+2vDY3QJYaV/DTzSDAzRkv/x/T
N0BBY/8hHbsdwNhBXkeDbzhAnLnkO9+7GsDkaY2P5gs5QPa5XN86ChjA8JG8
10moOUA1Pv4TPVYVwPy56x+tRDpA3oss37ZlE8AI4hpoEOE6QHVpyagPohLA
FApKsHN9O0BJJuUP93MSwB8yefjWGTxAN9bFES6CEsArWqhAOrY8QGT38mY1
jBLAN4LXiJ1SPUD8IlEIMo0SwEOqBtEA7z1AdBGdjTSNEsCypcMe
         "]]}, {
        Hue[0.8077674149945295, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.5876740325800278, 0.2877284499870081, 0.7500695697462922], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[{{21.346882554538226`, -23.025850929940457`}, {
         21.381147292087565`, -22.962295719979455`}, {
         21.99203721471864, -21.905203836003306`}, {
         22.602927137349713`, -20.987984913067844`}, {
         23.213817059980787`, -20.311651971601542`}, {
         23.82470698261186, -19.9601574754507}, {
         24.43559690524293, -19.757804173671442`}, {
         25.046486827874006`, -19.444362530464097`}, {
         25.65737675050508, -19.113699010026483`}, {
         26.268266673136154`, -18.990584848343946`}, {
         26.879156595767228`, -18.965710837762092`}, {
         27.4900465183983, -18.982110372203692`}, {
         28.100936441029372`, -19.0171254233337}, {
         28.711826363660446`, -19.031476060414303`}, {
         29.32271628629152, -19.032800246107026`}, {
         29.933606208922594`, -19.03281339684934}}]}, {
        Hue[0.04383539249432289, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.4262088601796793, 0.5581552810007578, 0.2777996730417023], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAdRIQiFkQMEBbqqIqngY3wD85+Zx4
fjBA1j22U9xdNsBLYSjl2xoxQCstDJvZjTXAV4lXLT+3MUDKI+LaONg0wGKx
hnWiUzJAR92ekjw0NMBu2bW9BfAyQPaGM4DenjPAegHlBWmMM0BNLK11Ih4z
wIYpFE7MKDRAq0/uqn3HMsCSUUOWL8U0QDvr6+7UxDLAnXly3pJhNUDipv5c
tP8ywKmhoSb2/TVApGmY98vXMsC1ydBuWZo2QIxHBlyESzLAwfH/trw2N0A6
zENuq84xwM0ZL/8f0zdAaSFKqaypMcDYQV5Hg284QDOUWE1+dzHA5GmNj+YL
OUDO7x7jMuowwPCRvNdJqDlAQtKcrItbMMD8uesfrUQ6QOImiHoEADDACOIa
aBDhOkA3KwwtkW8vwBQKSrBzfTtA7wunJ3YQL8AfMnn41hk8QIHlTfCx6S7A
K1qoQDq2PEAlUxbOp+AuwDeC14idUj1A3x2A0+3fLsBDqgbRAO89QHrp4f/r
3y7AFmu3YQ==
         "]]}, {
        Hue[0.27990336999410914`, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.9431487543762861, 0.414555896337833, 0.07140829055870854], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQDQML/vfP7Foo7VDF+JQ1s+exPSr/M5xv3nS9Y27Q
XzR5ZgcY/4ZjnHtzPocDqnpeON87UePpbSlBB1T9wg7zofyVCxeqffsrCudD
zJNwmAflczySyhB4KOUwB8V8WYcZUH6a0pSVWkfkHSag2Kfo0AzlJ21sK10U
rOSQjWK/soMtlD8p0Hma/lEVh1f/kN2j6hAI5R/8+H/bHjN1B7O/yO7TcND9
DeF/mLjnuucKTYe878ju1XJo/wDhyxtV/rgmqeNw4TGy+3UdUs9A+P6XTCVT
uvUcHBci+0ff4UwghG9v+XNORZ2BQ/n+PiT/GTowb+oF88M7w3Xttxs6MBzq
RvKvkUONYQeYn3dz617WD0YOLUsakfxv7HBuQSmY36Yp4ndGw8TBf008UniY
OFy5ZA7mz60sujcp0dShMfXDDET4mDr4BBeD+VtPXsiLnGXmELJr4XREeJk7
NJ+Imwbin5XU/y9/2dzh0O6dUxDhZ+GwUsZmMoj/JLO3/xm3pcOjohuTEOFp
6fDm3Aaw/J+dr+XXulg5OE3YPQURvlYObDNyp4L4IlxeG4prrR3+XLw/FRHe
Ng7+gZJg+7WjVjhYbbNxmO6gOQ0R/rYOC2dpgfnOq9guMry3deCeB+EDALNx
bOY=
         "]]}, {
        Hue[0.5159713474939025, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[
         0.41497437140121635`, 0.393632147507352, 0.7842993779115092], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAmIQXZRfzjbtnLJD9KpFWvPYzA9MCnSepn9UxcEud2Va
YLfZgZULF6p9+6vqsPTiC5V370wPHPz4f9seM3WHFTW7XncFmR644Rjn3pyv
4ZB3pOKg+jaTAx8m7rnuuULT4ezdFRuPSJoc4HgklSHwUMvBle3fxcRa4wPy
RpU/rknqOFjd3+z1/4HRAfOm6x1zg3QdfNS50+a6GB3wv2QqmdKt58DCc3+N
zQrDA2lKU1ZqHdF3eGAXLH2P2/CAveXPORV1Bg69Fx42NucbHPBO1Hh6W8rQ
IfKHdUHCMv0D4Z3huvbbDR207n07fSVX70DSxrbSRcFGDg1fbx2uMtU9kHdz
617WD0YO7359FKn5q32givEpa2aPsUNR2IJtqse0DrRpivid0TBx+H33pzPr
BE1oeJg4uLe9MJSP0Tgwt7Lo3qREU4f5z6b4BOmoQ8PH1EEsIDqdh0XtwNaT
F/IiZ5k5hB/laO97qQINL3OHNZ3XGGVfKB84K6n/X/6yucMqz0aTCGFlaPhZ
OOx8Xp98plPpwJPM3v5n3JYO3E9O9VllK0HD09Lh5MFMXZENSgf+7Hwtv9bF
ymFjo7+AlIgyNHytHDhdvh3anKx8QITLa0NxrbVD3PwfU3TmKUPD28bhX9Le
8+H7lA9oR61wsNpm4zA5+cGBBceVoeFv68DRGpqYc0L5gPMqtosM720d+Jjl
UvKAfACuYf86
         "]]}, {
        Hue[0.7520393249936888, 0.6, 0.6], 
        Directive[
         PointSize[0.004583333333333334], 
         RGBColor[0.9, 0.36, 0.054], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQfbPi4ETZjSwO0asWac1jMz9wwzHOvTmfw4G//n3x
xT6zA+ZN1zvmBvE6XIw7qJ33yfSAd6LG09tSgg7WMlMec4WZHqhifMqa2SPs
oFyQMXv5TpMDKxcuVPv2V9QhdbV9sIusCdQ8CYdtujLcDxuMD3A8ksoQeCjl
UKXFdLj2iRHUfFmHLSd/VEl5GB1IU5qyUuuIvEOTA7fx9tWGUPsUHWY2uL8O
5jc8kLSxrXRRsJLD/poNiz8UGUDtV3ZY/f3Pdqm1+gcmBTpP0z+q4uCx31cz
pEQP6h5Vh0fKcrN7rXUPHPz4f9seM3WH2+y3+Y8z6UDdp+HAeGRtJ8MprQMf
Ju657rlC0+H8qiYeq4maUPdqOZw5tXd+cYTGAXmjyh/XJHUcZBM8AtfKq0Pd
r+twSCPd+vkz1QP+l0wlU7r1HIoPbOtXXKcC9Y++Q0CC+5qYUuUD9pY/51TU
GTiwHr/oONNGCeo/Q4cZ5xyn3WBWPBDeGa5rv93QweykzmfLafJQ/xo5LHfb
5X9VRfZA3s2te1k/GDl8vGz4dNJmKaj/jR00q11m9TtJHGjTFPE7o2HicE1r
7z+GS6LQ8DBxeDF3+V6vJOEDcyuL7k1KNHVgkV18QP2LADR8TIHxW+HwXZD3
wNaTF/IiZ5k5BM8/cOKLGwc0vMwdbpzo4labxHzgrKT+f/nL5g4L7up8SBL5
tx8SfhYOv+dYTWvZ93X/k8ze/mfclg6PQpdMbjv2dj8kPC0d/mefWCRs+HT/
n52v5de6WDm8LNtfLRDzaD8kfK0crF5MuXkr5dF+ES6vDcW11g7yKjuYz554
tB8S3jYO//xPWh1lfbxfO2qFg9U2GwfGjuzwn+KP90PC39YhdF3Srm7Jx/ud
V7FdZHhv6yDn7bGlH8gHAGOIWBQ=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {{}, {}}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {13.815510557964304`, -23.025850929940407`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {{}, {}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{13.815510557964274`, 
      29.933606208922594`}, {-23.025850929940457`, 9.210340371976184}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"H\"", "\"H+\"", "\"H2\"", "\"H2+\"", "\"H3+\"", "\"O\"", "\"O+\"", 
       "\"OH+\"", "\"OH\"", "\"O2\"", "\"O2+\"", "\"H2O\"", "\"H2O+\"", 
       "\"H3O+\"", "\"C\"", "\"C+\"", "\"CH\"", "\"CH+\"", "\"CH2\"", 
       "\"CH2+\"", "\"CH3\"", "\"CH3+\"", "\"CH4\"", "\"CH4+\"", "\"CH5+\"", 
       "\"CO\"", "\"CO+\"", "\"HCO+\"", "\"He\"", "\"He+\"", "\"e-\""}, 
      "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.645957, 0.253192, 0.685109], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.645957, 0.253192, 0.685109], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.285821, 0.56, 0.450773], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.285821, 0.56, 0.450773], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.7, 0.336, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.7, 0.336, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.491486, 0.345109, 0.8], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.491486, 0.345109, 0.8], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.71788, 0.568653, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.71788, 0.568653, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.70743, 0.224, 0.542415], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.70743, 0.224, 0.542415], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.287228, 0.490217, 0.664674], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.287228, 0.490217, 0.664674], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.982289285128704, 0.5771321368979874, 
                    0.011542503255145636`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.982289285128704, 0.5771321368979874, 
                    0.011542503255145636`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.5876740325800278, 0.2877284499870081, 
                    0.7500695697462922], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.5876740325800278, 0.2877284499870081, 
                    0.7500695697462922], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.4262088601796793, 0.5581552810007578, 
                    0.2777996730417023], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.4262088601796793, 0.5581552810007578, 
                    0.2777996730417023], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9431487543762861, 0.414555896337833, 
                    0.07140829055870854], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9431487543762861, 0.414555896337833, 
                    0.07140829055870854], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.41497437140121635`, 0.393632147507352, 
                    0.7842993779115092], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.41497437140121635`, 0.393632147507352, 
                    0.7842993779115092], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.365248, 0.427802, 0.758297], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #17}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.945109, 0.593901, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #18}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.645957, 0.253192, 0.685109], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.645957, 0.253192, 0.685109], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #19}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.285821, 0.56, 0.450773], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.285821, 0.56, 0.450773], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #20}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.7, 0.336, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.7, 0.336, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #21}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.491486, 0.345109, 0.8], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.491486, 0.345109, 0.8], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #22}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.71788, 0.568653, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.71788, 0.568653, 0.], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #23}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.70743, 0.224, 0.542415], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.70743, 0.224, 0.542415], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #24}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.287228, 0.490217, 0.664674], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.287228, 0.490217, 0.664674], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #25}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.982289285128704, 0.5771321368979874, 
                    0.011542503255145636`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.982289285128704, 0.5771321368979874, 
                    0.011542503255145636`], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #26}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.5876740325800278, 0.2877284499870081, 
                    0.7500695697462922], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.5876740325800278, 0.2877284499870081, 
                    0.7500695697462922], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #27}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"], 
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.4262088601796793, 0.5581552810007578, 
                    0.2777996730417023], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.4262088601796793, 0.5581552810007578, 
                    0.2777996730417023], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #28}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9431487543762861, 0.414555896337833, 
                    0.07140829055870854], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.9431487543762861, 0.414555896337833, 
                    0.07140829055870854], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #29}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.41497437140121635`, 0.393632147507352, 
                    0.7842993779115092], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[
                    0.41497437140121635`, 0.393632147507352, 
                    0.7842993779115092], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #30}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.9, 0.36, 0.054], 
                    CapForm["Butt"], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #31}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.945109, 0.593901, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.645957, 0.253192, 0.685109]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.285821, 0.56, 0.450773]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.7, 0.336, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.491486, 0.345109, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.71788, 0.568653, 0.]|>,
                     "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.70743, 0.224, 0.542415]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.287228, 0.490217, 0.664674]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.982289285128704, 0.5771321368979874, 
                    0.011542503255145636`]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.5876740325800278, 0.2877284499870081, 
                    0.7500695697462922]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.4262088601796793, 0.5581552810007578, 
                    0.2777996730417023]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9431487543762861, 0.414555896337833, 
                    0.07140829055870854]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.41497437140121635`, 0.393632147507352, 
                    0.7842993779115092]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.365248, 0.427802, 0.758297]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.945109, 0.593901, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.645957, 0.253192, 0.685109]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.285821, 0.56, 0.450773]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.7, 0.336, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.491486, 0.345109, 0.8]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.71788, 0.568653, 0.]|>,
                     "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.70743, 0.224, 0.542415]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.287228, 0.490217, 0.664674]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.982289285128704, 0.5771321368979874, 
                    0.011542503255145636`]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.5876740325800278, 0.2877284499870081, 
                    0.7500695697462922]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.4262088601796793, 0.5581552810007578, 
                    0.2777996730417023]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9431487543762861, 0.414555896337833, 
                    0.07140829055870854]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.41497437140121635`, 0.393632147507352, 
                    0.7842993779115092]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0.9, 0.36, 0.054]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16, ",", #17, ",", #18, ",", #19, 
               ",", #20, ",", #21, ",", #22, ",", #23, ",", #24, ",", #25, 
               ",", #26, ",", #27, ",", #28, ",", #29, ",", #30, ",", #31}], 
             "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True"}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8324969416439295`*^9, 3.8324969472038574`*^9}, 
   3.865495049444329*^9, 3.865495651915888*^9, 3.8654959307544355`*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"90c9c116-8df4-4f74-bd02-76fd9ef61e8c"]
}, Open  ]],

Cell["Conservation between initial and final time step OK.", "Text",
 CellChangeTimes->{{3.7335678802018867`*^9, 
  3.733567895498849*^9}},ExpressionUUID->"3834fbc0-e93c-45fc-bc69-\
1266e4adc99a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "/@", 
  RowBox[{"Transpose", "[", 
   RowBox[{
    RowBox[{"getCons", "/@", 
     RowBox[{"species", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "*", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ysol", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", "0", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "31"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.733505968680293*^9, 3.7335059718659306`*^9}, {
  3.7335060465775394`*^9, 3.733506092839256*^9}},
 CellLabel->
  "In[313]:=",ExpressionUUID->"ef1e2bce-e3e5-42be-905f-d8029710c87f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "14060.`", ",", "0.`", ",", "10000.`", ",", "1000.`", ",", "1.`", ",", 
   "2.9999999999999996`"}], "}"}]], "Output",
 CellChangeTimes->{{3.733506067376398*^9, 3.7335060933079176`*^9}, 
   3.7344342217889943`*^9, 3.8323240353913655`*^9, 3.8654950496491485`*^9, 
   3.865495652105816*^9},
 CellLabel->
  "Out[313]=",ExpressionUUID->"8267df57-10a4-47d0-bfd6-cffcd7f06613"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "/@", 
  RowBox[{"Transpose", "[", 
   RowBox[{
    RowBox[{"getCons", "/@", 
     RowBox[{"species", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "*", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ysol", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       SuperscriptBox["10", "8"], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "31"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.733505968680293*^9, 3.7335059718659306`*^9}, {
  3.7335060465775394`*^9, 3.7335061013212204`*^9}},
 CellLabel->
  "In[314]:=",ExpressionUUID->"b05162fb-c68a-416d-940c-efe43db70a78"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"14060.000000000005`", ",", 
   RowBox[{"-", "3.2526065174565133`*^-19"}], ",", "10000.000000000004`", ",",
    "1000.0000000000001`", ",", "0.9999999999999999`", ",", 
   "2.9999999999999973`"}], "}"}]], "Output",
 CellChangeTimes->{3.7335061027056665`*^9, 3.734434224398182*^9, 
  3.8323240363338304`*^9, 3.8654950498101873`*^9, 3.8654956521245775`*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"d27314cb-6361-4ba4-b914-a4e96b9575e6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"solveChemistry", "[", 
   RowBox[{
    RowBox[{"time_", ":", 
     SuperscriptBox["10", "13"]}], ",", 
    RowBox[{"T_", ":", "100"}], ",", 
    RowBox[{"ntot_", ":", 
     SuperscriptBox["10", "4"]}], ",", 
    RowBox[{"zetaCR_", ":", 
     SuperscriptBox["10", 
      RowBox[{"-", "17"}]]}], ",", 
    RowBox[{"G0_", ":", "1."}], ",", 
    RowBox[{"AV_", ":", "1."}], ",", 
    RowBox[{"NH2_", ":", 
     SuperscriptBox["10", "12"]}], ",", 
    RowBox[{"NCO_", ":", 
     SuperscriptBox["10", "12"]}], ",", 
    RowBox[{"NC_", ":", 
     SuperscriptBox["10", "12"]}], ",", 
    RowBox[{"dv_", ":", "1"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eqns", ",", "ysol", ",", "yy", ",", "t", ",", "is"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"eqns", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             SuperscriptBox[
              RowBox[{"yy", "[", "is", "]"}], "\[Prime]",
              MultilineFunction->None], "[", "t", "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"is", ",", "1", ",", "nspecies"}], "}"}]}], "]"}], "==", 
          RowBox[{"setUpChemistry", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"yy", "[", "is", "]"}], "[", "t", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"is", ",", "1", ",", "nspecies"}], "}"}]}], "]"}], ",",
             "t", ",", "T", ",", "ntot", ",", "zetaCR", ",", "G0", ",", "AV", 
            ",", "NH2", ",", "NCO", ",", "NC", ",", "dv"}], "]"}]}], "]"}], 
        ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"yy", "[", "is", "]"}], "[", "0", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"y0", "[", 
             RowBox[{"[", "is", "]"}], "]"}], "ntot"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"is", ",", "nspecies"}], "}"}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ysol", "=", 
      RowBox[{"Quiet", "@", 
       RowBox[{"NDSolveValue", "[", 
        RowBox[{"eqns", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"yy", "[", "is", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"is", ",", "nspecies"}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "time"}], "}"}], ",", 
         RowBox[{"AccuracyGoal", "\[Rule]", 
          RowBox[{"Abs", "@", 
           RowBox[{"Log10", "[", 
            RowBox[{
             SuperscriptBox["10", 
              RowBox[{"-", "10"}]], "*", "ntot"}], "]"}]}]}], ",", 
         RowBox[{"PrecisionGoal", "\[Rule]", "10"}], ",", 
         RowBox[{"MaxSteps", "\[Rule]", 
          SuperscriptBox["10", "9"]}]}], "]"}]}]}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[315]:=",ExpressionUUID->"d4a79b8e-4757-4ef1-aee6-7d5a979416fd"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cooling Excitation", "Subsection",
 CellChangeTimes->{{3.7335683463102474`*^9, 3.7335683463132496`*^9}, {
   3.73356848459597*^9, 3.733568574574546*^9}, 3.7335686750675344`*^9, {
   3.733574953899517*^9, 3.733574954555761*^9}, 3.7348478000506296`*^9, {
   3.73484839289764*^9, 3.734848396524702*^9}, {3.8654891240165153`*^9, 
   3.8654891243018293`*^9}},ExpressionUUID->"90c60cd0-7e91-4671-a067-\
bda6d796917b"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "levels", ",", "transitions", ",", "colltemps", ",", "collrates", ",", 
   "numberofCollisionPartners", ",", "colType", ",", "en", ",", "g", ",", "j",
    ",", "tu", ",", "ta", ",", "tl", ",", "tf", ",", "te", ",", "tbul", ",", 
   "tblu", ",", "gg", ",", "de", ",", "icode", ",", "collUL", ",", 
   "collTemp"}], "]"}]], "Input",
 CellChangeTimes->{{3.734848253329573*^9, 3.7348483021541586`*^9}, {
  3.734848691292201*^9, 3.7348486916202855`*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"a4644531-2d16-4a79-9401-9363cb71e1a0"],

Cell["\<\
Import spectroscopic data from LAMDA files (see \
https://home.strw.leidenuniv.nl/~moldata/ )

Results will be stored in global variables: \
\>", "Text",
 CellChangeTimes->{{3.8654891355639076`*^9, 
  3.8654891862888546`*^9}},ExpressionUUID->"b2ea9aef-aaee-4088-b877-\
7b23ad72a7c4"],

Cell[TextData[{
 "en\t\tlevels: level energy of all levels (in wavenumber ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cm", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "76892968-d6a7-4fb5-ac98-3aa315270781"],
 ")"
}], "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.865489274159938*^9}, {3.865489346560133*^9, 
   3.865489348344101*^9}, 
   3.865497823015786*^9},ExpressionUUID->"de909c5e-9546-4764-97e1-\
5868cd604759"],

Cell["g\t\tlevels: statistical weight  of all levels", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.86548928088653*^9}, {3.8654893515953836`*^9, 
   3.8654893538650017`*^9}, 
   3.8654978253022094`*^9},ExpressionUUID->"1e622036-b684-40ed-9398-\
cdb758b4713b"],

Cell["j\t\tlevels: rotational quantum number of all levels", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.8654893001838813`*^9}, {3.865489357402997*^9, 
   3.865489358274687*^9}, 
   3.865497826277357*^9},ExpressionUUID->"674870ef-31cd-4cd3-a3f0-\
aafc50a4529b"],

Cell["tu\t\ttransitions: upper level index", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.8654893282657537`*^9}, 
   3.8654978276500463`*^9},ExpressionUUID->"ab1a22c3-703f-4eb8-a57b-\
f30041ccdd07"],

Cell["tl\t\ttransitions: lower level index", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.865489338197341*^9}, 
   3.8654978284677267`*^9},ExpressionUUID->"6b4e7f70-1fe6-459f-bb03-\
cf8cda2f19f2"],

Cell[TextData[{
 "ta\t\ttransitions: Einstein A value in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "fef655af-3d2f-4c92-a655-26c6c0692231"]
}], "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.8654893718055625`*^9}, 
   3.865497829599595*^9},ExpressionUUID->"4594ab34-ddce-400a-893a-\
5a57ca8bc938"],

Cell["tf\t\ttransitions:\tfrequency in Hz", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.865489393581113*^9}, 
   3.865497831069829*^9},ExpressionUUID->"3496ccbf-b7b7-4037-ac94-\
3ad0ddde0023"],

Cell["te\t\ttransitions: upper level energy (K) ", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.865489431525908*^9}, {3.8654895073761687`*^9, 
   3.8654895073787966`*^9}, 
   3.8654978317150507`*^9},ExpressionUUID->"a8cdbab9-1b5b-4b12-a7d9-\
4ecec394280d"],

Cell[TextData[{
 "tbul\t\ttransitions: brightness temperature upper \[Rule] lower (erg ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", 
    RowBox[{"-", "1"}]], TraditionalForm]],ExpressionUUID->
  "31ca9b9c-40fe-46b6-9099-3e4278bfdf1d"],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cm", 
    RowBox[{"-", "3"}]], TraditionalForm]],ExpressionUUID->
  "3fcc110b-50cf-4db0-9b4a-d94cec062513"],
 ")"
}], "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.865489431525908*^9}, {3.8654895081602716`*^9, 
   3.8654895473641787`*^9}, 
   3.865497832922186*^9},ExpressionUUID->"3bc3ba7c-055e-4ab6-a87f-\
4e05810bf6c7"],

Cell["tblu", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
  3.8654892494863987`*^9, 3.865489431525908*^9}, {3.8654895081602716`*^9, 
  3.8654895505414248`*^9}, {3.8654896206160407`*^9, 
  3.8654896206160407`*^9}},ExpressionUUID->"b6f7caaa-0abf-4e64-b92c-\
0736e5b970d5"],

Cell["gg\t\ttransitions: all ratios of statistical weights", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.865489431525908*^9}, {3.8654895081602716`*^9, 
   3.8654895505414248`*^9}, {3.865489621564597*^9, 3.8654896525617743`*^9}, 
   3.8654978340549684`*^9},ExpressionUUID->"2b27c896-b5d0-4f7f-8be6-\
b126b2cc6d2d"],

Cell[TextData[{
 "de\t\ttransitions: ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "upper"], "-", 
    SubscriptBox["E", "lower"]}], TraditionalForm]],ExpressionUUID->
  "f4bba42a-b6c2-493e-87f3-b8d24ca45b75"],
 " in (K)"
}], "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.865489431525908*^9}, {3.8654895081602716`*^9, 
   3.8654895505414248`*^9}, {3.865489621564597*^9, 3.865489688118721*^9}, {
   3.865489889539319*^9, 3.865489889539319*^9}, 
   3.865497835164892*^9},ExpressionUUID->"738384cf-c649-4dc6-8008-\
a759f9fe4965"],

Cell["collrates \tcollision rates", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
   3.8654892494863987`*^9, 3.865489431525908*^9}, {3.8654895081602716`*^9, 
   3.8654895505414248`*^9}, {3.865489621564597*^9, 3.865489688118721*^9}, {
   3.865489890113793*^9, 3.8654898936066823`*^9}, 
   3.865497836934907*^9},ExpressionUUID->"38fbe038-1fa3-4590-845c-\
5b672cdc0542"],

Cell["\<\
collUL \t\tarray of collision rate matrice (upper/lower triangular) (one \
matrix per collision partner)\
\>", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
  3.8654892494863987`*^9, 3.865489431525908*^9}, {3.8654895081602716`*^9, 
  3.8654895505414248`*^9}, {3.865489621564597*^9, 3.865489697174494*^9}, {
  3.8654897310812654`*^9, 3.8654897503714323`*^9}, {3.8654898399766254`*^9, 
  3.8654898543579187`*^9}, {3.8654978384197397`*^9, 
  3.865497840522132*^9}},ExpressionUUID->"ede226ca-757b-4f8a-9caa-\
3badf96589c9"],

Cell["collTemp\ttemperature grid for the collision rates", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
  3.8654892494863987`*^9, 3.865489431525908*^9}, {3.8654895081602716`*^9, 
  3.8654895505414248`*^9}, {3.865489621564597*^9, 
  3.8654897270305567`*^9}},ExpressionUUID->"6a6995cc-426c-4595-b652-\
daf00f2b360c"],

Cell[CellGroupData[{

Cell[" ", "ItemParagraph",
 CellChangeTimes->{{3.865489197677309*^9, 3.865489205375682*^9}, {
  3.8654892494863987`*^9, 3.865489431525908*^9}, {3.8654895081602716`*^9, 
  3.8654895505414248`*^9}, {3.865489621564597*^9, 
  3.8654897085121856`*^9}},ExpressionUUID->"06e5882b-f945-46d4-a89c-\
aeb6ba7aa1c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"loadLambda", "[", 
   RowBox[{"spec_String", ",", "filename_"}], "]"}], ":=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"levels", "[", "spec", "]"}], ",", 
       RowBox[{"transitions", "[", "spec", "]"}], ",", 
       RowBox[{"colltemps", "[", "spec", "]"}], ",", 
       RowBox[{"collrates", "[", "spec", "]"}], ",", 
       RowBox[{"numberofCollisionPartners", "[", "spec", "]"}], ",", 
       RowBox[{"colType", "[", "spec", "]"}]}], "}"}], "=", 
     RowBox[{"lambdaInput2", "[", 
      RowBox[{"filename", ",", 
       RowBox[{"CombineOrthoPara", "\[Rule]", "False"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"en", "[", "spec", "]"}], "=", 
     RowBox[{
      RowBox[{"levels", "[", "spec", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"g", "[", "spec", "]"}], "=", 
     RowBox[{
      RowBox[{"levels", "[", "spec", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "[", "spec", "]"}], "=", 
     RowBox[{
      RowBox[{"levels", "[", "spec", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "4"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tu", "[", "spec", "]"}], "=", 
     RowBox[{
      RowBox[{"transitions", "[", "spec", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tl", "[", "spec", "]"}], "=", 
     RowBox[{
      RowBox[{"transitions", "[", "spec", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ta", "[", "spec", "]"}], "=", 
     RowBox[{
      RowBox[{"transitions", "[", "spec", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "4"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tf", "[", "spec", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"transitions", "[", "spec", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "5"}], "]"}], "]"}], 
      SuperscriptBox["10", "9"]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"te", "[", "spec", "]"}], "=", 
     RowBox[{
      RowBox[{"transitions", "[", "spec", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "6"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tbul", "[", "spec", "]"}], "=", 
     RowBox[{
      RowBox[{
       SuperscriptBox["c", "2"], "/", 
       RowBox[{"(", 
        RowBox[{"2.", "*", "h", "*", 
         SuperscriptBox[
          RowBox[{"tf", "[", "spec", "]"}], "3"]}], ")"}]}], "*", 
      RowBox[{"ta", "[", "spec", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tblu", "[", "spec", "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"g", "[", "spec", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"tu", "[", "spec", "]"}], "]"}], "]"}], "/", 
       RowBox[{
        RowBox[{"g", "[", "spec", "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"tl", "[", "spec", "]"}], "]"}], "]"}]}], "*", 
      RowBox[{"tbul", "[", "spec", "]"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gg", "[", "spec", "]"}], "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"g", "[", "spec", "]"}], "/", "#"}], "&"}], "/@", 
       RowBox[{"g", "[", "spec", "]"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"divide", " ", "all", " ", "g", " ", "with", " ", 
       RowBox[{"g", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
      RowBox[{"then", " ", "all", " ", "with", " ", 
       RowBox[{"g", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "..."}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"de", "[", "spec", "]"}], "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{"#", ",", "0"}], "]"}], "&"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "hck"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"en", "[", "spec", "]"}], "-", "#"}], "&"}], "/@", 
            RowBox[{"en", "[", "spec", "]"}]}], ")"}]}], ")"}], ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";", 
    RowBox[{"(*", 
     RowBox[{" ", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"e1", "-", "e1"}], ",", 
         RowBox[{"e1", "-", "e2"}], ",", 
         RowBox[{"e1", "-", "e3"}], ",", "..."}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"e2", "-", "e1"}], ",", 
          RowBox[{"e2", "-", "e2"}], ",", "..."}], "}"}], "..."}]}], "}"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "patch", " ", "to", " ", "allow", " ", "for", " ", "species", " ", 
      "with", " ", "only", " ", "one", " ", "collision", " ", 
      RowBox[{"partner", "!"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"icode", "[", "spec", "]"}], "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Depth", "[", "colType", "]"}], ">", "2"}], ",", 
         RowBox[{
          RowBox[{"colType", "[", "spec", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"colType", "[", "spec", "]"}], "}"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"numberofCollisionPartners", "[", "spec", "]"}], ">", "1"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"icode", "[", "spec", "]"}], "=", 
        RowBox[{
         RowBox[{"colType", "[", "spec", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"icode", "[", "spec", "]"}], "=", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"colType", "[", "spec", "]"}], "}"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"collrates", "[", "spec", "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"collrates", "[", "spec", "]"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"colltemps", "[", "spec", "]"}], "=", 
        RowBox[{"{", 
         RowBox[{"colltemps", "[", "spec", "]"}], "}"}]}], ";"}]}], "]"}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "[", 
          RowBox[{"collrates", "[", "spec", "]"}], "]"}], "\[Equal]", "2"}], 
        ",", 
        RowBox[{
         RowBox[{"collrates", "[", "spec", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"collrates", "[", "spec", "]"}], "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Depth", "[", 
          RowBox[{"colltemps", "[", "spec", "]"}], "]"}], "\[Equal]", "2"}], 
        ",", 
        RowBox[{
         RowBox[{"colltemps", "[", "spec", "]"}], "=", 
         RowBox[{"{", 
          RowBox[{"colltemps", "[", "spec", "]"}], "}"}]}]}], "]"}], ";"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"ttmp", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"SparseArray", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"Map", "[", 
             RowBox[{"createRules", ",", 
              RowBox[{
               RowBox[{"collrates", "[", "spec", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{
                   RowBox[{"icode", "[", "spec", "]"}], ",", "#"}], "]"}], 
                 "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], 
             "]"}]}]}], ")"}], "&"}], "/@", 
        RowBox[{"icode", "[", "spec", "]"}]}]}], ";"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"ttmp", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"Flatten", "@", 
           RowBox[{"Map", "[", 
            RowBox[{"createRules", ",", 
             RowBox[{
              RowBox[{"collrates", "[", "spec", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"icode", "[", "spec", "]"}], ",", "#"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], 
            "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"levels", "[", "spec", "]"}], "]"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{"levels", "[", "spec", "]"}], "]"}], ",", 
            RowBox[{"Length", "[", 
             RowBox[{
              RowBox[{"colltemps", "[", "spec", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"icode", "[", "spec", "]"}], ",", "#"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "]"}]}],
            "}"}]}], "]"}], ")"}], "&"}], "/@", 
      RowBox[{"icode", "[", "spec", "]"}]}]}], " ", ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"collUL", "[", "spec", "]"}], "=", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "7", "}"}]}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"icode", "[", "spec", "]"}], "->", "ttmp"}], "]"}]}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"collTemp", "[", "spec", "]"}], "=", 
     RowBox[{"ReplacePart", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", "}"}], ",", 
         RowBox[{"{", "7", "}"}]}], "]"}], ",", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"icode", "[", "spec", "]"}], "->", 
         RowBox[{"colltemps", "[", "spec", "]"}]}], "]"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ttmp", "=."}], ";"}], "\[IndentingNewLine]", "}"}]}]], "Input",
 CellChangeTimes->{
  3.734847934212866*^9, {3.734847965991832*^9, 3.7348480509700994`*^9}, {
   3.73484809193591*^9, 3.7348481183090115`*^9}, {3.73484834486985*^9, 
   3.7348483608843327`*^9}, {3.734849011687263*^9, 3.7348490274673805`*^9}, {
   3.734849455360999*^9, 3.734849473140942*^9}, {3.7348495633688884`*^9, 
   3.734849596523678*^9}, {3.7348496267246423`*^9, 3.7348497172649975`*^9}, {
   3.7348539988484583`*^9, 3.7348540632344246`*^9}, {3.734854136510393*^9, 
   3.7348542217465944`*^9}, {3.7348543792977724`*^9, 3.734854379641465*^9}, {
   3.74436274515869*^9, 3.7443627569703207`*^9}, {3.7443629097903385`*^9, 
   3.74436293533531*^9}, {3.744363447318268*^9, 3.744363481643903*^9}, {
   3.7443636104052954`*^9, 3.744363633872348*^9}, {3.744363708382451*^9, 
   3.7443637413800387`*^9}, {3.7443637803147345`*^9, 3.7443638328108287`*^9}},
 CellLabel->"In[86]:=",ExpressionUUID->"e7a02d53-7f2f-416a-9a7e-38a10c0788f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "convTest", "]"}], "=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "convTest", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"convTest", "[", 
   RowBox[{"new_", ",", "old_", ",", 
    RowBox[{"tol_", ":", "8"}]}], "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"Abs", "[", 
       RowBox[{"old", "-", "new"}], "]"}], 
      RowBox[{"new", "+", 
       SuperscriptBox["10", 
        RowBox[{"-", "99."}]]}]], ">", 
     SuperscriptBox["10", 
      RowBox[{"-", "tol"}]]}], "&&", 
    RowBox[{"new", ">", 
     SuperscriptBox["10", 
      RowBox[{"-", "10"}]]}]}], ")"}]}]}], "Input",
 CellLabel->"In[87]:=",ExpressionUUID->"da613c8a-22c3-43af-a3fd-6a74cb7f94e6"]
}, Open  ]],

Cell["Example: load the spectroscopic data for CO:", "Text",
 CellChangeTimes->{{3.8654897736434402`*^9, 
  3.86548978349279*^9}},ExpressionUUID->"3cf975b6-f4b3-43b2-950b-\
d6807b1ded1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"loadLambda", "[", 
   RowBox[{"\"\<CO\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$lamdaDir", ",", "\"\<data_CO.dat\>\""}], "}"}], "]"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7348488741377726`*^9, 3.7348488881680155`*^9}, {
  3.7348597385159116`*^9, 3.734859780216012*^9}, {3.7443636379033103`*^9, 
  3.7443636634638796`*^9}, {3.808738782322564*^9, 3.808738814973752*^9}, {
  3.832324086881682*^9, 3.8323240951687207`*^9}, {3.8654897893908863`*^9, 
  3.8654898180125113`*^9}},
 CellLabel->
  "In[316]:=",ExpressionUUID->"f35b2bd3-be76-46d2-a7d7-6cdf56f16840"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"collUL", "[", "\"\<CO\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.734849730310934*^9, 3.7348497307015896`*^9}, {
  3.734854236261207*^9, 3.7348542364486666`*^9}, {3.744363845403688*^9, 
  3.744363850309544*^9}, {3.8323230266450424`*^9, 3.832323026821577*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"e9cdb496-24b1-4335-a364-d92995ac861d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["20500", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"41", ",", "41", ",", "25"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["20500", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"41", ",", "41", ",", "25"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.4878048780487805`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "2.954`*^-11", ContentPadding -> False, FrameMargins -> 0,
                     StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "3.251`*^-11", ContentPadding -> False, FrameMargins -> 0,
                     StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "3.302`*^-11", ContentPadding -> False, FrameMargins -> 0,
                     StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "3.249`*^-11", ContentPadding -> False, FrameMargins -> 0,
                     StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[
    Automatic, {41, 41, 25}, 0, {
     1, {{0, 1000, 1975, 2925, 3850, 4750, 5625, 6475, 7300, 8100, 8875, 9625,
        10350, 11050, 11725, 12375, 13000, 13600, 14175, 14725, 15250, 15750, 
       16225, 16675, 17100, 17500, 17875, 18225, 18550, 18850, 19125, 19375, 
       19600, 19800, 19975, 20125, 20250, 20350, 20425, 20475, 20500, 
       20500}, CompressedData["
1:eJzt1UeyI2kVhuHK33tv5VM+d0OwhN4A+58hRgwIAhq6qsuc0R0prpR5vvdZ
f/vbX39DX758KX/58uUff9GCEMKIIIoY4kggiRTSyCCLHPIooIgSyqigihrq
aKCJF4wwxgRTzDDHAkussMYGW+ywxwFHnHDGBVfccMcDT7IQRDAhhBJGOBFE
EkU0McQSRzwJJJJEMimkkkY6GWTShSKKKaGUMsqpoJIqqqmhljrqaaCRJppp
oZU22umgky0MMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBpt84YhjTjjl
jHMuuOSKa2645Y57HnjkiWdeeOWNdz74FItAAgsiqGCCCyGkUEILI6xwwosg
okgiiyKqaKKLIaZcJJJYEkklk1wKKaWSWhpppZNeBhllklkWWWWTXQ451aKQ
woooqpjiSiiplNLKKKuc8iqoqJLKqqiqmupqqKkXjTTWRFPNNNdCS6201kZb
7bTXQUeddNZFV91010NPsxhksCGGGma4EUYaZbQxxhpnvAkmmmSyKaaaZroZ
ZtrFIostsdQyy62w0iqrrbHWOuttsNEmm22x1Tbb7bDTLQ457IijjjnuhJNO
Oe2Ms84574KLLrnsiquuue6Gm37xyGNPPPXMcy+89Mprb7z1znsffPTJZ198
9c13P/wMS0ABBxJoYIEHEWRQQQcTbHDBhxBiSCGHEmpooYcRZlwiijiSSCOL
PIooo4o6mmijiz6GGGOKOZZYY4s9jjjTklDCiSSaWOJJJJlU0skkm1zyKaSY
UsqppJpa6mmkmZeMMs4k08wyzyLLrLLOJtvsss8hx5xyziXX3HLPI8+yFFRw
IYUWVngRRRZVdDHFFld8CSWWVHIppZZWehll1qWiiiuptLLKq6iyqqqrqba6
6muosaaaa6m1ttrrqLMtDTXcSKONNd5Ek0013UyzzTXfQosttdxKq6213kab
femo40467azzLrrsqutuuu2u+x567KnnXnrtrfc++hzLQAMPMuhggw8x5FBD
DzPscMOPMOJII48y6mijjzHmXOYnKPMz+PkZ5PwMZn4Oen4Obn4OYn5e2Pw8
0Pn5wfPzhebnA7tlh3Z4R3Z0x3Z8J3Zyp3Z6Z3Z253Z+F3Zxl3Z5V3Z113Z9
N3Zzv+zRHu/Jnu7Znu/FXu7VXu/N3u7d3u/DPu7TPu/Lvu7bvu/Hfh6WAzrg
AznQAzvwgzjIgzrogznYgzv4QzjEQzrkQznUQzv0wzjM43JER3wkR3pkR34U
R3lUR300R3t0R38Mx3hMx3wsx3psx34cx3laTuiET+RET+zET+IkT+qkT+Zk
T+7kT+EUT+mUT+VUT+3UT+M0z8sZnfGZnOmZnflZnOVZnfXZnO3Znf05nOM5
nfO5nOu5nft5nOdluaALvpALvbALv4iLvKiLvpiLvbiLv4RLvKRLvpRLvbRL
v4zLXJcVrXglK13ZylexylWtejWrXd3q17DGNa15LWtd29rXsc7rckVXfCVX
emVXfhVXeVVXfTVXe3VXfw3XeE3XfC3Xem3Xfh3XeVtu6IZv5EZv7MZv4iZv
6qZv5mZv7uZv4RZv6ZZv5VZv7dZv4zbvyx3d8Z3c6Z3d+V3c5V3d9d3c7d3d
/T3c4z3d873c673d+33c52N5oAd+kAd9sAd/iId8qId+mId9uId/hEd8pEd+
lEd9tEd/jMd8Lk/0xE/ypE/25E/xlE/11E/ztE/39M/wjM/0zM/yrM/27M/x
nK/lhV74RV70xV78JV7ypV76ZV725V7+FV7xlV75VV711V79NV7zvbzRG7/J
m77Zm7/FW77VW7/N277d27/DO77TO7/Lu77bu7/He27Lhja8kY1ubOOb2OSm
Nr2ZzW5u81vY4pa2vJWtbm3r29hAZ9AZdAadQWfQGXT+7nQGa8FasBasBWvB
WrD261oLcoKcICfICXKCnCDn75ETHAQHwUFwEBwEB39lB0E1UA1UA9VANVDt
51ENjAKjwCgwCowCo75Xo0AcEAfEAXFAHBDn24gDfoAf4Af4AX6AH/+LH6AB
aAAagAagAWiwQduh7dB2aDu0/SdsO5QaSg2lhlJDqb/3UkN3obvQXegudPfb
dhcqChWFikJFoaL/T0WhidBEaCI0EZr4zyZC4aBwUDgo3M9bOOgV9Ap6Bb36
UXoF9YH6QH2gPn9OfaAl0BJoCbTkj2gJlAHKAGWAMvxrGWDnsHPY+c+/c1gt
rBZW+6OtFjYIG4QN/rkbhEXBomBRf+SiYB+wD9jHv98HXDtc+69z7XC7cLs/
6u3CJcIlfh+XCHcFd/U17gquBK7kP18JvPNf753DG/zR3yC8j+/rfcDT/ZpP
F57Vf/+sft1f/rP8ju/zW32L//H7P/F3vKPV9w==
       "]}, CompressedData["
1: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
zqHZPtmbAwSmr054eRfBaqgOwbUL5WB9JML01bgCxkaSsrnTK6F/u9Gu8n3V
cZ93DTho3tjt96r9j4ek3Qkz5yZ6BXw0p7uGRRqO+xVbgKp6UBNnve24z7oT
Mr71ctQR94DYwGeD+PheCDZ2i2h63QdNfVVpZLH9x3xsP/Q+2JF7c2MAJG33
1i0TB6BHLaT+YGkACCzyjGjODsDYPWb7+b5eCLBeuXu+MQcyDTytRBiyoVi2
eZwvLQs2xIS3O/4ZrzUVMF/4mAXhu0q7gdrZx7xqNgjXVoYYGOdAzZNJi+St
HGjgPTxXb5d73NecC+s9uRvEtv/j32PeOr11+FwEmjMdvYrc5aC4dWo8Q7cS
hM2uDAQbVkP+QMN+kmAtXE3xzTKYroOfjCTCvyLrgUtr1Pue5CuoPUyJ0/Vu
AM2Fcu7ppEYweoLjcLm/9VhP0PZfn+7T+kCC3sqw437ecLhod+Zg2/IlxF1P
KyLhigKqVJInfMwxMHfddSbrbhw0uTAsY9EJUHNH/Gf8r6RjfUDqMS+dDqE5
0GlZnAG5r7ZHxyPz4NEtSu+25mL4RLTKFu9aCbHmZpLUQTXgct5tvOZrHei3
enR8Wn11vB8aIUBC38ZBqAkUD0f/aq01AZ2bOa/m+dfw8tVPLjmKFpjNoRTr
JWiHGx+YnMb42v/jg06RNdzVSXMD/zVc/9mXbkD2gdPvhaM7MO16+qyLP4dU
Q4+osn5PwAm7m/zjijeYkvtwikX6AIO3jkUEhR9UFNDGG6T4A2fpiJAtWwA0
T4WbiJUFwgEdQ+mRW8SxXaNg3+2AS1I7EWTa8KrpX6VBDPuNBc6fGfDrW+r+
ZHYW+Ldsp6SdywGe6+PnicJyQHIzSjFSMxdcqc1vKrjlwZhCUi5rRD4kV4Zv
IIZyqJqkW5Hor4Ah4rWJ1RvWQO7l9NW52ApqHfaZCa2twfTuoG5j1//45VO7
MZ0NRc9Agc7+fKesI9D4ajQYyLjAOYkkktBId1ig6GZ8G+oJ9zm67p987A00
+Jr1j7V8YYFEi8czJOyYL40GX9d6wcwHKbDSz5R28/8Rdd7xXL3//49EJRnZ
hRCRkpF5rmdmqCR7lOyZbImSUMpKKDPZO1llJDMzyd5Z2SQzpIzf+3dzPq/v
X2631z9e1+tc1znXuR6Px/1hnwRBTxnlPkWlQvSx2b8S6hnw8NO2X29xFnQu
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
SHZEnlLyzDgyWTtl7/5kFYVm2rWKHNlFFU8vcpaZEQP/hb27fgfIIdBH8cRy
BD12fEdBRIDVcOq1Glw0kLo/NX4exPiltx1EfmJe01+4oFeL6i/GtnGvo06S
HXD5i9vLv8SYlk+I2o8dXVib/q9fS/nVdxO+U6GN71rKFEb06Mc38pVrASzo
Bq5c1NyYE3GwN588IsGLJAJ1XDQclVE9uc7enRhr9ECwxkaaIxnVcyj4kNY9
Rc8Plp5yUehH+5+bBczrsoHx3bdR9otNYkk5QqiKtHh6IZwS628zYB4KJbjb
Sn2sHvQgQvBehZv4B1yoUG/6SOcnXNIXKTY+6hXcyeqVZLfCr7itFrWO+z3r
OHMTRcd17h+4ir7hRYG7v3H/5tXm5+M/1AwQ44/vSsAd94/8NEiXm03/8BQD
Ml1UTOBXPokoWS7qOKTqI9qroYaLZGFo/sP386mkhWjfd9GK97rvcyg+I111
Mw+pxnW0z9XZwvJ1YvDtSv14Q/4wyHGoris/wWH7VFrg3aduc991CId7LNQo
MjaCk9e6mcT/fQy3OTe94n9uCsf6vqhv48EsLvXJpbg+lUWcf5hrhCT6jFMt
u9w/uPwN19vlvZl6bROXbnmQLtZkGzd0io0k9Qgh+qOy0L9x/iCyILGev27B
hwoJi19pMqqgfX+tJ6oeBN7LlFlIaLySnP1wHXp0OPQ0MXk/Cn9pXFJIMYfC
1U6i590f0YZgR30u7Ro2j/IHHVkTK5wZOwDNr9ouO/ZKw87KjhXLLzXYUu/Q
yYlpw93tur7nvdeB21+3urGe8GvcyZq4YWrXtziOzUD2eONB3IEfQjGLcqN4
LvfeyKrY0NIcjrr4x+zjkQ+4kIFQzzOhqzilWYrEKbSBy6rh0qkmocd48JIo
PS+O+padPeYXTUCX7Az+jNOVoAV1IhPnR62IIWq3p9ZqBM2OMY6J1M+gPxdN
evaeL2Ecnu/IIWmSfd5hFzU9OEQs0S4O1FL67gk2SpBzmv9GVEA1zteylyp/
uxY3QNrUWMlVj2OU10wF/0bc1g5nSFFMM07rao9ByuNW3MfAY7elVzpxtL9k
anmr+3Dqkfb3g7ve4c4V5P9OYhvDJQqPtTKpzODOvaaPZHdZxNEXdW6rKhxA
WbJ+NO9KeVCm/POn3TamaGhb/UO+Swje65preqHk1/Qz9Ewy0OSQRR/iJwkT
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
TR3GLD4xd8ieA/67hUO3zPRA5uGVn7r0RrAwFVwUSWqGXd/dwZkmat5SwQ9c
Wx6RH/0bg/jtgv095+KQ5aLR/eXgRHR25nqE6etkFHul2s2xPxVVhHS9IOK6
g0ia+4npWnIw/mg+sj3baHXuTCEy+0pxif1xCfLXoGZYyavE/F01KLU+Z0fd
rA8J/Yw25mydQ05dZtXJw4QgFKEvtUnMAjYmYt+2GwTBy+Hl6oqeNLysr3mz
qqoIc5cKSm+7qgBJm2u26tsz2ByHDvTkCVVNLxqAh6WdMzW3M8R/9BS5oHgD
9jlUfkixbH18hTAAeZWi8NonQUglN2P4xIcQxHLImbNwJhw5iDl9XGSOQfmL
iK7wXgJKIa7XEO5JQU6U3DG8xzIQ21Q0Tjj67v85c5a2d/9H1nmHU/n/f1wy
kxJJNkkpZYt4v0RkJ3tk7529IzujbEIykqzsFSV7K3uHREXJSlmN3+d7uTv9
8furK3XVuZ1z3uf2HI9nFto9ricg0pCDXDYGOLyvvULK3gS3R84PodMDUTyv
+b4j8ie5flk5RyC3jPPc40QW0P71Y94+/yKc+8C4nnNdCJ7YrR7fuoDgIz11
ivBzcYyLKo31BxXh0PNz9xGLFS7HRm1REVzxwhrpFF97KlNih6TpHV4yaTrg
OIj7PTpXbI/PE1FuWQzeoPND1Mze1cwBgeiSl9gbwbnQ//kkO1sW9xBPEh7H
XGEs8rxsFMRwMAnjcJWixJgjMUxn2v77fxLvCY4som+umX2fN/AhXesbI3Uw
NTxOWfFXOHgauA1f8MkiHghlL6xf+sQPkpLPF+WXhHCcBaK22vBYnWtgHKvr
dMLXFLuvvAX7PE0dlNYTtPmyUA/xvCzZUtQyRMGqxQS51caotr3jQIqPGRrY
NmWjv2SFNuhfqGZR2SMvq0+eBflO6M9woc2LEjes9+z9v/6RlnWuP7Jm4mJ5
1BKM28UswS8987C9Ctdb2c+vbyNVC0FGzo7D0FO7emAwnx63H73PS76Anc+8
kJIRyOcoKgzhlO9eUhGIQ/Ly4aSlIUOIYnvF/0zGGsiImZ5Gx8uh2LmXVo3p
iuh9ZQHj1PUbqIziYpR8pQoaSbU5vOSvjs5/5g4PV9TG9vj00XmFO1J3R43R
1OcYStPv5qijuKHeTNQWDZad17i754iuMZXax19xQx850obWRWJQlP6fIuGn
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
l7c6bNKPxovLGUNFvqTy4wYbvI9S/lVC1J7WDfVyPYFv/edE9CsvlIf2QRws
P7zftb+61nyYNxo9V+PRfIYGcbsP4bx4CwZJhYoEOoh3H9hPNXQMHistx/1p
YIbzV9scRfhY4Ug0yeV/79jAtuQ6sQwZO3zn+RU7mnAO4vsVvbsLLsCwHke7
0AlenF/8RzWs6Y+IPLyc/8t9x+gWfDmQp7XHxxyaxoj2N+jawY04p5aPpI7o
OrpBzKLTdMB+DwjbG19AqeYJWXw+o0GvveHGhpqkOIkfpJQ/PGVEEgXBb16m
/twfC19JjnjFUxCDUtTFwIeJJGBkzZpN0rQX8sYw6sxcctjuNW17KF5WnFhT
5T0EJ0e5w8XPHUE9T3r49CTt+99MJvjo31N+ne0EsPpYnOdvOwkOQWxsRFx8
8O7Y4TiBSjFQH7rwuYxRFXF79ICv19gkst0Mlg/QO7lF2MBknluRcNFODnXb
W7mdMyN44R/inhOCpycSkjj5Dfljv2EpUYEODxzWMW6OXkfehV+Y/xTPjaTD
fzGG8SPaHz79wx419IXv0iKG0nOBXXbCe5BPjwwSB+dvm77eh7whB0BLfIm8
K+AQ8ggeAcVMWcc0ijPwdzjRK4uIH3k05HAvzYUekWybJgN0bm0ObxLj/e2T
bZB3xQ40D+1/k3bJATJpb2u+zX+A52q358ENfrtc9rOFw2NdI3+3inmsMi+1
9VfiO6ws7iFw0Cxh9iLhSVw3PmM2m0/ium6sYOX8dWSe0t8wJ1XpPU9+rGOK
/2KYEvQ2MIdrpCHFcruA4G3YDd4nj84qDu2F83tYxDknKWBvtztPww1GYD1K
IiTlexb31m73amZOP4tz6dMCDtKjJOpgAJ3G9iEHe3d6/BPrfF6VllaIJ2UL
xOetmZPZHGDvkzNQFu4DjNGpSrZxQZCsN31neM8QFnY6sjnr5Fss/XxAmHb9
GKYaN32qi38KcZZmsfz7rmNbM/PYydn+r2Un3+P88lzF4FWfla+YmVfYiRNj
a9jPPZuBWtLrmGsHexO1wh9sQqT7zeb8PnTdGIF+uCz3w8RFtI65Ah6ybMK3
LFTggP795DXGm8gXb4B7rAnnRKZgzCBI2z1xByw4fZ9/VbBBOTNPCD17jmOT
3R84KqILiulasHeHcp1W9dqxI42FrwtZurCI5652jt1vsLp5+8Bunn7s9B7v
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
LD+It/6SGbkcgJolxuaK0/893xc854144vDFacZaICsRR045+NmN74CrNNvU
3wYR0vMkCvvZt4p2iO5FxOGS61Wfmdycq0rOa3nHDhNfuhRKZ/2a+mXOzB0x
fBmMOZaeL1AhPmMtSET9K9jxz4zkAO1IrsCZ8qtdmLS9ECvpBcmCEilHdub1
sLzw9/JaFz8MdbLPefTLn+TwIkk/bRyW6q9059jDC7uNu574hW9E5OzRB+Wh
m9B7aFeJt4gg6D3swlCskDZxLdyOxqenfi17vQsrYmvilY+K4ve731dWf99D
Hq84NsxidzpgT8Oe4fXruLdIgK9k0le6QBZT/N4Pc18rYRFLqJGjhQ565M7f
tXUwg1C0a6J6nxXhtTkQDsgtbDycbPp+mwsaHwdxmdm7Qn3H3vkWM+6wmVWQ
/v6EJ8IFdpeUywYTv1cEyUOtwO5Fx3+qz1mJj2Z1c+cqc0EpsCvh8+m1iEjz
b5msXY+cyyHl8TO84AqR3yxryg838ZqsJYoC0DDyfWiQLwSNGlYpYe/tsN72
/sibb7swrJWUHWgiinyh7tR1m6SoXJjz+mfPHgmrU3vIh8rzayfWWhBfgzWu
yXZO5B9zJDqCE+GE38L7hZrBLwVckfv1kKeirjvhVgfCqEVj1VOeUDzOWf9W
X3cOyUPNwxbVE97NdxYgd5ecxqwwVmiv4g5ysVpG7VUYuaPc+XdTeDNX49fX
2gUnptchP1Zml/ckL7bMb1+5sIiZN7optVtotdBe7H7pefjWyiPYm6z77TSH
InIspsPYP2jgj3PRpOlaAzQ2PFf7CTOqR8228lf2cQ0rcn+wIT4MB4ovTvf3
3SE53QCEJoxvjReaorgqojeH2rw7f9BaYrau9t30h5bxL5zbw3MWuAIcptmn
5uDy2Hr1ypfzYGO52rxEfRGydpS56rgtBX2+ZQe9d40TB4ZMZSTOcuHoIx95
oXRBpHeOej2L3IOdx7qKVz0+ieIL3vlrv1zAy4V7BXzPa6Gz8CxXfb4BkiOd
1V6tNMP1lT88X06aQzRonfrhOksqX5R2Ju3y1mI7NGXPiTf28KJyeXvk22Jc
LV/RaNuDTw2UT5C+rXe0lWdXsMcv+EizfrjBY1/2ZxpXZvacCp0p2pqNfrWi
VTO0nRd3Bbq3/qKFyhuUDJ+ehZGFX5fpb2XBouiCrwtc5+MMu0kZjzYr2FIO
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
+Vm+QAOPBIgER36ZWZWI4dakJQ5rk6jvG703PYOa1zeMvv8Zfvs8ns67cDG1
VBlynZVH91xTJX2harB3OeZ610id5Fg1EfBjUUHJWm3SQ6uDpa2W/HJmTB4C
3+jNp3x2xmjKKcvZzWNK6Wb0+duJ2j8olkSf8v51Fz9z9A2tdQMhgNRTdi4h
mGss8K1LKxxbdrarP6mJQElcnkPMiii8PrXy/kgYk3d5zEcwkTswnfhkciD6
Z6bgWsAJ4gOWIxzyMxR//Eabd0Z0xHniQ1UmfboqFLc7XMZu/ccPV8D9yX7m
Q60GtGT2O/EVamHdtqY/kq1XoZ67d679AjPiv7FGuu8Xdb9nLoTH6Q0JOePP
Kn/8SD96IJKXf/L4fp3JAVi482Xb0sIwqKmI3SjOjiD+hCgUt+e++TKRSPFV
6fPbAVRPyTTbFR+CeYan6qrFkgivtZPesPUICgJnJsIcpKH38UCSl8BxtHeE
tfsKnaJ4ABbzvg9zC5yF7tbPrYoHFdDrGR3c7qqIjWlO9dx/lMm5VQvfOHW/
1kQaUX5jOakFns2Hb0Exbrz84Bumv/1W2T8tnWW+JEd4l/gA/YivMoDMAUGY
r/kw/OfKOOKHSSS9DzuJ7r8bynGGA7tOiJHz+V7SSyuO7KOaZ/jngfKtHr7G
bz0vW4r0XEtT/QuM50nnxsuT3Icq2Ytpk/OlOZ6UKsU+OGcPNRrbZ877zpQe
+2JYpfa/B4tnrfF7niX6IJdNa9k3VWaPMMube/y/DgaQPXQUbD/qv7U3iUOj
9yLfqtANKNNgj/spvRHdVRrp5y5swm7R+cUSHwWwPvPkuh1rhPHG+ccWiS07
wGXkZ2DkIoL129ne+54Tw9q41PRVTvuQd1GRdfuyg1gdUO/m9ecQ8Q9J4l6X
btZSr9MIqlTweTdPBZ5e5q1lK/SoXDaj5yi2yFHo3Jgj1bfJ6ENl9FhtFnng
dtLAAwoCCoUu9z1J31Aw4RNHoEs/UvrYNDvxIXASHwIXjozEQ3bVWuhKGW/9
c2M9Rge1Np2u48W5IEerhwJM7kF78uCKXJoQeb+2o1/D4p5Hxi7YLvFY2rNG
FHbOv4OlRiXJvkAeHSoR0c7b1eFx+8X7DbMMyRxuQbgtNqSXjznX0vvSnSHy
4vBZMR9XnMgrn8p+4Y4Uh9S2m96B6EyKUJO1CEXA6pERFWkWTHUtDDSUnw+H
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
P/zhhsAdfNc5Gjt1zA+HJf23Co35Iyr8QuvGiEDYbOgXjlULpvJljPxc2uxV
0UqFzH04fW8Wg+ZXlyUObEwk83gK9Paucq6tzCLvSx7+GIg95xYuJL6zYtjx
XAgbX/jfHFVb6moxdo/M4aVkH3cfS0Q7Fu4JKce1b098WVf89/kyip8X51MP
120CVu0X7cl5wwmuZs+vuWgz+8boPmV3wrW5jSwe/Ahd70VykT6k98uX+Fz9
qD4h+j4gAC03thj+vBcKi+uPWTe1RUGJ00fjoncC4eUnU3o3g9NMn3MyiJ6c
Sfr2siB16Z73hR3ZVN+hLu+VL2aZBei4N7r6kXERZN6a8ug+Noby5GsrrtNM
HyW93+A6zo9G3XvZZUV6T2zJOcue2iuLXnis8v6+E9kDOhOdwAVefUKhxz+6
ws0j6G/3DR/Sa+aP1w9Xlr5LCyN8+hgs9+wK+fUxnvhsk6j3je7LTqW44Yzn
x+h3XDCZqrFxQzHF/Xqn/5X/TbgW8R/qoN5kc5WTsT4Ez7i8djU1ItwUE8z3
NHU5dI7J2WZNN3/cOGxJeFM3KM4II4fmt3LsOKubAx5OCx8N4HFD0G3WS2bd
3lT+OHL1hQdrvMJxk4Vf8eJANATXrOryzIkjPXkJOLSn+Or3tgT0DH7vT9VO
JLprEqSnTVbWmyZTPgX6HjQH/a8UF/MKnUcSC2dd8yVl0sekCsNlX+c1blMD
57Hxb+8OqsPt9qklYUs1QVthOKdwoTbpX9XBny1+50tv62FBSXBewlJDcJ94
6zxSYYxv3brzRk6YwiX42htLcWvCGXEiftfbKE3It8nb7Uftzek96CHoeH1G
5dPFcIp3Xywt9S1sJhK247++r7kWA7GynUe9NP+7vkhVD03fYOpq9LnqBOKK
W7hijeUwb7Zp7qVrZ1B0YP2h7dfPwaPxxaz9MedB751VBsv6k8fyBlRQOXZs
Q+nkJRx7ZmpevFUd+2XvnBpj1YQpi/Y8Zw5tCB1RZ007qkPN/QyO5vF7W97+
rXbFx71deX6GPhBYemCxSrA/pX9KCD61VVoYSvhGYeTfhZMejEgMDb5/8H4q
CnBUaRCTSMLeIz42P1alYkES69WdX/cTDhGNPC4JTK/kme2+W4roDkzOtqTk
piX5fSdhu/C38YpUecJpOouLM42r+6sU8GDx6a8qh5SQpLb/otOHC+C57WgR
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
//8PCGAByQ==
      "]}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["SparseArray",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["20500", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"41", ",", "41", ",", "25"}], "}"}], 
                    "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[
               RasterBox[
               SparseArray[
                Automatic, {10, 10}, 0.93, {
                 1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                   10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                  0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
               AspectRatio -> 1, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], Frame -> True, FrameTicks -> None, 
               FrameStyle -> Directive[
                 Opacity[0.5], 
                 Thickness[Tiny], 
                 RGBColor[0.368417, 0.506779, 0.709798]], 
               FrameLabel -> {None, None}, 
               FrameTicks -> {{None, None}, {None, None}}], 
              GridBox[{{
                 RowBox[{
                   TagBox[
                   "\"Specified elements: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["20500", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"41", ",", "41", ",", "25"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["0.4878048780487805`", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"\"", "SummaryItem"]}]}, {
                 TagBox[
                  TagBox[
                   GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "4.231`*^-11", ContentPadding -> False, FrameMargins -> 0,
                     StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "4.197`*^-11", ContentPadding -> False, FrameMargins -> 0,
                     StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "3.841`*^-11", ContentPadding -> False, FrameMargins -> 0,
                     StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "4"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "3.417`*^-11", ContentPadding -> False, FrameMargins -> 0,
                     StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    SparseArray[
    Automatic, {41, 41, 25}, 0, {
     1, {{0, 1000, 1975, 2925, 3850, 4750, 5625, 6475, 7300, 8100, 8875, 9625,
        10350, 11050, 11725, 12375, 13000, 13600, 14175, 14725, 15250, 15750, 
       16225, 16675, 17100, 17500, 17875, 18225, 18550, 18850, 19125, 19375, 
       19600, 19800, 19975, 20125, 20250, 20350, 20425, 20475, 20500, 
       20500}, CompressedData["
1:eJzt1UeyI2kVhuHK33tv5VM+d0OwhN4A+58hRgwIAhq6qsuc0R0prpR5vvdZ
f/vbX39DX758KX/58uUff9GCEMKIIIoY4kggiRTSyCCLHPIooIgSyqigihrq
aKCJF4wwxgRTzDDHAkussMYGW+ywxwFHnHDGBVfccMcDT7IQRDAhhBJGOBFE
EkU0McQSRzwJJJJEMimkkkY6GWTShSKKKaGUMsqpoJIqqqmhljrqaaCRJppp
oZU22umgky0MMcwIo4wxzgSTTDHNDLPMMc8CiyyxzAqrrLHOBpt84YhjTjjl
jHMuuOSKa2645Y57HnjkiWdeeOWNdz74FItAAgsiqGCCCyGkUEILI6xwwosg
okgiiyKqaKKLIaZcJJJYEkklk1wKKaWSWhpppZNeBhllklkWWWWTXQ451aKQ
woooqpjiSiiplNLKKKuc8iqoqJLKqqiqmupqqKkXjTTWRFPNNNdCS6201kZb
7bTXQUeddNZFV91010NPsxhksCGGGma4EUYaZbQxxhpnvAkmmmSyKaaaZroZ
ZtrFIostsdQyy62w0iqrrbHWOuttsNEmm22x1Tbb7bDTLQ457IijjjnuhJNO
Oe2Ms84574KLLrnsiquuue6Gm37xyGNPPPXMcy+89Mprb7z1znsffPTJZ198
9c13P/wMS0ABBxJoYIEHEWRQQQcTbHDBhxBiSCGHEmpooYcRZlwiijiSSCOL
PIooo4o6mmijiz6GGGOKOZZYY4s9jjjTklDCiSSaWOJJJJlU0skkm1zyKaSY
UsqppJpa6mmkmZeMMs4k08wyzyLLrLLOJtvsss8hx5xyziXX3HLPI8+yFFRw
IYUWVngRRRZVdDHFFld8CSWWVHIppZZWehll1qWiiiuptLLKq6iyqqqrqba6
6muosaaaa6m1ttrrqLMtDTXcSKONNd5Ek0013UyzzTXfQosttdxKq6213kab
femo40467azzLrrsqutuuu2u+x567KnnXnrtrfc++hzLQAMPMuhggw8x5FBD
DzPscMOPMOJII48y6mijjzHmXOYnKPMz+PkZ5PwMZn4Oen4Obn4OYn5e2Pw8
0Pn5wfPzhebnA7tlh3Z4R3Z0x3Z8J3Zyp3Z6Z3Z253Z+F3Zxl3Z5V3Z113Z9
N3Zzv+zRHu/Jnu7Znu/FXu7VXu/N3u7d3u/DPu7TPu/Lvu7bvu/Hfh6WAzrg
AznQAzvwgzjIgzrogznYgzv4QzjEQzrkQznUQzv0wzjM43JER3wkR3pkR34U
R3lUR300R3t0R38Mx3hMx3wsx3psx34cx3laTuiET+RET+zET+IkT+qkT+Zk
T+7kT+EUT+mUT+VUT+3UT+M0z8sZnfGZnOmZnflZnOVZnfXZnO3Znf05nOM5
nfO5nOu5nft5nOdluaALvpALvbALv4iLvKiLvpiLvbiLv4RLvKRLvpRLvbRL
v4zLXJcVrXglK13ZylexylWtejWrXd3q17DGNa15LWtd29rXsc7rckVXfCVX
emVXfhVXeVVXfTVXe3VXfw3XeE3XfC3Xem3Xfh3XeVtu6IZv5EZv7MZv4iZv
6qZv5mZv7uZv4RZv6ZZv5VZv7dZv4zbvyx3d8Z3c6Z3d+V3c5V3d9d3c7d3d
/T3c4z3d873c673d+33c52N5oAd+kAd9sAd/iId8qId+mId9uId/hEd8pEd+
lEd9tEd/jMd8Lk/0xE/ypE/25E/xlE/11E/ztE/39M/wjM/0zM/yrM/27M/x
nK/lhV74RV70xV78JV7ypV76ZV725V7+FV7xlV75VV711V79NV7zvbzRG7/J
m77Zm7/FW77VW7/N277d27/DO77TO7/Lu77bu7/He27Lhja8kY1ubOOb2OSm
Nr2ZzW5u81vY4pa2vJWtbm3r29hAZ9AZdAadQWfQGXT+7nQGa8FasBasBWvB
WrD261oLcoKcICfICXKCnCDn75ETHAQHwUFwEBwEB39lB0E1UA1UA9VANVDt
51ENjAKjwCgwCowCo75Xo0AcEAfEAXFAHBDn24gDfoAf4Af4AX6AH/+LH6AB
aAAagAagAWiwQduh7dB2aDu0/SdsO5QaSg2lhlJDqb/3UkN3obvQXegudPfb
dhcqChWFikJFoaL/T0WhidBEaCI0EZr4zyZC4aBwUDgo3M9bOOgV9Ap6Bb36
UXoF9YH6QH2gPn9OfaAl0BJoCbTkj2gJlAHKAGWAMvxrGWDnsHPY+c+/c1gt
rBZW+6OtFjYIG4QN/rkbhEXBomBRf+SiYB+wD9jHv98HXDtc+69z7XC7cLs/
6u3CJcIlfh+XCHcFd/U17gquBK7kP18JvPNf753DG/zR3yC8j+/rfcDT/ZpP
F57Vf/+sft1f/rP8ju/zW32L//H7P/F3vKPV9w==
       "]}, CompressedData["
1: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
qtd3DEHf856ilKApvl4eQXmNHrf5F2/sywkFmtEF0SbzdmSZlJSye7kLLV7V
TpKp6UXHW/Q7jqj2o/vj8a6txENIrgHx5dGOIuuzUc8efxlHArtlz19InUIK
hSKa1HlzKPb3L6fVA++Q32w7nxDbR1RgcYndf+Uzou57rWjAtAMuagkeSvGn
ASGyd7TDZRwEvubWPt162HjHfT0FmGKhrp9rUMP9cw3c49OCaqqSgkfF+vD2
CF0Ca4wxFJsMhVFGucPRmTZhPW1/cNLKKLR9WIF+iz/SED5Wg34fGxD//bcO
85ub0HAGb3zWuxYU/Oj2JfVzHSg2nCWOT7sH3W0zuDYS1I9+Bh/tnfsyROiH
bfpKX6GTqr/up+rMIre8c8zjTj9Q2Tmro+fqSTG36DjmL/Hj/rcImLT10w1o
SUPzuAkP241tLsOWj3jTQ6JF4Lbkaf/8Js3qCqDL/PRotQ+IuTf5svNkImPa
3Y6sf3NwfpWPCj4cCaBcLUIU5u0Cw5GlaLpj57oTXSUaqRS2VfavRYfXuJXv
BzShPh8Lyfkfrfi87EIZ3VK+nMefoXT2MbWAiEG06eV6hw59iesR71jBn4cO
mJp/zC/EsAOptso38Q0hgi/ioZ2WQDDVLXg/kFn9S0cO3rG762iZKMJ7yW9j
txZUCZ6PJRk/9D3BHudyHnCi977+JaYYpK0rt/Zyfzx636gndp8tCbVefN5t
kZmCvXbpKJj1cXvWySxULvV33utTHs63itF1Zy13F65ydOFsmwxXfTXu9TWi
/coHU0l3tqItH2s+o1W7U8QiCjx1bUw1lgw+qnVQMhccx+81vPh4APTTx/o9
CJEAhe/y5krUN8BGdtSsZv4W3P3lwOEvoAg8KVeA/std+G5SUJ9ebA2y8nJM
46Fu0NBcqem95IvyyViEVHYFod4ZDmv7o6HIfClp9vPVxyiKx/yh38lIVC58
eNmD+gniv/qZmZE1EV3PIk3okkpF2tVRPMY3nqJFmwGfaZSLFoqdT7zJKkJH
PZLaKNTLkOrF7vHBmh60+T45g/iG9sv9Pf4Pbe1Xub7WNdabYYWOmvgXea7n
CPtvm3xwUcznkgTbQ0F6dkS3oa+Y425KngIwcd+dePXqEYT3Nt05UOsEn+kP
Cwe32aHCYyOzb385oc+8ZHHBia4oSNRwf+5Ld3Sfp+y1/ZQXqpTvSqDa4Y9G
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
      "]}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.734849196611476*^9, {3.7348497269049296`*^9, 3.7348497313264837`*^9}, {
   3.734854233276998*^9, 3.734854236979859*^9}, 3.735041078356147*^9, {
   3.7443638426694746`*^9, 3.744363850871996*^9}, 3.808738827269311*^9, 
   3.8323229474967394`*^9, 3.8323230273472*^9, 3.83232412993009*^9, 
   3.8323246701543584`*^9, 3.8654950499703617`*^9, 3.865495737659993*^9},
 CellLabel->
  "Out[317]=",ExpressionUUID->"45c00afa-0a7e-480e-9858-0f83114702d1"]
}, Open  ]],

Cell["helper function", "Text",
 CellChangeTimes->{{3.865489863764593*^9, 3.865489865350178*^9}, 
   3.865493001568535*^9},ExpressionUUID->"e2dda161-1968-4fdd-94ed-\
9da30a2aa7a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"createRules", "[", "line_", "]"}], ":=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Rule", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"line", "[", 
          RowBox[{"[", 
           RowBox[{"{", 
            RowBox[{"3", ",", "2"}], "}"}], "]"}], "]"}], ",", "i"}], "}"}], 
       "]"}], ",", 
      RowBox[{"line", "[", 
       RowBox[{"[", 
        RowBox[{"3", "+", "i"}], "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", 
      RowBox[{
       RowBox[{"Length", "[", "line", "]"}], "-", "3"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"interpolateCollisions", "[", 
   RowBox[{"i_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"linterp", "[", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"collTemp", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "#"}], "}"}], "]"}], ",", 
       "T"}], "]"}], "&"}], ",", 
    RowBox[{
     RowBox[{"collUL", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "All"}], "]"}], "]"}], ",", 
    RowBox[{"{", "2", "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.733733935186346*^9, 3.733734051062426*^9}, {
  3.865493448253767*^9, 3.86549344847478*^9}},
 CellLabel->"In[92]:=",ExpressionUUID->"a8860b84-0a77-4ec0-a8e6-92b40e6d9c90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"createRules", "[", 
  RowBox[{
   RowBox[{"collrates", "[", "\"\<CO\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.733734030655961*^9, 3.733734037202953*^9}, {
  3.8323246973751574`*^9, 3.8323246989392595`*^9}},
 CellLabel->
  "In[318]:=",ExpressionUUID->"b5d64200-ac2a-45db-8f5a-8284b837dfc4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "1"}], "}"}], "\[Rule]", "2.954`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "2"}], "}"}], "\[Rule]", "3.251`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "\[Rule]", "3.302`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "4"}], "}"}], "\[Rule]", "3.249`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "5"}], "}"}], "\[Rule]", "3.257`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "6"}], "}"}], "\[Rule]", "3.294`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "7"}], "}"}], "\[Rule]", "3.337`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "8"}], "}"}], "\[Rule]", "3.38`*^-11"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "9"}], "}"}], "\[Rule]", "3.415`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "10"}], "}"}], "\[Rule]", "3.445`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "11"}], "}"}], "\[Rule]", "3.469`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "12"}], "}"}], "\[Rule]", "3.487`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "13"}], "}"}], "\[Rule]", "3.532`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "14"}], "}"}], "\[Rule]", "3.529`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "15"}], "}"}], "\[Rule]", "3.492`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "16"}], "}"}], "\[Rule]", "3.45`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "17"}], "}"}], "\[Rule]", "3.421`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "18"}], "}"}], "\[Rule]", "3.404`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "19"}], "}"}], "\[Rule]", "3.396`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "20"}], "}"}], "\[Rule]", "3.394`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "21"}], "}"}], "\[Rule]", "3.395`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "22"}], "}"}], "\[Rule]", "3.399`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "23"}], "}"}], "\[Rule]", "3.409`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "24"}], "}"}], "\[Rule]", "3.598`*^-11"}], 
   ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "25"}], "}"}], "\[Rule]", "3.818`*^-11"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.733734039390414*^9, 3.7337340522030478`*^9}, 
   3.734434269285596*^9, 3.7346820011167393`*^9, 3.734685237323819*^9, 
   3.734685703922179*^9, 3.735041078425151*^9, {3.8323229400054593`*^9, 
   3.832322943422638*^9}, 3.832324136813249*^9, {3.832324692745755*^9, 
   3.832324700150118*^9}, 3.832324968826804*^9, 3.832496990376042*^9, 
   3.8654950499998612`*^9, 3.8654957409987183`*^9},
 CellLabel->
  "Out[318]=",ExpressionUUID->"c8967634-450a-439f-807f-e6403bdaf82b"]
}, Open  ]],

Cell[TextData[{
 "Compute energy level population in case of local thermal equilibrium LTE at \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "=", 
    RowBox[{"10", "K"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "32805ea9-f7cd-4559-bf0b-11c728023796"]
}], "Text",
 CellChangeTimes->{{3.8654899324977646`*^9, 3.865489945228363*^9}, {
  3.865495884170096*^9, 
  3.8654958908033752`*^9}},ExpressionUUID->"f5a1ffd7-6edb-4c2b-9391-\
1d19509d768b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"setLTE", "[", "\"\<CO\>\"", "]"}], "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.733749094307437*^9, 3.7337491135107613`*^9}, {
  3.7348547271916046`*^9, 3.734854730222698*^9}},
 CellLabel->
  "In[354]:=",ExpressionUUID->"bda5d4f6-b75d-49a3-995b-098fafd76471"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.2520083848428495`", ",", "0.43478897235129277`", ",", 
   "0.2396751930541738`", ",", "0.06382776817679581`", ",", 
   "0.008978748519339896`", ",", "0.000690661072897131`", ",", 
   "0.000029551948657223908`", ",", "7.10309535723684`*^-7", ",", 
   "9.64972663855187`*^-9", ",", "7.440413392257214`*^-11", ",", 
   "3.265912360018697`*^-13", ",", "8.178941680742875`*^-16", ",", 
   "1.1706807655522435`*^-18", ",", "9.590737130121709`*^-22", ",", 
   "4.502545640657452`*^-25", ",", "1.212526742305864`*^-28", ",", 
   "1.874809946964888`*^-32", ",", "1.6657968902159294`*^-36", ",", 
   "8.511455846274622`*^-41", ",", "2.5028230364491`*^-45", ",", 
   "4.238377491692312`*^-50", ",", "4.13617700535399`*^-55", ",", 
   "2.3276591930635287`*^-60", ",", "7.55855517696931`*^-66", ",", 
   "1.4172631169003324`*^-71", ",", "1.5354176777024713`*^-77", ",", 
   "9.617378298988958`*^-84", ",", "3.4851746893367694`*^-90", ",", 
   "7.311742256517029`*^-97", ",", "8.886905207112087`*^-104", ",", 
   "6.2619306036804574`*^-111", ",", "2.5597512335172014`*^-118", ",", 
   "6.074804254149841`*^-126", ",", "8.375965051718197`*^-134", ",", 
   "6.714691094610492`*^-142", ",", "3.1321548462562485`*^-150", ",", 
   "8.508014117391689`*^-159", ",", "1.3468363259074728`*^-167", ",", 
   "1.2435772357098683`*^-176", ",", "6.70283261580861`*^-186", ",", 
   "2.1107590506587624`*^-195"}], "}"}]], "Output",
 CellChangeTimes->{3.733749114276349*^9, 3.7344342800192003`*^9, 
  3.7346820119597073`*^9, 3.734685241511015*^9, 3.7348547308944736`*^9, 
  3.734854809281349*^9, 3.7350410784785266`*^9, 3.7366793689745116`*^9, 
  3.7375437604208636`*^9, 3.832322966050975*^9, 3.8323247289659605`*^9, 
  3.8654950500314283`*^9, 3.8654958693216906`*^9},
 CellLabel->
  "Out[354]=",ExpressionUUID->"e640baa3-0d96-4d23-a57e-cc61a25d3da6"]
}, Open  ]],

Cell["\<\
Compute non-LTE excitation. 

Input variables:\
\>", "Text",
 CellChangeTimes->{{3.86548997502748*^9, 
  3.8654899924824677`*^9}},ExpressionUUID->"933ad66d-c14b-477c-bdcc-\
0f29a07dba14"],

Cell["T\t\tgas temperature in K", "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.8654900091105137`*^9}, 
   3.8654978459347754`*^9},ExpressionUUID->"c2ad30a6-68f2-4fb7-9389-\
2a756a204500"],

Cell[TextData[{
 "colMol\t\tcolumn density of the considered molecule in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["cm", 
    RowBox[{"-", "2"}]], TraditionalForm]],ExpressionUUID->
  "ad733490-bbc7-4dea-9f98-dc161fc70e84"]
}], "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.8654900338824587`*^9}, 
   3.8654978464975767`*^9},ExpressionUUID->"34a03f36-0e4a-43c7-9256-\
12c730ac5a0b"],

Cell["tauIn\t\toptical depth of the molecular emission", "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.8654900605215626`*^9}, 
   3.8654978470822153`*^9},ExpressionUUID->"0211f44f-be83-4bb5-9b84-\
7159bd3fe9ae"],

Cell["mass\t\tmolecule mass of considered molecule in amu", "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.8654900931097903`*^9}, 
   3.865497848327775*^9},ExpressionUUID->"8cce04c9-176c-464b-9c91-\
8c952bdd1a53"],

Cell[TextData[{
 "nH2\t\tlocal number density of collision partner ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "2"], TraditionalForm]],ExpressionUUID->
  "61dcab6a-2b71-4e68-83c4-34849cfd694e"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]], ")"}], TraditionalForm]],ExpressionUUID->
  "59a2a17d-4769-4d4c-aa80-45810d3d3c82"]
}], "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.865490140983345*^9}, 
   3.865497848965186*^9},ExpressionUUID->"d96e55de-898e-4beb-b9b8-\
60a755945c2b"],

Cell[TextData[{
 "npH2\t\tlocal number density of collision partner para ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "2"], TraditionalForm]],ExpressionUUID->
  "ef87a9ac-ec70-4874-bec1-501ce11b99a0"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]], ")"}], TraditionalForm]],ExpressionUUID->
  "c1389a0c-c023-4353-b57f-62b796266966"],
 "  "
}], "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.865490153847907*^9}, 
   3.8654978499706707`*^9},ExpressionUUID->"c66626be-f380-4fff-a04a-\
bb5f584786df"],

Cell[TextData[{
 "noH2\t\tlocal number density of collision partner ortho ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "2"], TraditionalForm]],ExpressionUUID->
  "dbedbaf9-ace0-4474-85ff-b5176ab74b55"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]], ")"}], TraditionalForm]],ExpressionUUID->
  "c65a06ff-58c5-429d-a1f6-ce148eef5ebd"],
 "  "
}], "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.865490153847907*^9}, {
   3.865493028128893*^9, 3.865493031064785*^9}, 
   3.8654978505699825`*^9},ExpressionUUID->"cc102539-798a-49a4-aa1a-\
5575a6fc4c7a"],

Cell[TextData[{
 "ne\t\tlocal number density of collision partner electrons ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]], ")"}], TraditionalForm]],ExpressionUUID->
  "df88ec09-7205-45d8-bf8b-57ee18aa0bd5"],
 "  "
}], "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.865490153847907*^9}, {
   3.8654930396518145`*^9, 3.865493044970411*^9}, 
   3.8654978512751417`*^9},ExpressionUUID->"6c6bd002-57e7-4f21-af3c-\
a1cca74008a2"],

Cell[TextData[{
 "nH\t\tlocal number density of collision partner H ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]], ")"}], TraditionalForm]],ExpressionUUID->
  "30a476b7-21eb-4f7d-8d3a-a3f326be1ca8"],
 "  "
}], "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.865490153847907*^9}, {
   3.8654930396518145`*^9, 3.865493054288836*^9}, 
   3.8654978520697403`*^9},ExpressionUUID->"2cf07a86-dc4c-455a-9333-\
342bd1ad2c3f"],

Cell[TextData[{
 "nHe\t\tlocal number density of collision partner He ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]], ")"}], TraditionalForm]],ExpressionUUID->
  "313bf90e-0d9a-4578-9157-112e3623e7c3"],
 "  "
}], "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.865490153847907*^9}, {
   3.8654930396518145`*^9, 3.8654930631170797`*^9}, 
   3.8654978527375755`*^9},ExpressionUUID->"f926bb02-4d1f-4b6c-bf69-\
73bb07b834df"],

Cell[TextData[{
 "nHp\t\tlocal number density of collision partner ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["H", "+"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fb47d016-75d4-4173-a3ab-5a2ed5f09cc1"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]], ")"}], TraditionalForm]],ExpressionUUID->
  "2ed0425c-c44b-4aa7-8f11-01b18bb54816"],
 "  "
}], "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.865490153847907*^9}, {
   3.8654930396518145`*^9, 3.865493072908213*^9}, 
   3.8654978534203005`*^9},ExpressionUUID->"eaf7a156-b1b3-471a-9ce6-\
a468ef2cb592"],

Cell[TextData[{
 "widthdv\tDoppler line width ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"km", " ", 
     SuperscriptBox["s", 
      RowBox[{"-", "1"}]]}], ")"}], TraditionalForm]],ExpressionUUID->
  "a79331f5-b61b-4713-b642-9a30194cd498"],
 "  "
}], "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.865490153847907*^9}, {
  3.8654930396518145`*^9, 
  3.8654931178511267`*^9}},ExpressionUUID->"d51b7e23-9f17-4042-852f-\
03742a362853"],

Cell[TextData[{
 "Tbg\t\tbackground radiation temperature ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "K", ")"}], TraditionalForm]],ExpressionUUID->
  "b4cdd94b-5edf-48a5-ba85-29122c45728c"],
 "  "
}], "ItemParagraph",
 CellChangeTimes->{{3.86549000058734*^9, 3.865490153847907*^9}, {
   3.8654930396518145`*^9, 3.8654931386670046`*^9}, 
   3.865497854732424*^9},ExpressionUUID->"547bc57a-1901-4da8-b576-\
ebf7cc7b9644"],

Cell["\<\
Output is 
{relative level population,cooling radiation intensity,total cooling,optical \
depth from level populations}\
\>", "Text",
 CellChangeTimes->{{3.86549315416373*^9, 
  3.865493194831453*^9}},ExpressionUUID->"7b2049ad-297d-4878-b7cf-\
66db1ae97204"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "calculateExcitation", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"calculateExcitation", "[", "spec_String", "]"}], "[", 
   RowBox[{
    RowBox[{"T_", ":", "10."}], ",", 
    RowBox[{"colMol_", ":", 
     SuperscriptBox["10", "16"]}], ",", "tauIn_", ",", "mass_", ",", 
    RowBox[{"nH2_", ":", "0."}], ",", 
    RowBox[{"npH2_", ":", "0."}], ",", 
    RowBox[{"noH2_", ":", "0."}], ",", 
    RowBox[{"ne_", ":", "0."}], ",", 
    RowBox[{"nH_", ":", "0"}], ",", 
    RowBox[{"nHe_", ":", "0."}], ",", 
    RowBox[{"nHp_", ":", "0."}], ",", 
    RowBox[{"widthdv_", ":", "1."}], ",", 
    RowBox[{"Tbg_", ":", "2.73"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dens", "=", 
       RowBox[{"{", 
        RowBox[{
        "nH2", ",", "npH2", ",", "noH2", ",", "ne", ",", "nH", ",", "nHe", 
         ",", "nHp"}], "}"}]}], ",", "pop", ",", "collULTot", ",", 
      "collLUTot", ",", "collTot", ",", "diags", ",", "dv", ",", "pretau", 
      ",", "Ibg", ",", "lcool", ",", "tau", ",", "totMat", ",", "bet", ",", 
      "uprate", ",", "downrate", ",", "bvec", ",", "popnew", ",", "iterate", 
      ",", "it"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"pop", "=", 
      RowBox[{
       RowBox[{"setLTE", "[", "spec", "]"}], "[", "T", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"collULTot", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"collTemp", "[", "spec", "]"}], "[", 
            RowBox[{"[", "#", "]"}], "]"}], "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"SparseArray", "@", 
           RowBox[{
            RowBox[{"interpolateCollisions", "[", "spec", "]"}], "[", 
            RowBox[{"#", ",", "T"}], "]"}]}], ",", 
          RowBox[{"{", "}"}]}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"collTemp", "[", "spec", "]"}], "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"collLUTot", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"Transpose", "[", "#", "]"}], ")"}], "*", 
             RowBox[{"gg", "[", "spec", "]"}], "*", 
             RowBox[{"Exp", "[", 
              RowBox[{
               RowBox[{"de", "[", "spec", "]"}], "/", "T"}], "]"}]}], "]"}], 
           ",", 
           RowBox[{"{", "}"}]}], "]"}], "&"}], ",", "collULTot", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"diags", "=", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"SparseArray", "[", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Thread", "[", 
               RowBox[{
                RowBox[{"Range", "[", 
                 RowBox[{"Length", "[", 
                  RowBox[{"levels", "[", "spec", "]"}], "]"}], "]"}], 
                "\[Rule]", " ", 
                RowBox[{"-", 
                 RowBox[{"Total", "/@", 
                  RowBox[{"Transpose", "[", "#", "]"}]}]}]}], "]"}], "/.", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"a_", ",", "b_"}], "]"}], "\[RuleDelayed]", 
               RowBox[{"Rule", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"a", ",", "a"}], "}"}], ",", "b"}], "]"}]}]}], 
             ")"}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}], "&"}], ",", 
        RowBox[{"(", 
         RowBox[{"collULTot", "+", "collLUTot"}], ")"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"collTot", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"collULTot", "+", "collLUTot", "+", "diags"}], ")"}], "/.", 
       RowBox[{
        RowBox[{"{", "}"}], "\[Rule]", "0."}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"collTot", "=", 
      RowBox[{"Total", "@", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"collTot", "*", "dens"}], ",", "0."}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"collTotsav", "=", "collTot"}], ";", "\[IndentingNewLine]", 
     RowBox[{"dv", "=", 
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["10", "5"], "*", "widthdv"}], ")"}], "2"], "+", 
        RowBox[{"(", 
         FractionBox[
          RowBox[{"2", " ", "k", " ", "T"}], 
          RowBox[{"AMU", "*", "mass"}]], ")"}]}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pretau", "=", 
      FractionBox[
       RowBox[{
        RowBox[{"ta", "[", "spec", "]"}], "*", 
        SuperscriptBox["c", "3"], "*", "colMol"}], 
       RowBox[{"8", " ", "\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"tf", "[", "spec", "]"}], "3"], "dv"}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ibg", "=", 
      RowBox[{"Blackbody", "[", 
       RowBox[{"Tbg", ",", 
        RowBox[{"tf", "[", "spec", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"it", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"iterate", "[", "populIn_", "]"}], ":=", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"popul", "=", 
          FractionBox["populIn", 
           RowBox[{"Total", "[", "populIn", "]"}]]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tau", "=", 
          RowBox[{"pretau", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"popul", "[", 
               RowBox[{"[", 
                RowBox[{"tl", "[", "spec", "]"}], "]"}], "]"}], "*", 
              FractionBox[
               RowBox[{
                RowBox[{"g", "[", "spec", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"tu", "[", "spec", "]"}], "]"}], "]"}], 
               RowBox[{
                RowBox[{"g", "[", "spec", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"tl", "[", "spec", "]"}], "]"}], "]"}]]}], "-", 
             RowBox[{"popul", "[", 
              RowBox[{"[", 
               RowBox[{"tu", "[", "spec", "]"}], "]"}], "]"}]}], ")"}]}]}], 
         ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"tau", "=", 
          RowBox[{"tau", "+", "tauIn"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"bet", "=", 
          RowBox[{"beta", "[", "tau", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"totMat", "=", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{"levels", "[", "spec", "]"}], "]"}], ",", 
              RowBox[{"Length", "[", 
               RowBox[{"levels", "[", "spec", "]"}], "]"}]}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"totMat", "=", "collTot"}], ";"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"lcool", "=", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"transitions", "[", "spec", "]"}], "]"}]}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"uprate", "=", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Ibg", "[", 
                 RowBox[{"[", "#", "]"}], "]"}], 
                RowBox[{"(", 
                 RowBox[{"bet", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ")"}], 
                RowBox[{
                 RowBox[{"tblu", "[", "spec", "]"}], "[", 
                 RowBox[{"[", "#", "]"}], "]"}]}], ")"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"downrate", "=", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"ta", "[", "spec", "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}], 
                 RowBox[{"bet", "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}], "+", 
                RowBox[{
                 RowBox[{"Ibg", "[", 
                  RowBox[{"[", "#", "]"}], "]"}], 
                 RowBox[{"(", 
                  RowBox[{"bet", "[", 
                   RowBox[{"[", "#", "]"}], "]"}], ")"}], 
                 RowBox[{
                  RowBox[{"tbul", "[", "spec", "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}]}], ")"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"totMat", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"tl", "[", "spec", "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"tl", "[", "spec", "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "]"}], "-=", 
              "uprate"}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"totMat", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"tu", "[", "spec", "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"tl", "[", "spec", "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "]"}], "+=", 
              "uprate"}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"totMat", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"tl", "[", "spec", "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"tu", "[", "spec", "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "]"}], "+=", 
              "downrate"}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"totMat", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"tu", "[", "spec", "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"tu", "[", "spec", "]"}], "[", 
                  RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "]"}], "-=", 
              "downrate"}], ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"lcool", "[", 
               RowBox[{"[", "#", "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{
                RowBox[{"tf", "[", "spec", "]"}], "[", 
                RowBox[{"[", "#", "]"}], "]"}], "h", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"popul", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"tu", "[", "spec", "]"}], "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], "*", 
                  "downrate"}], "-", 
                 RowBox[{
                  RowBox[{"popul", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"tl", "[", "spec", "]"}], "[", 
                    RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], "*", 
                  "uprate"}]}], ")"}]}]}]}], "}"}], "&"}], "/@", 
          RowBox[{"Range", "[", 
           RowBox[{"Length", "[", 
            RowBox[{"transitions", "[", "spec", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"totMat", "=", 
          RowBox[{"totMat", "+", 
           RowBox[{"Normal", "[", "collTot", "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"totMat", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "=", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"1.", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"levels", "[", "spec", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"totMat", "=", 
          RowBox[{"SparseArray", "[", "totMat", "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"bvec", "=", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"0", ",", 
            RowBox[{"Length", "[", 
             RowBox[{"levels", "[", "spec", "]"}], "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"bvec", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}], "=", "1."}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"testMat", "=", "totMat"}], ";", 
         RowBox[{"testbvec", "=", "bvec"}], ";", "\[IndentingNewLine]", 
         RowBox[{"popnew", "=", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"Abs", "@", "#"}], ",", 
              SuperscriptBox["10", 
               RowBox[{"-", "30"}]]}], "]"}], "&"}], "/@", 
           RowBox[{"LinearSolve", "[", 
            RowBox[{"totMat", ",", "bvec"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"it", "++"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"it", "<", "100"}], ",", "\[IndentingNewLine]", "popnew", 
           ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"it", "<", "200"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"popnew", "*", "0.01"}], "+", 
              RowBox[{"0.99", "popul"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"popnew", "*", "0.001"}], "+", 
              RowBox[{"0.999", "popul"}]}]}], "]"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"pop", "=", 
      RowBox[{"Quiet", "[", 
       RowBox[{
        RowBox[{"FixedPoint", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"iterate", "[", "#", "]"}], "&"}], ",", "pop", ",", "1000",
           ",", 
          RowBox[{"SameTest", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Not", "[", 
              RowBox[{"Or", "@@", 
               RowBox[{"convTest", "[", 
                RowBox[{"#1", ",", "#2", ",", "8"}], "]"}]}], "]"}], "&"}], 
            ")"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"Power", "::", "\"\<infy\>\""}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"collTot", "//", "Normal"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"{", 
         RowBox[{"tauIn", ",", "pretau", ",", "pop", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"pop", "[", 
              RowBox[{"[", 
               RowBox[{"tl", "[", "spec", "]"}], "]"}], "]"}], "*", 
             FractionBox[
              RowBox[{
               RowBox[{"g", "[", "spec", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"tu", "[", "spec", "]"}], "]"}], "]"}], 
              RowBox[{
               RowBox[{"g", "[", "spec", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"tl", "[", "spec", "]"}], "]"}], "]"}]]}], "-", 
            RowBox[{"pop", "[", 
             RowBox[{"[", 
              RowBox[{"tu", "[", "spec", "]"}], "]"}], "]"}]}], ")"}]}], 
         "}"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pop", "/", 
        RowBox[{"Total", "[", "pop", "]"}]}], ",", "lcool", ",", 
       RowBox[{"Total", "@", 
        RowBox[{"Abs", "@", "lcool"}]}], ",", "tau"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.733748725892893*^9, 3.7337489455741777`*^9}, {
   3.7337491666987467`*^9, 3.7337491764800587`*^9}, {3.733749209121009*^9, 
   3.733749218214817*^9}, {3.733749254543269*^9, 3.7337492559182577`*^9}, 
   3.733804264588769*^9, {3.733820497145079*^9, 3.7338205567815905`*^9}, {
   3.7338208616619673`*^9, 3.7338209022092113`*^9}, 3.7338214352921553`*^9, {
   3.733821943642584*^9, 3.733821991611801*^9}, {3.733822036487212*^9, 
   3.7338220488154287`*^9}, {3.733822156550809*^9, 3.733822156878937*^9}, {
   3.7338224967033463`*^9, 3.733822511109696*^9}, {3.7338236475307465`*^9, 
   3.733823651390185*^9}, {3.7338242237544374`*^9, 3.733824231207567*^9}, {
   3.733824278051017*^9, 3.733824317316975*^9}, {3.7338243799425406`*^9, 
   3.733824386208256*^9}, {3.733824448724388*^9, 3.733824654601266*^9}, {
   3.73443520282064*^9, 3.7344352075546465`*^9}, {3.734436005659791*^9, 
   3.734436078390956*^9}, {3.7346821090777197`*^9, 3.7346821975869813`*^9}, {
   3.7346823072640495`*^9, 3.7346823210130568`*^9}, {3.734682445199622*^9, 
   3.734682553066867*^9}, {3.7346826216338215`*^9, 3.734682624071147*^9}, {
   3.7346827295763516`*^9, 3.734682740169338*^9}, 3.734683492221285*^9, {
   3.734683810895399*^9, 3.734683829315895*^9}, {3.7346839149503703`*^9, 
   3.734683991819846*^9}, {3.7346840372339015`*^9, 3.7346840630445747`*^9}, {
   3.734685130335949*^9, 3.7346851355855665`*^9}, 3.734685272172967*^9, {
   3.734685752871792*^9, 3.7346857572308645`*^9}, {3.7346858324598274`*^9, 
   3.734685874597418*^9}, {3.7346859161100893`*^9, 3.7346859258850355`*^9}, 
   3.7346861490263057`*^9, {3.73468631734234*^9, 3.7346863473245883`*^9}, {
   3.7346923009616327`*^9, 3.7346923326781254`*^9}, 3.734692510796797*^9, {
   3.734692629444525*^9, 3.7346926418030095`*^9}, {3.73469438314403*^9, 
   3.7346944111732426`*^9}, 3.7346944943391347`*^9, 3.7346946792517395`*^9, 
   3.7347600112941103`*^9, {3.734760273837734*^9, 3.734760401609803*^9}, {
   3.7347605595552206`*^9, 3.7347605865220327`*^9}, {3.734760695147485*^9, 
   3.734760700318962*^9}, {3.7347607918123894`*^9, 3.73476079456219*^9}, {
   3.734760855057871*^9, 3.7347608562140384`*^9}, 3.7347608865399847`*^9, {
   3.7347729970929046`*^9, 3.7347729974678698`*^9}, {3.734773098163763*^9, 
   3.7347730996636534`*^9}, {3.734773338476466*^9, 3.7347734045498457`*^9}, {
   3.7347734996992607`*^9, 3.734773500183589*^9}, 3.7347735326812887`*^9, 
   3.734773585318099*^9, {3.7347736627344093`*^9, 3.734773698747448*^9}, {
   3.7347738136128683`*^9, 3.7347738176438255`*^9}, {3.7347740057240677`*^9, 
   3.7347740823153296`*^9}, {3.7347741753399167`*^9, 
   3.7347741788865366`*^9}, {3.7347742316071777`*^9, 
   3.7347742734233522`*^9}, {3.734774305030455*^9, 3.7347746307517977`*^9}, {
   3.7347746740768185`*^9, 3.7347747412595153`*^9}, {3.7347748668754854`*^9, 
   3.7347748674379196`*^9}, {3.734775019735343*^9, 3.734775030172065*^9}, {
   3.7347751184782314`*^9, 3.7347751785676537`*^9}, {3.7347752249237046`*^9, 
   3.7347753052460575`*^9}, {3.7347753370093966`*^9, 
   3.7347753458368845`*^9}, {3.73477569667007*^9, 3.734775755478365*^9}, {
   3.7347759973220353`*^9, 3.7347760071494503`*^9}, {3.7347760857219296`*^9, 
   3.7347762322270374`*^9}, {3.7347762929414206`*^9, 
   3.7347763202832265`*^9}, {3.7347763529864798`*^9, 3.734776353658303*^9}, {
   3.7347763932987375`*^9, 3.734776396470358*^9}, {3.734776526351651*^9, 
   3.734776555537082*^9}, {3.7347767186034627`*^9, 3.7347767302589016`*^9}, {
   3.7347770208238907`*^9, 3.7347770283545713`*^9}, {3.734777059008647*^9, 
   3.734777060602257*^9}, 3.7347775989911776`*^9, {3.734777832796714*^9, 
   3.7347778432178383`*^9}, {3.734777900104351*^9, 3.734777906025827*^9}, {
   3.7347779649686594`*^9, 3.7347779974594293`*^9}, {3.734778350802847*^9, 
   3.7347783558962603`*^9}, {3.7347784157899237`*^9, 
   3.7347784481553383`*^9}, {3.73484856873849*^9, 3.734848632812029*^9}, {
   3.7348486650909595`*^9, 3.734848732023632*^9}, {3.734848790378149*^9, 
   3.7348488103610992`*^9}, 3.7348488505300794`*^9, {3.734849873282016*^9, 
   3.734849880703295*^9}, {3.7348499131853323`*^9, 3.734849963418749*^9}, {
   3.7348542615093603`*^9, 3.7348542650091085`*^9}, 3.7348543600804033`*^9, {
   3.7348544298536053`*^9, 3.734854480256233*^9}, {3.734854840091649*^9, 
   3.7348548439975863`*^9}, {3.7348596337577786`*^9, 3.734859657521696*^9}, {
   3.735034798448389*^9, 3.7350348023074703`*^9}, {3.7356407255066423`*^9, 
   3.7356407348809495`*^9}, {3.735984902636957*^9, 3.7359849029148045`*^9}, {
   3.7362388585281253`*^9, 3.736238862267643*^9}, {3.736587606613477*^9, 
   3.736587621628622*^9}, {3.7365876895218906`*^9, 3.7365876898543644`*^9}, {
   3.7377793132181873`*^9, 3.7377793134032497`*^9}, {3.738042513315161*^9, 
   3.7380425255174074`*^9}, {3.7380425805760283`*^9, 3.738042583372713*^9}, {
   3.738042669804135*^9, 3.7380427519546275`*^9}, 3.738043850898848*^9, {
   3.738313253357331*^9, 3.7383133016639833`*^9}, 3.7383143992037287`*^9, {
   3.7383144479784355`*^9, 3.738314448072151*^9}, {3.7383224641668043`*^9, 
   3.738322488666606*^9}, {3.7383229419018545`*^9, 3.7383229475577364`*^9}, {
   3.7383229789427323`*^9, 3.738323014545441*^9}, {3.7383231839821463`*^9, 
   3.7383232244178624`*^9}, {3.738323290038035*^9, 3.7383232941627293`*^9}, {
   3.738323413761625*^9, 3.738323417620728*^9}, {3.738324107300543*^9, 
   3.738324115176773*^9}, 3.738329302335927*^9, {3.7383293418102255`*^9, 
   3.73832935832742*^9}, {3.738329434014123*^9, 3.7383294388120985`*^9}, {
   3.7383294699558945`*^9, 3.738329473799576*^9}, {3.7383296068928704`*^9, 
   3.7383296092490206`*^9}, 3.7383297656551175`*^9, {3.7383298325440598`*^9, 
   3.738329839140663*^9}, 3.7383299470294433`*^9, {3.7383299902538176`*^9, 
   3.7383299932223296`*^9}, 3.7383336085463023`*^9, {3.738333653866942*^9, 
   3.7383336656188116`*^9}, {3.738333952280956*^9, 3.738333960923476*^9}, {
   3.738336459330455*^9, 3.7383364697066717`*^9}, {3.7383377735831623`*^9, 
   3.738337775473626*^9}, {3.7383900181359296`*^9, 3.7383900223557944`*^9}, {
   3.738400475312106*^9, 3.738400479718066*^9}, {3.738400511441828*^9, 
   3.738400513444304*^9}, {3.738574041416393*^9, 3.7385740484471474`*^9}, {
   3.8654899614584937`*^9, 3.8654899724540277`*^9}},
 CellLabel->"In[98]:=",ExpressionUUID->"28220c17-d903-434b-ba1d-c21eb4d28ab8"],

Cell["\<\
This computes the excitation temperature from the level population\
\>", "Text",
 CellChangeTimes->{{3.865493206100319*^9, 
  3.865493215416166*^9}},ExpressionUUID->"39a49b0f-3640-4469-a19c-\
6a3b2d5e55df"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"computeTex", "[", "spec_", "]"}], "[", "pop_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"de", "[", "spec", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"tu", "[", "spec", "]"}], ",", "1"}], "]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"de", "[", "spec", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"tl", "[", "spec", "]"}], ",", "1"}], "]"}], "]"}]}], ")"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"Log", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"pop", "[", 
         RowBox[{"[", 
          RowBox[{"tu", "[", "spec", "]"}], "]"}], "]"}], 
        RowBox[{"pop", "[", 
         RowBox[{"[", 
          RowBox[{"tl", "[", "spec", "]"}], "]"}], "]"}]], 
       FractionBox[
        RowBox[{
         RowBox[{"g", "[", "spec", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"tl", "[", "spec", "]"}], "]"}], "]"}], 
        RowBox[{
         RowBox[{"g", "[", "spec", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"tu", "[", "spec", "]"}], "]"}], "]"}]]}], "]"}], ")"}], 
    RowBox[{"-", "1"}]]}]}]], "Input",
 CellChangeTimes->{{3.738314582312595*^9, 3.7383146254447374`*^9}, {
   3.738314676235053*^9, 3.73831476357952*^9}, {3.738314801585264*^9, 
   3.738314821243973*^9}, {3.7383149812708597`*^9, 3.7383149940217857`*^9}, 
   3.7383151909073744`*^9},
 CellLabel->
  "In[100]:=",ExpressionUUID->"61590923-3da2-4dde-acff-b59db1df6f92"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["H", "2"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "88bdc1cb-c250-43d0-98d6-fc98dfa9df6a"],
 " ortho to para ratio"
}], "Text",
 CellChangeTimes->{{3.8654932278426857`*^9, 
  3.865493239829465*^9}},ExpressionUUID->"5d5884b4-8cb8-4eb9-860c-\
916426d71474"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opr", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"3.0", ",", 
     RowBox[{"9.0", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "170.6"}], "/", "2000"}], "]"}]}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"scalp", "=", 
  RowBox[{"1.0", "/", 
   RowBox[{"(", 
    RowBox[{"1.0", "+", "opr"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"scalo", "=", 
  RowBox[{"1.0", "-", "scalp"}]}]}], "Input",
 CellChangeTimes->{{3.737778849963669*^9, 3.7377788658333945`*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"ac7980f0-9e87-4781-aeab-072f2fab8f06"],

Cell[BoxData["0.25`"], "Output",
 CellChangeTimes->{3.737778866087431*^9, 3.83232305252159*^9, 
  3.8323247824369783`*^9, 3.8324970561621227`*^9, 3.8654950500471325`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"6987f64d-dca0-4a30-90f7-95133c5ac626"],

Cell[BoxData["0.75`"], "Output",
 CellChangeTimes->{3.737778866087431*^9, 3.83232305252159*^9, 
  3.8323247824369783`*^9, 3.8324970561621227`*^9, 3.865495050062867*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"b8560ecb-7746-4961-9563-7cf8b7cf2572"]
}, Open  ]],

Cell["\<\
Blackbody radiation  intensity for a 2.73 K BB at the transition frequencies \
of CO\
\>", "Text",
 CellChangeTimes->{{3.8654932771340237`*^9, 
  3.865493311095929*^9}},ExpressionUUID->"1404efd5-e352-4371-8d25-\
5039e99c5105"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Blackbody", "[", 
  RowBox[{"2.73", ",", 
   RowBox[{"tf", "[", "\"\<CO\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7385667339430065`*^9, 3.7385667404581785`*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"35868084-fa2f-4b00-882e-64a9326d02e4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.4286667872812066`*^-15", ",", "3.1943881701211156`*^-15", ",", 
   "1.3997163014075`*^-15", ",", "4.365864433212042`*^-16", ",", 
   "1.1243020920550665`*^-16", ",", "2.5630664176981803`*^-17", ",", 
   "5.3719437692703`*^-18", ",", "1.0589099938694718`*^-18", ",", 
   "1.9921441741023776`*^-19", ",", "3.613128351763816`*^-20", ",", 
   "6.363134531877681`*^-21", ",", "1.093955040493436`*^-21", ",", 
   "1.8434658102745943`*^-22", ",", "3.0546291316555085`*^-23", ",", 
   "4.98966431863888`*^-24", ",", "8.05133389963599`*^-25", ",", 
   "1.2855400129042608`*^-25", ",", "2.033956034789573`*^-26", ",", 
   "3.1926978568788747`*^-27", ",", "4.977153312231452`*^-28", ",", 
   "7.712537778729389`*^-29", ",", "1.1888964581648599`*^-29", ",", 
   "1.8243887160957313`*^-30", ",", "2.7885616937501035`*^-31", ",", 
   "4.247832086146656`*^-32", ",", "6.451928461324704`*^-33", ",", 
   "9.775471363124912`*^-34", ",", "1.4780377933796392`*^-34", ",", 
   "2.2309596856208914`*^-35", ",", "3.362809037409034`*^-36", ",", 
   "5.063514333477991`*^-37", ",", "7.618446886090974`*^-38", ",", 
   "1.1456765585746934`*^-38", ",", "1.7224536811128876`*^-39", ",", 
   "2.589558246344734`*^-40", ",", "3.8939752532797457`*^-41", ",", 
   "5.857893275415767`*^-42", ",", "8.817724905195032`*^-43", ",", 
   "1.3283791008524894`*^-43", ",", "2.0031591577953538`*^-44"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7385667414737206`*^9, 3.8323247867767344`*^9, 
  3.832497060573558*^9, 3.8654950500786667`*^9, 3.865495790045841*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"d9e1937a-5d8e-4e26-b382-c1e0f74f987c"]
}, Open  ]],

Cell["LTE level population of CO assuming only 2.73 K ", "Text",
 CellChangeTimes->{{3.8654933189820385`*^9, 
  3.8654933271052217`*^9}},ExpressionUUID->"33fbeb25-364b-42d0-9048-\
99ce3c3c34e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"setLTE", "[", "\"\<CO\>\"", "]"}], "[", "2.73", "]"}]], "Input",
 CellChangeTimes->{{3.7383291119473033`*^9, 3.7383291426095657`*^9}, {
   3.7383291911557035`*^9, 3.738329216942093*^9}, 3.7383995100403633`*^9, {
   3.7384023215039673`*^9, 3.738402384602338*^9}, {3.738562148068325*^9, 
   3.738562150599431*^9}, {3.7385621994865866`*^9, 3.7385622299844112`*^9}},
 CellLabel->
  "In[320]:=",ExpressionUUID->"bcc75ec2-18c2-4cc1-8806-f1dbfa25d029"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"709.690751299526`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 320, 222, 
   31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.865495793139642*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"aa33c218-19ab-4af6-b127-cd1a8891e6d6"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"764.1508442008678`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 320, 223, 
   31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.865495793155435*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"04b7fa31-6352-4c0f-a462-21fb09c5bde5"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"820.6081713746164`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 320, 224, 
   31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.865495793155435*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"57b396c7-22b6-4b37-87f8-8fc5f2d31155"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 320, 225, 31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.865495793155435*^9},
 CellLabel->
  "During evaluation of \
In[320]:=",ExpressionUUID->"d3e31bf1-45e2-4f1e-8819-d2d057a3b0a8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.710780084408956`", ",", "0.28105516965255695`", ",", 
   "0.008138638167583593`", ",", "0.000026097635379959296`", ",", 
   "1.0135030039517099`*^-8", ",", "4.935575917878654`*^-13", ",", 
   "3.0666166081270827`*^-18", ",", "2.4561178545424768`*^-24", ",", 
   "2.552192746679747`*^-31", ",", "3.4566209657547606`*^-39", ",", 
   "6.123960069447168`*^-48", ",", "1.423057245513148`*^-57", ",", 
   "4.347698779218281`*^-68", ",", "1.7501457831590603`*^-79", ",", 
   "9.300601408692954`*^-92", ",", "6.535995533750629`*^-105", ",", 
   "6.085164659151416`*^-119", ",", "7.519101984361644`*^-134", ",", 
   "1.2350505236059408`*^-149", ",", "2.7016537960157298`*^-166", ",", 
   "7.884178028680737`*^-184", ",", "3.0748590011637275`*^-202", ",", 
   "1.6056491424694829`*^-221", ",", "1.1246939267922785`*^-241", ",", 
   "1.0589113120591737`*^-262", ",", "1.3426262431910596`*^-284", ",", 
   "2.2973860153477873`*^-307", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
   "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.7383291210119224`*^9, 3.7383291435001287`*^9}, 
   3.738329191655669*^9, 3.7383292298358374`*^9, {3.738399512196454*^9, 
   3.7383995313244743`*^9}, {3.738402324816243*^9, 3.7384023851335344`*^9}, 
   3.7385621512243357`*^9, 3.7385622003614936`*^9, 3.7385622304531417`*^9, 
   3.832497062812027*^9, 3.8654950500944395`*^9, 3.865495793171161*^9},
 CellLabel->
  "Out[320]=",ExpressionUUID->"d6e2984b-e819-402e-b710-4669ac881aca"]
}, Open  ]],

Cell[TextData[{
 "Compute cooling intensity in erg ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["s", 
     RowBox[{"-", "1"}]], 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "cd6da8f7-c6a9-47bb-abcc-86a4a46856dd"],
 " "
}], "Text",
 CellChangeTimes->{{3.8654933375384293`*^9, 
  3.8654933666595697`*^9}},ExpressionUUID->"1f57286a-fdbb-4a22-9bfd-\
b419f5a80ba4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"computeLcool", "[", "spec_", "]"}], "[", 
   RowBox[{"popul_", ",", 
    RowBox[{"bet_", ":", "0"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"lcool", ",", "downrate", ",", "Ibg", ",", 
      RowBox[{"Tbg", "=", "2.73"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lcool", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Length", "[", 
         RowBox[{"transitions", "[", "spec", "]"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Ibg", "=", 
      RowBox[{"Blackbody", "[", 
       RowBox[{"Tbg", ",", 
        RowBox[{"tf", "[", "spec", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"uprate", "=", 
      RowBox[{"(", 
       RowBox[{"Ibg", 
        RowBox[{"(", "bet", ")"}], 
        RowBox[{"tblu", "[", "spec", "]"}]}], ")"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"downrate", "=", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"ta", "[", "spec", "]"}], "bet"}], "+", 
        RowBox[{"Ibg", 
         RowBox[{"(", "bet", ")"}], 
         RowBox[{"tbul", "[", "spec", "]"}]}]}], ")"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"lcool", "=", 
      RowBox[{
       RowBox[{"tf", "[", "spec", "]"}], "h", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"popul", "[", 
           RowBox[{"[", 
            RowBox[{"tu", "[", "spec", "]"}], "]"}], "]"}], "*", "downrate"}],
          "-", 
         RowBox[{
          RowBox[{"popul", "[", 
           RowBox[{"[", 
            RowBox[{"tl", "[", "spec", "]"}], "]"}], "]"}], "*", "uprate"}]}],
         ")"}]}]}], ";", "\[IndentingNewLine]", "lcool"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7385734042513695`*^9, 3.7385734273747435`*^9}, {
  3.7385734897141647`*^9, 3.738573595021355*^9}, {3.738573664703889*^9, 
  3.7385736661100416`*^9}, {3.738575539432474*^9, 3.7385755430103483`*^9}, {
  3.738575625942013*^9, 3.738575626660715*^9}, {3.73858142261102*^9, 
  3.7385814960434117`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"80b9a8fe-41f8-4f68-aa66-891ebe9b278e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Blackbody", "[", 
  RowBox[{"2.73", ",", 
   RowBox[{"tf", "[", "\"\<CII\>\"", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.738578682207116*^9, 3.738578682832075*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"c8a482c8-7dec-4661-9366-2b5960812ed3"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"0.0315945153315809`\\\", \\\" \\\", \
\\\"1.79472025825423989698`11.599257803418212*^-9843\\\"}]\\) is too small to \
represent as a normalized machine number; precision may be lost.\"", 2, 321, 
   226, 31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8654958018950853`*^9},
 CellLabel->
  "During evaluation of \
In[321]:=",ExpressionUUID->"48346261-e153-49d0-8762-1c3b15b2e82a"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"0.03145499481915587`\\\", \\\" \\\", \
\\\"5.80507901045296636311869014654944455`11.599898496606476*^-9829\\\"}]\\) \
is too small to represent as a normalized machine number; precision may be \
lost.\"", 2, 321, 227, 31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8654958019107227`*^9},
 CellLabel->
  "During evaluation of \
In[321]:=",ExpressionUUID->"aad9e3d2-3940-49ee-a324-f266d8341756"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"0.031643019785843406`\\\", \\\" \\\", \
\\\"1.65826285444825785099304376697097647`11.599035728339159*^-9848\\\"}]\\) \
is too small to represent as a normalized machine number; precision may be \
lost.\"", 2, 321, 228, 31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8654958019107227`*^9},
 CellLabel->
  "During evaluation of \
In[321]:=",ExpressionUUID->"1a2e1bc3-6c1f-4b43-9d25-5f56659ef1fd"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 321, 229, 31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.865495801931423*^9},
 CellLabel->
  "During evaluation of \
In[321]:=",ExpressionUUID->"1acc4422-0034-432b-8d74-e123661410c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.127377935437349`*^-25", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
   ",", "3.908010392012564`*^-17", ",", "0.`", ",", 
   "3.0211313414340693`*^-18", ",", "1.5690362421459499`*^-22"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.738578649740619*^9, 3.738578683503873*^9, 
  3.8654950501196985`*^9, 3.865495801931423*^9},
 CellLabel->
  "Out[321]=",ExpressionUUID->"5a90fb1c-439d-45ad-aa7a-c65f89adac71"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opr", "=", 
   RowBox[{"Min", "[", 
    RowBox[{"3.0", ",", 
     RowBox[{"9.0", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "170.6"}], "/", "50"}], "]"}]}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scalp", "=", 
   RowBox[{"1.0", "/", 
    RowBox[{"(", 
     RowBox[{"1.0", "+", "opr"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"scalo", "=", 
   RowBox[{"1.0", "-", "scalp"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"calculateExcitation", "[", "\"\<CII\>\"", "]"}], "[", 
  RowBox[{"50", ",", 
   RowBox[{"6.07", " ", 
    SuperscriptBox["10", "13"]}], ",", 
   RowBox[{"Flatten", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "2.02254879`", ",", "0.0823848145`", ",", "0.00533759715`", ",", 
        "0.00508723638`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "0.000852704523`", ",", "2.95127664`*^-30", ",", "0.0105240971`", ",", 
        RowBox[{"-", "2.15077272`*^-25"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"-", "3.6409555`*^-33"}], "}"}]}], "}"}]}], ",", "28", ",", 
   "498", ",", 
   RowBox[{"scalp", " ", "498"}], ",", 
   RowBox[{"scalo", " ", "498"}], ",", "0", ",", "0", ",", "0", ",", "0.00", 
   ",", "1.", ",", "2.73"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7377787076470227`*^9, 3.7377787215641446`*^9}, {
   3.7377787919631057`*^9, 3.737778819141952*^9}, {3.7377788591951203`*^9, 
   3.7377789233795147`*^9}, {3.738313315557866*^9, 3.73831331885445*^9}, {
   3.738314013474091*^9, 3.738314019272767*^9}, {3.7383140505906134`*^9, 
   3.7383141280264444`*^9}, {3.7383141736285057`*^9, 
   3.7383141969147005`*^9}, {3.7383142879946733`*^9, 
   3.7383143001031947`*^9}, {3.7383143410514913`*^9, 3.7383143410983305`*^9}, 
   3.738315340156059*^9, {3.738315382646524*^9, 3.7383153826777706`*^9}, {
   3.7383221432763214`*^9, 3.7383221492002926`*^9}, {3.7383223730864153`*^9, 
   3.738322411997246*^9}, {3.7383226343286424`*^9, 3.7383226423749237`*^9}, 
   3.738323651879182*^9, {3.738329047012686*^9, 3.7383290500763745`*^9}, {
   3.738329124247387*^9, 3.7383292262097044`*^9}, {3.738329493491268*^9, 
   3.7383295004925785`*^9}, {3.7383296848355646`*^9, 
   3.7383296889602757`*^9}, {3.738329871974504*^9, 3.7383298748337383`*^9}, {
   3.7383335447214527`*^9, 3.7383335452370386`*^9}, {3.7383853362738047`*^9, 
   3.738385337820573*^9}, {3.7383993960701857`*^9, 3.738399397635251*^9}, {
   3.7383994793625293`*^9, 3.7383994809093027`*^9}, {3.7383996708331146`*^9, 
   3.738399674021871*^9}, {3.738399731216522*^9, 3.738399733405273*^9}, {
   3.7383997739734893`*^9, 3.7383997802230525`*^9}, {3.738399817259756*^9, 
   3.7383998279018545`*^9}, {3.7384004129131594`*^9, 
   3.7384004208303995`*^9}, {3.7384005842055006`*^9, 
   3.7384005842991905`*^9}, {3.738400747573558*^9, 3.7384007494952984`*^9}, {
   3.7384009175920954`*^9, 3.7384009257503448`*^9}, {3.738402392398695*^9, 
   3.738402395728317*^9}, {3.7384024379842854`*^9, 3.738402440968452*^9}, {
   3.738402787696494*^9, 3.7384027965553036`*^9}, {3.738402833015346*^9, 
   3.7384028473444147`*^9}, 3.738402900992574*^9, {3.7384029484548054`*^9, 
   3.7384029647686768`*^9}, 3.7384030111195884`*^9, {3.7384030427193203`*^9, 
   3.73840306167605*^9}, 3.7384031134827604`*^9, {3.73840337009379*^9, 
   3.7384033923939676`*^9}, {3.7384035310871325`*^9, 
   3.7384035458263836`*^9}, {3.738562015515126*^9, 3.7385620522469745`*^9}, {
   3.7385620917910137`*^9, 3.7385620968375216`*^9}, {3.7385621283822393`*^9, 
   3.7385621606768427`*^9}, {3.738562206579836*^9, 3.738562216204158*^9}, {
   3.7385667755650816`*^9, 3.7385667941731415`*^9}, {3.7385668591685705`*^9, 
   3.7385668717145615`*^9}, {3.7385727325696435`*^9, 3.738572736741252*^9}, {
   3.7385730042927074`*^9, 3.7385730311658134`*^9}, {3.7385730631947503`*^9, 
   3.7385730662258177`*^9}},
 CellLabel->
  "In[322]:=",ExpressionUUID->"87c15f0c-0c74-4d13-98fb-93b8d3ed2e09"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1237.4413379254536`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 325, 230, 
   31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8323247986074743`*^9, 3.8323250200624685`*^9, 
  3.832393620915825*^9, 3.832497110661639*^9, 3.8654950501267643`*^9, 
  3.8654958071235924`*^9},
 CellLabel->
  "During evaluation of \
In[322]:=",ExpressionUUID->"32ddfd7c-15c1-4769-bb8c-bb3000be71df"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1238.0742263429086`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 325, 231, 
   31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8323247986074743`*^9, 3.8323250200624685`*^9, 
  3.832393620915825*^9, 3.832497110661639*^9, 3.8654950501267643`*^9, 
  3.8654958071410503`*^9},
 CellLabel->
  "During evaluation of \
In[322]:=",ExpressionUUID->"63f994a9-cfe4-469a-985f-b50910f6245d"],

Cell[BoxData[
 TemplateBox[{
  "General", "munfl", 
   "\"\\!\\(\\*RowBox[{\\\"Exp\\\", \\\"[\\\", RowBox[{\\\"-\\\", \
\\\"1238.8880839000092`\\\"}], \\\"]\\\"}]\\) is too small to represent as a \
normalized machine number; precision may be lost.\"", 2, 325, 232, 
   31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8323247986074743`*^9, 3.8323250200624685`*^9, 
  3.832393620915825*^9, 3.832497110661639*^9, 3.8654950501267643`*^9, 
  3.8654958071410503`*^9},
 CellLabel->
  "During evaluation of \
In[322]:=",ExpressionUUID->"03d338de-7e4c-4447-9f3b-e9fd50e1e1ce"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"", 2, 325, 233, 31029452096179365880, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8323247986074743`*^9, 3.8323250200624685`*^9, 
  3.832393620915825*^9, 3.832497110661639*^9, 3.8654950501267643`*^9, 
  3.865495807155157*^9},
 CellLabel->
  "During evaluation of \
In[322]:=",ExpressionUUID->"3d557ca8-6eac-4b10-912e-d900a93c371f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.8706069352660202`", ",", "0.12939306473397988`", ",", 
     "9.999999999999999`*^-31", ",", "9.999999999999999`*^-31", ",", 
     "9.999999999999999`*^-31"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "3.923876868099802`*^-22", ",", "2.1482110300673656`*^-40", ",", 
     "2.7761246403542186`*^-40", ",", "7.264131376861643`*^-42", ",", 
     "2.23371636714294`*^-41", ",", "5.22089637301377`*^-52", ",", 
     "9.977762852632581`*^-35", ",", "5.645595440428462`*^-46", ",", 
     "9.543616720483832`*^-53"}], "}"}], ",", "3.9238768681007998`*^-22", ",", 
   RowBox[{"{", 
    RowBox[{
    "2.0228951058802362`", ",", "0.08239922359911502`", ",", 
     "0.005338871045954666`", ",", "0.005088126137337665`", ",", 
     "0.0008529080334584271`", ",", "2.9518113015299794`*^-30", ",", 
     "0.010526608830345471`", ",", 
     RowBox[{"-", "2.152886961076186`*^-25"}], ",", 
     RowBox[{"-", "3.644534655954901`*^-33"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7377789244296527`*^9, {3.7383132809721584`*^9, 3.738313284487537*^9}, {
   3.7383133161671486`*^9, 3.738313319463792*^9}, 3.738314134135329*^9, {
   3.7383141750971465`*^9, 3.7383141987583046`*^9}, 3.738314300871896*^9, 
   3.7383143422701063`*^9, 3.738314406033366*^9, 3.7383144536054325`*^9, 
   3.738315008915964*^9, 3.7383151981438627`*^9, 3.738315341079359*^9, 
   3.738315385021343*^9, 3.7383217748341646`*^9, 3.738322156387275*^9, {
   3.7383223744612703`*^9, 3.738322412967613*^9}, {3.7383224735592127`*^9, 
   3.7383224964629145`*^9}, 3.7383226515807323`*^9, {3.738322955965164*^9, 
   3.73832298575765*^9}, 3.7383230221074085`*^9, 3.738323199905262*^9, {
   3.738323232307933*^9, 3.738323246498687*^9}, {3.738323305414363*^9, 
   3.73832330800793*^9}, 3.738323439664559*^9, {3.738323609606883*^9, 
   3.738323612872285*^9}, 3.7383236528791094`*^9, {3.7383290412149067`*^9, 
   3.7383290514669027`*^9}, {3.7383291283720975`*^9, 3.7383291985315723`*^9}, 
   3.7383292453107214`*^9, 3.7383293105712175`*^9, {3.7383293481549773`*^9, 
   3.7383293644532757`*^9}, {3.738329485255728*^9, 3.7383295021486692`*^9}, 
   3.7383296153110924`*^9, 3.738329689928953*^9, 3.738329844158368*^9, 
   3.7383298883041553`*^9, 3.7383299515933523`*^9, 3.7383300035836864`*^9, 
   3.7383301864162292`*^9, 3.738333576447585*^9, 3.7383336190800858`*^9, 
   3.7383337036730733`*^9, 3.7383339110899487`*^9, 3.738334294917505*^9, 
   3.7383364974160194`*^9, 3.738336579879704*^9, 3.7383372311286182`*^9, 
   3.738337264807954*^9, 3.738385347495719*^9, 3.738390091038597*^9, 
   3.7383993999944654`*^9, 3.7383994814248953`*^9, {3.738399671801735*^9, 
   3.738399674459276*^9}, 3.738399735264517*^9, 3.7383997812386045`*^9, {
   3.738399822370991*^9, 3.7383998475940275`*^9}, 3.7383999628852024`*^9, 
   3.738400357953318*^9, 3.7384004224471045`*^9, 3.7384004846575637`*^9, 
   3.738400525695347*^9, 3.738400585111622*^9, 3.7384007031422405`*^9, 
   3.738400762480179*^9, {3.7384009201856785`*^9, 3.7384009269533215`*^9}, 
   3.7384023988062267`*^9, 3.738402442374595*^9, 3.7384028551895556`*^9, 
   3.7384029021330867`*^9, 3.738402968221565*^9, 3.738403012746937*^9, 
   3.7384030628946676`*^9, 3.738403115310715*^9, 3.7384032364905195`*^9, 
   3.73840327287388*^9, 3.738403400177983*^9, 3.738403436792739*^9, 
   3.7384035484355764`*^9, {3.738403584044407*^9, 3.7384036333170824`*^9}, 
   3.738562055668556*^9, 3.7385620976655912`*^9, {3.7385621301008215`*^9, 
   3.7385621620673227`*^9}, {3.738562211110752*^9, 3.7385622168134904`*^9}, 
   3.7385668735581923`*^9, {3.738573038134013*^9, 3.7385730669444876`*^9}, 
   3.7385740601963205`*^9, 3.7385817968402557`*^9, 3.8323247995141373`*^9, 
   3.8323250201223087`*^9, 3.8323936209816484`*^9, 3.832497110714505*^9, 
   3.8654950502690105`*^9, 3.865495807155157*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"b44d4c5b-ad98-4d67-95a5-cd1f1e8f90d1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Main Routine Definitions", "Subsection",
 CellChangeTimes->{{3.8654861215725293`*^9, 3.8654861245992794`*^9}, {
  3.8654890229348326`*^9, 
  3.86548902449588*^9}},ExpressionUUID->"e802443d-96dd-4959-957c-\
a9483c0fc430"],

Cell[BoxData[
 RowBox[{
  RowBox[{"calculateHeatingCooling", "[", 
   RowBox[{
    RowBox[{"t_", "?", "NumericQ"}], ",", "index_Integer"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"calculateHeatingCooling", "[", "t", "]"}], "=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"i", "=", "index"}], ",", 
       RowBox[{"gtemp", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"2.7", ",", 
          RowBox[{"Abs", "@", "t"}]}], "]"}]}], ",", "tauIn", ",", "colIn", 
       ",", "NCO", ",", "NH2", ",", "NC", ",", "nH", ",", "nelec", ",", "nH2",
        ",", "ysol", ",", "opr", ",", "scalp", ",", "scalo", ",", "mintime"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Column", "[", 
            RowBox[{"{", 
             RowBox[{
             "tchem", ",", "gtemp", ",", "ngas", ",", "zeta", ",", "G0", ",", 
              RowBox[{"AVGrid", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"col", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"getSpecies", "[", "\"\<H2\>\"", "]"}]}], "]"}], 
               "]"}], ",", 
              RowBox[{"col", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"getSpecies", "[", "\"\<CO\>\"", "]"}]}], "]"}], 
               "]"}], ",", 
              RowBox[{"col", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"i", "-", "1"}], ",", 
                 RowBox[{"getSpecies", "[", "\"\<C\>\"", "]"}]}], "]"}], 
               "]"}], ",", "dv"}], "}"}], "]"}], "]"}], ";"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"ysol", "=", 
         RowBox[{"solveChemistry", "[", 
          RowBox[{
          "tchem", ",", "gtemp", ",", "ngas", ",", "zeta", ",", "G0", ",", 
           RowBox[{"AVGrid", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"col", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"getSpecies", "[", "\"\<H2\>\"", "]"}]}], "]"}], "]"}], 
           ",", 
           RowBox[{"col", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"getSpecies", "[", "\"\<CO\>\"", "]"}]}], "]"}], "]"}], 
           ",", 
           RowBox[{"col", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", 
              RowBox[{"getSpecies", "[", "\"\<C\>\"", "]"}]}], "]"}], "]"}], 
           ",", "dv"}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"ysol", "=", 
         RowBox[{"solveChemistry", "[", 
          RowBox[{
          "tchem", ",", "gtemp", ",", "ngas", ",", "zeta", ",", "G0", ",", 
           RowBox[{"AVGrid", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "1.", ",", "1.", ",", "1.", 
           ",", "dv"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"mintime", "=", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ysol", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", "\"\<Domain\>\"", "]"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "ysol", "]"}]}], "}"}]}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1", ",", "2"}], "]"}], "]"}], "]"}], ",", 
         "tchem"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"abu", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"Through", "[", 
         RowBox[{"ysol", "[", "mintime", "]"}], "]"}], "//", "Quiet"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"gtemp", ",", " ", 
           RowBox[{
            RowBox[{"ysol", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", "\"\<Domain\>\"", "]"}]}], 
          "}"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"abu", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NCO", "=", 
          RowBox[{"col", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "-", "1"}], ",", 
             RowBox[{"getSpecies", "[", "\"\<CO\>\"", "]"}]}], "]"}], "]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"NC", "=", 
          RowBox[{"col", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "-", "1"}], ",", 
             RowBox[{"getSpecies", "[", "\"\<C\>\"", "]"}]}], "]"}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"NH2", "=", 
          RowBox[{"col", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "-", "1"}], ",", 
             RowBox[{"getSpecies", "[", "\"\<H2\>\"", "]"}]}], "]"}], "]"}]}],
          ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NCO", "=", "1."}], ";", "\[IndentingNewLine]", 
         RowBox[{"NC", "=", "1."}], ";", "\[IndentingNewLine]", 
         RowBox[{"NH2", "=", "1."}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nH", "=", 
       RowBox[{"abu", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", 
          RowBox[{"getSpecies", "[", "\"\<H\>\"", "]"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"nelec", "=", 
       RowBox[{"abu", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", 
          RowBox[{"getSpecies", "[", "\"\<e-\>\"", "]"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"nH2", "=", 
       RowBox[{"abu", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", 
          RowBox[{"getSpecies", "[", "\"\<H2\>\"", "]"}]}], "]"}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"opr", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"3.0", ",", 
         RowBox[{"9.0", "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "170.6"}], "/", "gtemp"}], "]"}]}]}], "]"}]}], " ", 
      ";", "\[IndentingNewLine]", 
      RowBox[{"scalp", "=", 
       RowBox[{"1.0", "/", 
        RowBox[{"(", 
         RowBox[{"1.0", "+", "opr"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"scalo", "=", 
       RowBox[{"1.0", "-", "scalp"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"excspe", "=", "\"\<CII\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molSpe", "=", "\"\<C+\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molMass", "=", "12"}], ";", "\[IndentingNewLine]", 
      RowBox[{"hcindex", "=", "2"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", 
          RowBox[{
           RowBox[{"abu", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
           RowBox[{"ds", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmp", "=", 
       RowBox[{
        RowBox[{"calculateExcitation", "[", "excspe", "]"}], "[", 
        RowBox[{
        "gtemp", ",", "colIn", ",", "tauIn", ",", "molMass", ",", "nH2", ",", 
         RowBox[{"nH2", "*", "scalp"}], ",", 
         RowBox[{"nH2", "*", "scalo"}], ",", "nelec", ",", "nH", ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<He\>\"", "]"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<H+\>\"", "]"}]}], "]"}], "]"}], 
         ",", "dv", ",", "Tbg"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tau", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"tau", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pop", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"pop", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hcrate", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"hcrate", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "hcindex"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"abu", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", 
               RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}]}], 
           RowBox[{"tmp", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sb", "[", "excspe", "]"}], "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{
           RowBox[{"sb", "[", "excspe", "]"}], ",", 
           RowBox[{"i", "\[Rule]", 
            RowBox[{
             RowBox[{
              RowBox[{"sb", "[", "excspe", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"tmp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "*", 
              RowBox[{"abu", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
              "*", 
              FractionBox[
               RowBox[{"ds", "[", 
                RowBox[{"[", "i", "]"}], "]"}], 
               RowBox[{"2", "\[Pi]"}]]}]}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"excspe", "=", "\"\<CO\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molSpe", "=", "\"\<CO\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molMass", "=", "28"}], ";", "\[IndentingNewLine]", 
      RowBox[{"hcindex", "=", "4"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", 
          RowBox[{
           RowBox[{"abu", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
           RowBox[{"ds", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tmp", "=", 
       RowBox[{
        RowBox[{"calculateExcitation", "[", "excspe", "]"}], "[", 
        RowBox[{
        "gtemp", ",", "colIn", ",", "tauIn", ",", "molMass", ",", "nH2", ",", 
         RowBox[{"nH2", "*", "scalp"}], ",", 
         RowBox[{"nH2", "*", "scalo"}], ",", "nelec", ",", "nH", ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<He\>\"", "]"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<H+\>\"", "]"}]}], "]"}], "]"}], 
         ",", "dv", ",", "Tbg"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tau", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"tau", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pop", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"pop", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hcrate", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"hcrate", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "hcindex"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"abu", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", 
               RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}]}], 
           RowBox[{"tmp", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sb", "[", "excspe", "]"}], "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{
           RowBox[{"sb", "[", "excspe", "]"}], ",", 
           RowBox[{"i", "\[Rule]", 
            RowBox[{
             RowBox[{
              RowBox[{"sb", "[", "excspe", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"tmp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "*", 
              RowBox[{"abu", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
              "*", 
              FractionBox[
               RowBox[{"ds", "[", 
                RowBox[{"[", "i", "]"}], "]"}], 
               RowBox[{"2", "\[Pi]"}]]}]}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"excspe", "=", "\"\<OI\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molSpe", "=", "\"\<O\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molMass", "=", "16"}], ";", "\[IndentingNewLine]", 
      RowBox[{"hcindex", "=", "1"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", 
          RowBox[{
           RowBox[{"abu", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
           RowBox[{"ds", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmp", "=", 
       RowBox[{
        RowBox[{"calculateExcitation", "[", "excspe", "]"}], "[", 
        RowBox[{
        "gtemp", ",", "colIn", ",", "tauIn", ",", "molMass", ",", "nH2", ",", 
         RowBox[{"nH2", "*", "scalp"}], ",", 
         RowBox[{"nH2", "*", "scalo"}], ",", "nelec", ",", "nH", ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<He\>\"", "]"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<H+\>\"", "]"}]}], "]"}], "]"}], 
         ",", "dv", ",", "Tbg"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tau", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"tau", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pop", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"pop", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hcrate", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"hcrate", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "hcindex"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"abu", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", 
               RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}]}], 
           RowBox[{"tmp", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sb", "[", "excspe", "]"}], "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{
           RowBox[{"sb", "[", "excspe", "]"}], ",", 
           RowBox[{"i", "\[Rule]", 
            RowBox[{
             RowBox[{
              RowBox[{"sb", "[", "excspe", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"tmp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "*", 
              RowBox[{"abu", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
              "*", 
              FractionBox[
               RowBox[{"ds", "[", 
                RowBox[{"[", "i", "]"}], "]"}], 
               RowBox[{"2", "\[Pi]"}]]}]}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"excspe", "=", "\"\<CI\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molSpe", "=", "\"\<C\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molMass", "=", "12"}], ";", "\[IndentingNewLine]", 
      RowBox[{"hcindex", "=", "3"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", 
          RowBox[{
           RowBox[{"abu", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
           RowBox[{"ds", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmp", "=", 
       RowBox[{
        RowBox[{"calculateExcitation", "[", "excspe", "]"}], "[", 
        RowBox[{
        "gtemp", ",", "colIn", ",", "tauIn", ",", "molMass", ",", "nH2", ",", 
         RowBox[{"nH2", "*", "scalp"}], ",", 
         RowBox[{"nH2", "*", "scalo"}], ",", "nelec", ",", "nH", ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<He\>\"", "]"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<H+\>\"", "]"}]}], "]"}], "]"}], 
         ",", "dv", ",", "Tbg"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tau", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"tau", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pop", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"pop", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hcrate", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"hcrate", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "hcindex"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"abu", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", 
               RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}]}], 
           RowBox[{"tmp", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sb", "[", "excspe", "]"}], "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{
           RowBox[{"sb", "[", "excspe", "]"}], ",", 
           RowBox[{"i", "\[Rule]", 
            RowBox[{
             RowBox[{
              RowBox[{"sb", "[", "excspe", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"tmp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "*", 
              RowBox[{"abu", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
              "*", 
              FractionBox[
               RowBox[{"ds", "[", 
                RowBox[{"[", "i", "]"}], "]"}], 
               RowBox[{"2", "\[Pi]"}]]}]}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"excspe", "=", "\"\<13CO\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molSpe", "=", "\"\<CO\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molMass", "=", "28"}], ";", "\[IndentingNewLine]", 
      RowBox[{"hcindex", "=", "5"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", 
          RowBox[{
           RowBox[{"abu", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
           RowBox[{"ds", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tmp", "=", 
       RowBox[{
        RowBox[{"calculateExcitation", "[", "excspe", "]"}], "[", 
        RowBox[{"gtemp", ",", 
         RowBox[{
          FractionBox["1", "60"], "colIn"}], ",", "tauIn", ",", "molMass", 
         ",", "nH2", ",", 
         RowBox[{"nH2", "*", "scalp"}], ",", 
         RowBox[{"nH2", "*", "scalo"}], ",", "nelec", ",", "nH", ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<He\>\"", "]"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<H+\>\"", "]"}]}], "]"}], "]"}], 
         ",", "dv", ",", "Tbg"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tau", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"tau", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pop", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"pop", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hcrate", "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{"hcrate", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", "hcindex"}], "}"}], "\[Rule]", 
          RowBox[{
           RowBox[{"-", 
            FractionBox["1", "60"]}], 
           RowBox[{"abu", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
           RowBox[{"tmp", "[", 
            RowBox[{"[", 
             RowBox[{"-", "2"}], "]"}], "]"}]}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sb", "[", "excspe", "]"}], "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{
           RowBox[{"sb", "[", "excspe", "]"}], ",", 
           RowBox[{"i", "\[Rule]", 
            RowBox[{
             RowBox[{
              RowBox[{"sb", "[", "excspe", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"tmp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "*", 
              FractionBox["1", "60"], 
              RowBox[{"abu", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
              "*", 
              FractionBox[
               RowBox[{"ds", "[", 
                RowBox[{"[", "i", "]"}], "]"}], 
               RowBox[{"2", "\[Pi]"}]]}]}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"additional", " ", "emission", " ", "lines"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"excspe", "=", "\"\<CH\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molSpe", "=", "\"\<CH\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molMass", "=", "13"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"hcindex", "=", "4"}], ";"}], "*)"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "excluded", " ", "from", " ", "heating", " ", "cooling", " ", 
        "balance"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", 
          RowBox[{
           RowBox[{"abu", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
           RowBox[{"ds", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tmp", "=", 
       RowBox[{
        RowBox[{"calculateExcitation", "[", "excspe", "]"}], "[", 
        RowBox[{
        "gtemp", ",", "colIn", ",", "tauIn", ",", "molMass", ",", "nH2", ",", 
         RowBox[{"nH2", "*", "scalp"}], ",", 
         RowBox[{"nH2", "*", "scalo"}], ",", "nelec", ",", "nH", ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<He\>\"", "]"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<H+\>\"", "]"}]}], "]"}], "]"}], 
         ",", "dv", ",", "Tbg"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tau", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"tau", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pop", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"pop", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"hcrate", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"hcrate", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "hcindex"}], "}"}], "\[Rule]", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"abu", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}]}], 
             RowBox[{"tmp", "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}]}]}], "]"}]}], ";"}], "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sb", "[", "excspe", "]"}], "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{
           RowBox[{"sb", "[", "excspe", "]"}], ",", 
           RowBox[{"i", "\[Rule]", 
            RowBox[{
             RowBox[{
              RowBox[{"sb", "[", "excspe", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"tmp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "*", 
              RowBox[{"abu", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
              "*", 
              FractionBox[
               RowBox[{"ds", "[", 
                RowBox[{"[", "i", "]"}], "]"}], 
               RowBox[{"2", "\[Pi]"}]]}]}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"excspe", "=", "\"\<CH+\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molSpe", "=", "\"\<CH+\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molMass", "=", "13"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"hcindex", "=", "4"}], ";"}], "*)"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "excluded", " ", "from", " ", "heating", " ", "cooling", " ", 
        "balance"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", 
          RowBox[{
           RowBox[{"abu", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
           RowBox[{"ds", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tmp", "=", 
       RowBox[{
        RowBox[{"calculateExcitation", "[", "excspe", "]"}], "[", 
        RowBox[{
        "gtemp", ",", "colIn", ",", "tauIn", ",", "molMass", ",", "nH2", ",", 
         RowBox[{"nH2", "*", "scalp"}], ",", 
         RowBox[{"nH2", "*", "scalo"}], ",", "nelec", ",", "nH", ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<He\>\"", "]"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<H+\>\"", "]"}]}], "]"}], "]"}], 
         ",", "dv", ",", "Tbg"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tau", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"tau", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pop", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"pop", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"hcrate", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"hcrate", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "hcindex"}], "}"}], "\[Rule]", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"abu", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}]}], 
             RowBox[{"tmp", "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}]}]}], "]"}]}], ";"}], "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sb", "[", "excspe", "]"}], "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{
           RowBox[{"sb", "[", "excspe", "]"}], ",", 
           RowBox[{"i", "\[Rule]", 
            RowBox[{
             RowBox[{
              RowBox[{"sb", "[", "excspe", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"tmp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "*", 
              RowBox[{"abu", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
              "*", 
              FractionBox[
               RowBox[{"ds", "[", 
                RowBox[{"[", "i", "]"}], "]"}], 
               RowBox[{"2", "\[Pi]"}]]}]}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"excspe", "=", "\"\<HCO+\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molSpe", "=", "\"\<HCO+\>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"molMass", "=", "29"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"hcindex", "=", "4"}], ";"}], "*)"}], " ", 
      RowBox[{"(*", " ", 
       RowBox[{
       "excluded", " ", "from", " ", "heating", " ", "cooling", " ", 
        "balance"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", "0"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tauIn", "=", 
          RowBox[{
           RowBox[{"tau", "[", "excspe", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"i", "-", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"colIn", "=", 
          RowBox[{
           RowBox[{"abu", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", 
              RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
           RowBox[{"ds", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"tmp", "=", 
       RowBox[{
        RowBox[{"calculateExcitation", "[", "excspe", "]"}], "[", 
        RowBox[{
        "gtemp", ",", "colIn", ",", "tauIn", ",", "molMass", ",", "nH2", ",", 
         RowBox[{"nH2", "*", "scalp"}], ",", 
         RowBox[{"nH2", "*", "scalo"}], ",", "nelec", ",", "nH", ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<He\>\"", "]"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", 
            RowBox[{"getSpecies", "[", "\"\<H+\>\"", "]"}]}], "]"}], "]"}], 
         ",", "dv", ",", "Tbg"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tau", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"tau", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", 
            RowBox[{"-", "1"}], "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"pop", "[", "excspe", "]"}], "=", 
       RowBox[{"ReplacePart", "[", 
        RowBox[{
         RowBox[{"pop", "[", "excspe", "]"}], ",", 
         RowBox[{"i", "\[Rule]", 
          RowBox[{"tmp", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"hcrate", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"hcrate", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "hcindex"}], "}"}], "\[Rule]", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"abu", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}]}], 
             RowBox[{"tmp", "[", 
              RowBox[{"[", 
               RowBox[{"-", "2"}], "]"}], "]"}]}]}]}], "]"}]}], ";"}], "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"i", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"sb", "[", "excspe", "]"}], "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{
           RowBox[{"sb", "[", "excspe", "]"}], ",", 
           RowBox[{"i", "\[Rule]", 
            RowBox[{
             RowBox[{
              RowBox[{"sb", "[", "excspe", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"i", "-", "1"}], "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"tmp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "*", 
              RowBox[{"abu", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", 
                 RowBox[{"getSpecies", "[", "molSpe", "]"}]}], "]"}], "]"}], 
              "*", 
              FractionBox[
               RowBox[{"ds", "[", 
                RowBox[{"[", "i", "]"}], "]"}], 
               RowBox[{"2", "\[Pi]"}]]}]}]}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "end", " ", "of", " ", "additional", " ", "emission", " ", "lines"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "gas", " ", "grain", " ", "cooling", " ", "Tielens", " ", "2005"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hcrate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "6"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["10", 
          RowBox[{"-", "33"}]]}], 
        SuperscriptBox["ngas", "2"], 
        SqrtBox["gtemp"], 
        RowBox[{"(", 
         RowBox[{"gtemp", "-", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Ly", " ", "alpha", " ", "cooling", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sternberg", "&"}], " ", "Dalgarno", " ", "1989"}], ")"}]}],
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hcrate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "7"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"-", "7.3"}], " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "19"}]], "nH", " ", "nelec", " ", 
        RowBox[{"N", "[", " ", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"N", "@", 
             FractionBox["118400", "gtemp"]}]}], "]"}], ",", 
          "$MachinePrecision"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"OI", " ", "6300", " ", "Ang", " ", "cooling", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sternberg", "&"}], " ", "Dalgarno", " ", "1989"}], ")"}]}],
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hcrate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "8"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"-", "1.8"}], " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "24"}]], 
        RowBox[{"abu", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"getSpecies", "[", "\"\<O\>\"", "]"}]}], "]"}], "]"}], 
        "ngas", " ", 
        RowBox[{"N", "[", " ", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            RowBox[{"N", "@", 
             FractionBox["22800", "gtemp"]}]}], "]"}], ",", 
          "$MachinePrecision"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Photoelectric", " ", "heating", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bakes", "&"}], " ", "Tielens", " ", "1994"}], ")"}]}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hcrate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "9"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"PEHeatingCooling", "[", 
         RowBox[{"G0", ",", 
          RowBox[{"AVGrid", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "gtemp", ",", "ngas", ",", 
          "nelec"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Recombination", " ", "cooling", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Bakes", "&"}], " ", "Tielens", " ", "1994"}], ")"}]}], 
       "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hcrate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "10"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"PEHeatingCooling", "[", 
         RowBox[{"G0", ",", 
          RowBox[{"AVGrid", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "gtemp", ",", "ngas", ",", 
          "nelec"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Cosmic", " ", "ray", " ", "heating", " ", 
        RowBox[{"(", 
         RowBox[{"Jonkheid", " ", "et", " ", "al", ".2004"}], ")"}]}], "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hcrate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "11"}], "]"}], "]"}], "=", 
       RowBox[{"zeta", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"5.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "12"}]], "nH"}], "+", 
          RowBox[{"2.5", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "11"}]], "nH2"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Heating", " ", "from", " ", "C", " ", "ionization", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Black", " ", "1987"}], ",", 
          RowBox[{"Jonkheid", " ", "2004"}]}], ")"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hcrate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "12"}], "]"}], "]"}], "=", 
       RowBox[{"1.602", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "12"}]], 
        RowBox[{"abu", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"getSpecies", "[", "\"\<C\>\"", "]"}]}], "]"}], "]"}], 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ii", "=", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"reactions", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "7", "]"}], "]"}], "\[Equal]", "16"}], "&"}]}],
               "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "6"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"reactionRateCoefficient", "[", 
            RowBox[{"reactions", "[", 
             RowBox[{"[", 
              RowBox[{"ii", ",", "7"}], " ", "]"}], "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"reactions", "[", 
             RowBox[{"[", 
              RowBox[{"ii", ",", 
               RowBox[{"8", ";;", "10"}]}], "]"}], "]"}], ",", "gtemp", ",", 
            "ngas", ",", "nH", ",", "zeta", ",", "G0", ",", 
            RowBox[{"AVGrid", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"H2selfs", "[", 
             RowBox[{"NH2", ",", "dv"}], "]"}], ",", 
            RowBox[{"COselfs", "[", 
             RowBox[{"NH2", ",", "NCO"}], "]"}], ",", 
            RowBox[{"Cselfs", "[", 
             RowBox[{"NH2", ",", "NC", ",", "gtemp"}], "]"}]}], "]"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"H2", " ", "line", " ", "cooling", " ", "rate", " ", 
        RowBox[{"(", 
         RowBox[{"Roellig", " ", "et", " ", "al", ".2006"}], ")"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hcrate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "13"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"H2LineHeatingCooling", "[", 
         RowBox[{"G0", ",", 
          RowBox[{"AVGrid", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "gtemp", ",", "ngas", ",", 
          "nH2", ",", "NH2", ",", "dv"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "H2", " ", "heating", " ", "rate", " ", "through", " ", "pumping", " ", 
        RowBox[{"(", 
         RowBox[{"Roellig", " ", "et", " ", "al", ".2006"}], ")"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hcrate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "14"}], "]"}], "]"}], "=", 
       RowBox[{
        RowBox[{"H2LineHeatingCooling", "[", 
         RowBox[{"G0", ",", 
          RowBox[{"AVGrid", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "gtemp", ",", "ngas", ",", 
          "nH2", ",", "NH2", ",", "dv"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"H2", " ", "formation", " ", "heating", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Sternberg", "&"}], " ", "Dalgarno", " ", "1989"}], ")"}]}],
        "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hcrate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "15"}], "]"}], "]"}], "=", 
       RowBox[{"2.4", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "12"}]], 
        SuperscriptBox["nH", "2"], "*", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ii", "=", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"reactions", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "7", "]"}], "]"}], "\[Equal]", "0"}], "&"}]}], 
              "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "6"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"reactionRateCoefficient", "[", 
            RowBox[{"reactions", "[", 
             RowBox[{"[", 
              RowBox[{"ii", ",", "7"}], " ", "]"}], "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"reactions", "[", 
             RowBox[{"[", 
              RowBox[{"ii", ",", 
               RowBox[{"8", ";;", "10"}]}], "]"}], "]"}], ",", "gtemp", ",", 
            "ngas", ",", "nH", ",", "zeta", ",", "G0", ",", 
            RowBox[{"AVGrid", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"H2selfs", "[", 
             RowBox[{"NH2", ",", "dv"}], "]"}], ",", 
            RowBox[{"COselfs", "[", 
             RowBox[{"NH2", ",", "NCO"}], "]"}], ",", 
            RowBox[{"Cselfs", "[", 
             RowBox[{"NH2", ",", "NC", ",", "gtemp"}], "]"}]}], "]"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"H2", " ", "dissociation", " ", "heating", " ", 
        RowBox[{"(", 
         RowBox[{"Jonkheid", " ", "et", " ", "al", ".2004"}], ")"}]}], "*)"}],
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hcrate", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "16"}], "]"}], "]"}], "=", 
       RowBox[{"6.4", " ", 
        SuperscriptBox["10", 
         RowBox[{"-", "13"}]], 
        RowBox[{"abu", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", 
           RowBox[{"getSpecies", "[", "\"\<H2\>\"", "]"}]}], "]"}], "]"}], 
        "*", 
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ii", "=", 
            RowBox[{
             RowBox[{"Select", "[", 
              RowBox[{"reactions", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", "7", "]"}], "]"}], "\[Equal]", "14"}], "&"}]}],
               "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "6"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{
           RowBox[{"reactionRateCoefficient", "[", 
            RowBox[{"reactions", "[", 
             RowBox[{"[", 
              RowBox[{"ii", ",", "7"}], " ", "]"}], "]"}], "]"}], "[", 
           RowBox[{
            RowBox[{"reactions", "[", 
             RowBox[{"[", 
              RowBox[{"ii", ",", 
               RowBox[{"8", ";;", "10"}]}], "]"}], "]"}], ",", "gtemp", ",", 
            "ngas", ",", "nH", ",", "zeta", ",", "G0", ",", 
            RowBox[{"AVGrid", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"H2selfs", "[", 
             RowBox[{"NH2", ",", "dv"}], "]"}], ",", 
            RowBox[{"COselfs", "[", 
             RowBox[{"NH2", ",", "NCO"}], "]"}], ",", 
            RowBox[{"Cselfs", "[", 
             RowBox[{"NH2", ",", "NC", ",", "gtemp"}], "]"}]}], "]"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hctot", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "3"}], "]"}], "]"}], "=", 
       RowBox[{"Total", "[", 
        RowBox[{"hcrate", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "All"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hctot", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}], "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"hcrate", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "All"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"#", ">", "0"}], "&"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"hctot", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
       RowBox[{"-", 
        RowBox[{"Total", "[", 
         RowBox[{"Select", "[", 
          RowBox[{
           RowBox[{"hcrate", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "All"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"#", "<", "0"}], "&"}]}], "]"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hctot", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "3"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.734861601649514*^9, 3.7348617152852774`*^9}, {
   3.734861768968948*^9, 3.7348618381358843`*^9}, {3.734861892225684*^9, 
   3.7348619400191593`*^9}, {3.7348640464491415`*^9, 
   3.7348640484803066`*^9}, {3.7348641355756574`*^9, 
   3.7348641712960453`*^9}, {3.734864230137117*^9, 3.7348642409644294`*^9}, {
   3.7348644559433928`*^9, 3.734864565482366*^9}, {3.734864668234586*^9, 
   3.734864743549882*^9}, {3.7348647840938516`*^9, 3.734864814622924*^9}, {
   3.734864853729488*^9, 3.734864877665242*^9}, {3.734864938067212*^9, 
   3.734864981890442*^9}, {3.734865014936187*^9, 3.73486524451344*^9}, {
   3.7350343073683696`*^9, 3.7350343098572903`*^9}, {3.7350344474744005`*^9, 
   3.735034480612576*^9}, {3.735034564653212*^9, 3.735034599635002*^9}, 
   3.7350349195777884`*^9, {3.735034975848317*^9, 3.7350350100176306`*^9}, {
   3.7350351430390244`*^9, 3.7350352362821074`*^9}, {3.7350354191236258`*^9, 
   3.7350354776036673`*^9}, {3.7350356000483637`*^9, 
   3.7350356075009828`*^9}, {3.735452517514008*^9, 3.7354525462774982`*^9}, {
   3.7354533594005585`*^9, 3.735453370868424*^9}, {3.735453408146909*^9, 
   3.735453435488611*^9}, {3.73545351410635*^9, 3.7354535170066442`*^9}, {
   3.7354535734629335`*^9, 3.7354535889149213`*^9}, {3.7354540175180435`*^9, 
   3.735454057030731*^9}, {3.735454211207941*^9, 3.7354543793724995`*^9}, {
   3.7354544378525143`*^9, 3.7354544513671303`*^9}, {3.735454788493452*^9, 
   3.735454795946043*^9}, {3.73545530362043*^9, 3.735455382663742*^9}, {
   3.7354555886519966`*^9, 3.7354556637293625`*^9}, {3.7354557238754272`*^9, 
   3.7354557721218586`*^9}, {3.7354564843973346`*^9, 
   3.7354566571520176`*^9}, {3.735456769128063*^9, 3.7354568978217125`*^9}, {
   3.7354717757307796`*^9, 3.7354718132279997`*^9}, {3.735471890550393*^9, 
   3.7354718946750836`*^9}, {3.7354719304849586`*^9, 
   3.7354719972334633`*^9}, {3.735472039789318*^9, 3.7354721235956306`*^9}, {
   3.7354721622802362`*^9, 3.735472182544359*^9}, {3.735472337991021*^9, 
   3.7354725135439816`*^9}, {3.7354725800859237`*^9, 
   3.7354726603612275`*^9}, {3.73547270220055*^9, 3.735472780210971*^9}, {
   3.7354728295666904`*^9, 3.735472831160321*^9}, {3.735473068581156*^9, 
   3.73547314010711*^9}, {3.735473183322652*^9, 3.7354732046335754`*^9}, {
   3.7354733757146378`*^9, 3.7354735767713327`*^9}, {3.7354737969737434`*^9, 
   3.7354738138943653`*^9}, {3.7354738653124204`*^9, 3.735473914574397*^9}, {
   3.735534631157817*^9, 3.735534634188844*^9}, {3.7355346999339685`*^9, 
   3.7355347225416613`*^9}, {3.73553482189368*^9, 3.735534904356311*^9}, {
   3.7355350314875107`*^9, 3.735535043845995*^9}, 3.7355351012167134`*^9, {
   3.735535146504849*^9, 3.7355351492077775`*^9}, {3.7355352838921432`*^9, 
   3.7355352967193255`*^9}, {3.7355353494654374`*^9, 
   3.7355353779008083`*^9}, {3.7355358504438925`*^9, 
   3.7355358532561846`*^9}, {3.7355359102519736`*^9, 
   3.7355359358125744`*^9}, {3.7355359864494514`*^9, 
   3.7355360093383636`*^9}, {3.7355361115339127`*^9, 
   3.7355364940368195`*^9}, {3.7355365467829*^9, 3.7355365523918576`*^9}, 
   3.7355366090907803`*^9, {3.7355366513064*^9, 3.735536674398451*^9}, {
   3.735536748471085*^9, 3.7355367523926687`*^9}, {3.7355368229036083`*^9, 
   3.7355368242160273`*^9}, {3.7355368580591507`*^9, 3.735536873323642*^9}, {
   3.735536916601677*^9, 3.73553692980383*^9}, {3.7355369864558687`*^9, 
   3.7355371082749915`*^9}, {3.7355371916778717`*^9, 3.735537211535771*^9}, {
   3.7355372527358418`*^9, 3.735537278327688*^9}, {3.7355373338704524`*^9, 
   3.735537338651353*^9}, {3.735537409224242*^9, 3.7355374397844715`*^9}, {
   3.735538554914171*^9, 3.7355385596013527`*^9}, {3.7355385985203233`*^9, 
   3.735538619674997*^9}, {3.735543211032237*^9, 3.7355432116727843`*^9}, {
   3.735543319292947*^9, 3.7355433203553677`*^9}, {3.7355434879990845`*^9, 
   3.7355434973421392`*^9}, {3.735543705026163*^9, 3.7355437159159794`*^9}, {
   3.735543848163816*^9, 3.7355438514135847`*^9}, {3.735543896836899*^9, 
   3.7355439143043585`*^9}, {3.7355440199527273`*^9, 3.735544029186386*^9}, {
   3.735544059231035*^9, 3.7355440751461954`*^9}, {3.7355442331283045`*^9, 
   3.7355442496114845`*^9}, {3.7355442933113575`*^9, 
   3.7355443149972324`*^9}, {3.735544384288969*^9, 3.735544416520958*^9}, {
   3.735544512965906*^9, 3.7355445160281796`*^9}, {3.7355522506466494`*^9, 
   3.7355522577086325`*^9}, {3.73555232248847*^9, 3.735552328816126*^9}, {
   3.735552632656597*^9, 3.7355526360469613`*^9}, 3.7355530980269003`*^9, {
   3.735553177521027*^9, 3.7355531852548046`*^9}, {3.7355532477077274`*^9, 
   3.7355532482076993`*^9}, {3.7355533384509993`*^9, 
   3.7355533426225643`*^9}, {3.7355571050659275`*^9, 3.735557154062286*^9}, {
   3.735557196387274*^9, 3.735557211636147*^9}, {3.7355572435087895`*^9, 
   3.7355572611637526`*^9}, 3.7355573010982637`*^9, 3.735621869297844*^9, 
   3.7356228206546917`*^9, {3.7356230048910327`*^9, 3.7356230181713276`*^9}, 
   3.7356251270437164`*^9, {3.7356290191192937`*^9, 3.735629030759078*^9}, {
   3.735987852546535*^9, 3.7359878548432355`*^9}, 3.73598823161218*^9, {
   3.736079716126728*^9, 3.736079728000843*^9}, {3.736079763076369*^9, 
   3.7360797637169404`*^9}, {3.7360807887264533`*^9, 3.736080838177075*^9}, {
   3.7360821098813763`*^9, 3.736082113474852*^9}, {3.7360840741897573`*^9, 
   3.736084076298975*^9}, {3.7360841231984634`*^9, 3.736084123651554*^9}, {
   3.736168011227816*^9, 3.736168014831603*^9}, {3.736224608374329*^9, 
   3.736224608800686*^9}, {3.7362285493577614`*^9, 3.7362285587582283`*^9}, {
   3.736232517423706*^9, 3.736232518379774*^9}, {3.736238702073822*^9, 
   3.7362387123626575`*^9}, {3.7362488440002613`*^9, 3.7362488506924076`*^9}, 
   3.7364941022610016`*^9, {3.736586733708536*^9, 3.7365867439532485`*^9}, {
   3.736586865347204*^9, 3.73658686874848*^9}, {3.7365880668494387`*^9, 
   3.736588079326085*^9}, {3.736588137770916*^9, 3.7365881594842725`*^9}, {
   3.736660482944706*^9, 3.7366604903899307`*^9}, {3.7366793992352743`*^9, 
   3.7366794490715246`*^9}, {3.7371939402505074`*^9, 
   3.7371939406723504`*^9}, {3.73728045500342*^9, 3.7372804553315477`*^9}, {
   3.7373667665948544`*^9, 3.7373669459722743`*^9}, {3.7373669772668114`*^9, 
   3.7373670019212437`*^9}, {3.7373670559647017`*^9, 
   3.7373671816273346`*^9}, {3.7373675725802975`*^9, 
   3.7373676208778715`*^9}, {3.7373677987241106`*^9, 3.737367820628772*^9}, {
   3.7373715630919876`*^9, 3.7373715667010965`*^9}, 3.7375431825703335`*^9, {
   3.7375433357886353`*^9, 3.7375433368391895`*^9}, {3.7375435954551983`*^9, 
   3.7375435956179504`*^9}, {3.7375438499809356`*^9, 3.737543901337414*^9}, {
   3.7375441336830454`*^9, 3.73754413487071*^9}, {3.7375441931621714`*^9, 
   3.7375443357532473`*^9}, {3.737711898892106*^9, 3.7377119028908124`*^9}, {
   3.7377963402171297`*^9, 3.7377963512944965`*^9}, {3.7377964022966194`*^9, 
   3.737796405608918*^9}, {3.7377965747504964`*^9, 3.7377965830936522`*^9}, {
   3.737866956465351*^9, 3.7378669660115824`*^9}, {3.737867276825032*^9, 
   3.737867277278127*^9}, {3.7380435475216417`*^9, 3.738043563192394*^9}, {
   3.7380436045665216`*^9, 3.738043629580367*^9}, {3.7380437656079903`*^9, 
   3.7380437937622395`*^9}, {3.7383101637294703`*^9, 3.738310173025692*^9}, {
   3.7383108237738886`*^9, 3.738310823852008*^9}, {3.738311692825864*^9, 
   3.738311746103382*^9}, {3.738312681755679*^9, 3.7383126836774387`*^9}, {
   3.7385035949494166`*^9, 3.7385035992630196`*^9}, {3.738582031202426*^9, 
   3.7385820474981704`*^9}, {3.7385820883861156`*^9, 3.73858209068948*^9}, {
   3.7385821223107724`*^9, 3.738582155324052*^9}, 3.7385822619459114`*^9, {
   3.7385834010168095`*^9, 3.7385834320146294`*^9}, {3.7385835391535597`*^9, 
   3.7385835513870945`*^9}, {3.738583608432929*^9, 3.7385836418952107`*^9}, 
   3.7386475024544277`*^9, {3.7391641290208683`*^9, 3.739164134895439*^9}, {
   3.7391646119628687`*^9, 3.7391646483821936`*^9}, {3.739164962630412*^9, 
   3.7391649806135254`*^9}, {3.7392507445263867`*^9, 
   3.7392507794457216`*^9}, {3.739258346345415*^9, 3.7392583611568375`*^9}, 
   3.7392584379998937`*^9, 3.7392586211897564`*^9, {3.7434863500975666`*^9, 
   3.743486350910001*^9}, {3.743486620037018*^9, 3.7434866201620073`*^9}, 
   3.743493024016291*^9, {3.7443641068532143`*^9, 3.7443642315472183`*^9}, {
   3.865486134246979*^9, 3.865486135506362*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"2e10255b-cdcc-408b-a2b4-44850546a174"]
}, Closed]],

Cell[CellGroupData[{

Cell["Compute all positions in the PDR (run this):", "Subsection",
 CellChangeTimes->{{3.8654864404688993`*^9, 3.8654864716054335`*^9}, {
  3.865494974924683*^9, 
  3.8654949778816786`*^9}},ExpressionUUID->"6ee41e2d-da5d-4daf-b9b2-\
e7ce557ef1b6"],

Cell["First we import the spectroscopic data:", "Text",
 CellChangeTimes->{{3.865487047543195*^9, 
  3.8654870602055173`*^9}},ExpressionUUID->"da3ae3a6-7dd2-4c5d-b555-\
35f223c5d1b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"loadLambda", "[", 
   RowBox[{"\"\<CO\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$lamdaDir", ",", "\"\<data_CO.dat\>\""}], "}"}], "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadLambda", "[", 
   RowBox[{"\"\<13CO\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$lamdaDir", ",", "\"\<data_CO.dat\>\""}], "}"}], "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadLambda", "[", 
   RowBox[{"\"\<OI\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$lamdaDir", ",", "\"\<data_OI.dat\>\""}], "}"}], "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadLambda", "[", 
   RowBox[{"\"\<CII\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$lamdaDir", ",", "\"\<data_CII.dat\>\""}], "}"}], "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadLambda", "[", 
   RowBox[{"\"\<CI\>\"", ",", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"$lamdaDir", ",", "\"\<data_CI.dat\>\""}], "}"}], "]"}]}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadLambda", "[", 
   RowBox[{
   "\"\<CH+\>\"", ",", 
    "\"\<C:\\\\Users\\\\roell\\\\OneDrive\\\\Dokumente_Uni\\\\Projekte\\\\PDR\
\\\\PyPDR\\\\PyPDR_270614\\\\data_CH+.dat\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadLambda", "[", 
   RowBox[{
   "\"\<CH\>\"", ",", 
    "\"\<C:\\\\Users\\\\roell\\\\OneDrive\\\\Dokumente_Uni\\\\Projekte\\\\PDR\
\\\\PyPDR\\\\PyPDR_270614\\\\data_CH.dat\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loadLambda", "[", 
   RowBox[{
   "\"\<HCO+\>\"", ",", 
    "\"\<C:\\\\Users\\\\roell\\\\OneDrive\\\\Dokumente_Uni\\\\Projekte\\\\PDR\
\\\\PyPDR\\\\PyPDR_270614\\\\data_HCO+.dat\>\""}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7348604113074884`*^9, 3.7348604243481073`*^9}, {
  3.865487099775529*^9, 3.8654871684599752`*^9}, {3.865496158251633*^9, 
  3.8654961584292*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"0dda4a01-7244-42d7-8be5-c2b6b3fa8588"],

Cell["\<\
Then, we start by globally setting the physical parameters of the PDR and by \
initializing the output arrays. \
\>", "Text",
 CellChangeTimes->{{3.865486968893485*^9, 3.8654869872744875`*^9}, {
  3.8654870184830594`*^9, 3.8654870377016716`*^9}, {3.8654871717220926`*^9, 
  3.865487173342331*^9}},ExpressionUUID->"cbf82edd-06c2-4fd4-95d2-\
c6bdb00cf4d6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Avmin", "=", 
   SuperscriptBox["10", 
    RowBox[{"-", "7"}]]}], ";", "    ", 
  RowBox[{"(*", " ", 
   RowBox[{"minimal", " ", "visual", " ", "extinction"}], " ", "*)"}], "\n", 
  RowBox[{"Avmax", "=", "30.0"}], ";", "   ", 
  RowBox[{"(*", " ", 
   RowBox[{"maximal", " ", "visual", " ", "extinction"}], " ", "*)"}], "\n", 
  RowBox[{"npoint", "=", 
   RowBox[{"Avstep", "=", "500"}]}], ";", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"number", " ", "of", " ", "spatial", " ", "steps"}], " ", "*)"}], 
  "\n", 
  RowBox[{"ngas", "=", 
   SuperscriptBox["10", "3"]}], ";", "    ", 
  RowBox[{"(*", 
   RowBox[{"total", " ", "gas", " ", "density", " ", "in", " ", 
    SuperscriptBox["cm", 
     RowBox[{"-", "3"}]]}], " ", "*)"}], " ", "\[IndentingNewLine]", "\n", 
  RowBox[{"G0", "=", 
   SuperscriptBox["10", "1"]}], ";", "   ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "FUV", " ", "intensity", " ", "in", " ", "units", " ", "of", " ", "Habing",
     " ", 
    RowBox[{"(", 
     RowBox[{"Habing", " ", "1978"}], ")"}]}], " ", "*)"}], " ", 
  "\[IndentingNewLine]", 
  RowBox[{"tchem", "=", 
   RowBox[{"3.16227766", " ", 
    SuperscriptBox["10", "16"]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"zeta", "=", 
   RowBox[{"5.0", " ", 
    SuperscriptBox["10", 
     RowBox[{"-", "17"}]]}]}], ";", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Cosmic", " ", "ray", " ", "ionization", " ", "rate", " ", "in", " ", 
    SuperscriptBox["s", 
     RowBox[{"-", "1"}]]}], " ", "*)"}], "\n", 
  RowBox[{"dv", "=", "1.0"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Doppler", " ", "line", " ", "width", " ", "of", " ", "the", " ", 
    "cooling", " ", "lines", " ", "in", " ", "km", " ", 
    SuperscriptBox["s", 
     RowBox[{"-", "1"}]]}], " ", "*)"}], "\n", 
  RowBox[{"Tbg", "=", "2.73"}], ";", "   ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "temperature", " ", "of", " ", "the", " ", "cosmic", " ", "microwave", " ",
     "background"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Tgasfix", "=", "50"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"(", "fixed", ")"}], " ", "gas", " ", "temnperature"}], "*)"}], 
  "\n", 
  RowBox[{"Tdustfix", "=", "20"}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"(", "fixed", ")"}], " ", "dust", " ", "temperature"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"AVGrid", "=", 
   RowBox[{"logspace", "[", 
    RowBox[{"Avmin", ",", "Avmax", ",", "Avstep"}], "]"}]}], ";", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"log", " ", "grid", " ", "of", " ", "AV", " ", "positions"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ds", "=", 
   RowBox[{"Prepend", "[", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"Differences", "[", "AVGrid", "]"}], "*", "1.59", " ", 
       SuperscriptBox["10", "21"]}], "ngas"], ",", "0"}], "]"}]}], ";", "   ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "convering", " ", "the", " ", "AV", " ", "grid", " ", "to", " ", 
    "distances", " ", "in", " ", "cm"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Clear", "[", 
   RowBox[{"tau", ",", "sb"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SolveTemp", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"abu", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", "nspecies"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"col", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", "nspecies"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"temp", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", "2"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hcrate", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", "16"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hctot", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", "3"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"temp", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "=", "Tgasfix"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"SolveTemp", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"t0", "=", 
       RowBox[{"12.2", "*", 
        SuperscriptBox["G0", ".2"]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tau100", "=", 
       RowBox[{"2.7", " ", 
        SuperscriptBox["10", "2"], 
        FractionBox["G0", 
         SuperscriptBox["t0", "5"]]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8.9", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "11"}]], "3.", " ", 
           SuperscriptBox["10", "15"], " ", "G0", " ", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "1.8"}], " ", "AVGrid"}], "]"}]}], "+", 
          SuperscriptBox["2.7", "5"], "+", 
          RowBox[{"3.4", " ", 
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]], 
           RowBox[{"(", 
            RowBox[{"0.42", "-", " ", 
             RowBox[{"Log", "[", 
              RowBox[{"3.5", " ", 
               SuperscriptBox["10", 
                RowBox[{"-", "2"}]], "tau100", "*", "t0"}], "]"}]}], ")"}], 
           "*", "tau100", " ", 
           SuperscriptBox["t0", "6."]}]}], ")"}], ".2"]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"temp", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "=", "Tdustfix"}]}], "]"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ntcalls", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", "tau", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tau", "[", "\"\<CO\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<CO\>\"", "]"}]}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tau", "[", "\"\<13CO\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<13CO\>\"", "]"}]}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tau", "[", "\"\<CI\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<CI\>\"", "]"}]}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tau", "[", "\"\<CII\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<CII\>\"", "]"}]}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tau", "[", "\"\<OI\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<OI\>\"", "]"}]}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tau", "[", "\"\<CH+\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<CH+\>\"", "]"}]}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tau", "[", "\"\<CH\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<CH\>\"", "]"}]}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tau", "[", "\"\<HCO+\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<HCO+\>\"", "]"}]}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sb", "[", "\"\<CO\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<CO\>\"", "]"}]}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sb", "[", "\"\<13CO\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<13CO\>\"", "]"}]}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sb", "[", "\"\<CI\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<CI\>\"", "]"}]}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sb", "[", "\"\<CII\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<CII\>\"", "]"}]}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sb", "[", "\"\<OI\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<OI\>\"", "]"}]}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sb", "[", "\"\<CH+\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<CH+\>\"", "]"}]}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sb", "[", "\"\<CH\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<CH\>\"", "]"}]}]}], "}"}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sb", "[", "\"\<HCO+\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"transitions", "[", "\"\<HCO+\>\"", "]"}]}]}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pop", "[", "\"\<CO\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"levels", "[", "\"\<CO\>\"", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pop", "[", "\"\<13CO\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"levels", "[", "\"\<13CO\>\"", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pop", "[", "\"\<CI\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"levels", "[", "\"\<CI\>\"", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pop", "[", "\"\<CII\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"levels", "[", "\"\<CII\>\"", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pop", "[", "\"\<OI\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"levels", "[", "\"\<OI\>\"", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pop", "[", "\"\<CH+\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"levels", "[", "\"\<CH+\>\"", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pop", "[", "\"\<CH\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"levels", "[", "\"\<CH\>\"", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pop", "[", "\"\<HCO+\>\"", "]"}], "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", 
      RowBox[{"npoint", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"levels", "[", "\"\<HCO+\>\"", "]"}]}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.734861601649514*^9, 3.7348617152852774`*^9}, {
   3.734861768968948*^9, 3.7348618381358843`*^9}, {3.734861892225684*^9, 
   3.7348619400191593`*^9}, {3.7348640464491415`*^9, 
   3.7348640484803066`*^9}, {3.7348641355756574`*^9, 
   3.7348641712960453`*^9}, {3.734864230137117*^9, 3.7348642409644294`*^9}, {
   3.7348644559433928`*^9, 3.734864565482366*^9}, {3.734864668234586*^9, 
   3.734864743549882*^9}, {3.7348647840938516`*^9, 3.734864814622924*^9}, {
   3.734864853729488*^9, 3.734864877665242*^9}, {3.734864938067212*^9, 
   3.734864981890442*^9}, {3.734865014936187*^9, 3.73486524451344*^9}, {
   3.7350343073683696`*^9, 3.7350343098572903`*^9}, {3.7350344474744005`*^9, 
   3.735034480612576*^9}, {3.735034564653212*^9, 3.735034599635002*^9}, 
   3.7350349195777884`*^9, {3.735034975848317*^9, 3.7350350100176306`*^9}, {
   3.7350351430390244`*^9, 3.7350352362821074`*^9}, {3.7350354191236258`*^9, 
   3.7350354776036673`*^9}, {3.7350356000483637`*^9, 
   3.7350356075009828`*^9}, {3.735452517514008*^9, 3.7354525462774982`*^9}, {
   3.7354533594005585`*^9, 3.735453370868424*^9}, {3.735453408146909*^9, 
   3.735453435488611*^9}, {3.73545351410635*^9, 3.7354535170066442`*^9}, {
   3.7354535734629335`*^9, 3.7354535889149213`*^9}, {3.7354540175180435`*^9, 
   3.735454057030731*^9}, {3.735454211207941*^9, 3.7354543793724995`*^9}, {
   3.7354544378525143`*^9, 3.7354544513671303`*^9}, {3.735454788493452*^9, 
   3.735454795946043*^9}, {3.73545530362043*^9, 3.735455382663742*^9}, {
   3.7354555886519966`*^9, 3.7354556637293625`*^9}, {3.7354557238754272`*^9, 
   3.7354557721218586`*^9}, {3.7354564843973346`*^9, 
   3.7354566571520176`*^9}, {3.735456769128063*^9, 3.7354568978217125`*^9}, {
   3.7354717757307796`*^9, 3.7354718132279997`*^9}, {3.735471890550393*^9, 
   3.7354718946750836`*^9}, {3.7354719304849586`*^9, 
   3.7354719972334633`*^9}, {3.735472039789318*^9, 3.7354721235956306`*^9}, {
   3.7354721622802362`*^9, 3.735472182544359*^9}, {3.735472337991021*^9, 
   3.7354725135439816`*^9}, {3.7354725800859237`*^9, 
   3.7354726603612275`*^9}, {3.73547270220055*^9, 3.735472780210971*^9}, {
   3.7354728295666904`*^9, 3.735472831160321*^9}, {3.735473068581156*^9, 
   3.73547314010711*^9}, {3.735473183322652*^9, 3.7354732046335754`*^9}, {
   3.7354733757146378`*^9, 3.7354735767713327`*^9}, {3.7354737969737434`*^9, 
   3.7354738138943653`*^9}, {3.7354738653124204`*^9, 3.735473914574397*^9}, {
   3.735534631157817*^9, 3.735534634188844*^9}, {3.7355346999339685`*^9, 
   3.7355347225416613`*^9}, {3.73553482189368*^9, 3.735534904356311*^9}, {
   3.7355350314875107`*^9, 3.735535043845995*^9}, 3.7355351012167134`*^9, {
   3.735535146504849*^9, 3.7355351492077775`*^9}, {3.7355352838921432`*^9, 
   3.7355352967193255`*^9}, {3.7355353494654374`*^9, 
   3.7355353779008083`*^9}, {3.7355358504438925`*^9, 
   3.7355358532561846`*^9}, {3.7355359102519736`*^9, 
   3.7355359358125744`*^9}, {3.7355359864494514`*^9, 
   3.7355360093383636`*^9}, {3.7355361115339127`*^9, 
   3.7355364940368195`*^9}, {3.7355365467829*^9, 3.7355365523918576`*^9}, 
   3.7355366090907803`*^9, {3.7355366513064*^9, 3.735536674398451*^9}, {
   3.735536748471085*^9, 3.7355367523926687`*^9}, {3.7355368229036083`*^9, 
   3.7355368242160273`*^9}, {3.7355368580591507`*^9, 3.735536873323642*^9}, {
   3.735536916601677*^9, 3.73553692980383*^9}, {3.7355369864558687`*^9, 
   3.7355371082749915`*^9}, {3.7355371916778717`*^9, 3.735537211535771*^9}, {
   3.7355372527358418`*^9, 3.735537278327688*^9}, {3.7355373338704524`*^9, 
   3.735537338651353*^9}, {3.735537409224242*^9, 3.7355374397844715`*^9}, {
   3.735538554914171*^9, 3.7355385596013527`*^9}, {3.7355385985203233`*^9, 
   3.735538619674997*^9}, {3.735543211032237*^9, 3.7355432116727843`*^9}, {
   3.735543319292947*^9, 3.7355433203553677`*^9}, {3.7355434879990845`*^9, 
   3.7355434973421392`*^9}, {3.735543705026163*^9, 3.7355437159159794`*^9}, {
   3.735543848163816*^9, 3.7355438514135847`*^9}, {3.735543896836899*^9, 
   3.7355439143043585`*^9}, {3.7355440199527273`*^9, 3.735544029186386*^9}, {
   3.735544059231035*^9, 3.7355440751461954`*^9}, {3.7355442331283045`*^9, 
   3.7355442496114845`*^9}, {3.7355442933113575`*^9, 
   3.7355443149972324`*^9}, {3.735544384288969*^9, 3.735544416520958*^9}, {
   3.735544512965906*^9, 3.7355445160281796`*^9}, {3.7355522506466494`*^9, 
   3.7355522577086325`*^9}, {3.73555232248847*^9, 3.735552328816126*^9}, {
   3.735552632656597*^9, 3.7355526360469613`*^9}, 3.7355530980269003`*^9, {
   3.735553177521027*^9, 3.7355531852548046`*^9}, {3.7355532477077274`*^9, 
   3.7355532482076993`*^9}, {3.7355533384509993`*^9, 
   3.7355533426225643`*^9}, {3.7355571050659275`*^9, 3.735557154062286*^9}, {
   3.735557196387274*^9, 3.735557211636147*^9}, {3.7355572435087895`*^9, 
   3.7355572611637526`*^9}, 3.7355573010982637`*^9, 3.735621869297844*^9, 
   3.7356228206546917`*^9, {3.7356230048910327`*^9, 3.7356230181713276`*^9}, 
   3.7356251270437164`*^9, {3.7356290191192937`*^9, 3.735629030759078*^9}, {
   3.735987852546535*^9, 3.7359878548432355`*^9}, 3.73598823161218*^9, {
   3.736079716126728*^9, 3.736079728000843*^9}, {3.736079763076369*^9, 
   3.7360797637169404`*^9}, {3.7360807887264533`*^9, 3.736080838177075*^9}, {
   3.7360821098813763`*^9, 3.736082113474852*^9}, {3.7360840741897573`*^9, 
   3.736084076298975*^9}, {3.7360841231984634`*^9, 3.736084123651554*^9}, {
   3.736168011227816*^9, 3.736168014831603*^9}, {3.736224608374329*^9, 
   3.736224608800686*^9}, {3.7362285493577614`*^9, 3.7362285587582283`*^9}, {
   3.736232517423706*^9, 3.736232518379774*^9}, {3.736238702073822*^9, 
   3.7362387123626575`*^9}, {3.7362488440002613`*^9, 3.7362488506924076`*^9}, 
   3.7364941022610016`*^9, {3.736586733708536*^9, 3.7365867439532485`*^9}, {
   3.736586865347204*^9, 3.73658686874848*^9}, {3.7365880668494387`*^9, 
   3.736588079326085*^9}, {3.736588137770916*^9, 3.7365881594842725`*^9}, {
   3.736660482944706*^9, 3.7366604903899307`*^9}, {3.7366793992352743`*^9, 
   3.7366794490715246`*^9}, {3.7371939402505074`*^9, 
   3.7371939406723504`*^9}, {3.73728045500342*^9, 3.7372804553315477`*^9}, {
   3.7373667665948544`*^9, 3.7373669459722743`*^9}, {3.7373669772668114`*^9, 
   3.7373670019212437`*^9}, {3.7373670559647017`*^9, 
   3.7373671816273346`*^9}, {3.7373675725802975`*^9, 
   3.7373676208778715`*^9}, {3.7373677987241106`*^9, 3.737367820628772*^9}, {
   3.7373715630919876`*^9, 3.7373715667010965`*^9}, 3.7375431825703335`*^9, {
   3.7375433357886353`*^9, 3.7375433368391895`*^9}, {3.7375435954551983`*^9, 
   3.7375435956179504`*^9}, {3.7375438499809356`*^9, 3.737543901337414*^9}, {
   3.7375441336830454`*^9, 3.73754413487071*^9}, {3.7375441931621714`*^9, 
   3.7375443357532473`*^9}, {3.737711898892106*^9, 3.7377119028908124`*^9}, {
   3.7377963402171297`*^9, 3.7377963512944965`*^9}, {3.7377964022966194`*^9, 
   3.737796405608918*^9}, {3.7377965747504964`*^9, 3.7377965830936522`*^9}, {
   3.737866956465351*^9, 3.7378669660115824`*^9}, {3.737867276825032*^9, 
   3.737867277278127*^9}, {3.7380435475216417`*^9, 3.738043563192394*^9}, {
   3.7380436045665216`*^9, 3.738043629580367*^9}, {3.7380437656079903`*^9, 
   3.7380437937622395`*^9}, {3.7383101637294703`*^9, 3.738310173025692*^9}, {
   3.7383108237738886`*^9, 3.738310823852008*^9}, {3.738311692825864*^9, 
   3.738311746103382*^9}, {3.738312681755679*^9, 3.7383126836774387`*^9}, {
   3.7385035949494166`*^9, 3.7385035992630196`*^9}, {3.738582031202426*^9, 
   3.7385820474981704`*^9}, {3.7385820883861156`*^9, 3.73858209068948*^9}, {
   3.7385821223107724`*^9, 3.738582155324052*^9}, 3.7385822619459114`*^9, {
   3.865487211411046*^9, 3.8654873520178814`*^9}, {3.8654888770265074`*^9, 
   3.865488953535056*^9}, {3.8654891113196836`*^9, 3.8654891117951636`*^9}, {
   3.8654955080810213`*^9, 3.8654955238504815`*^9}, {3.865495558440662*^9, 
   3.8654955648885374`*^9}, 3.8654958307147055`*^9, 3.8654961269729004`*^9},
 CellLabel->
  "In[442]:=",ExpressionUUID->"3a17f5f2-de47-4cea-873b-b3bd5750fca5"],

Cell[TextData[{
 StyleBox["calculateHeatingCooling",
  FontFamily->"Courier New",
  FontWeight->"Normal"],
 " is the main routine to solve the heating & cooling balance ( and the \
chemistry) at a certain position ",
 StyleBox["index",
  FontFamily->"Courier New",
  FontWeight->"Normal"],
 " in the cloud. The solution of  the problem at position ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "c55de987-b8f3-4bb7-844d-dc2f845f1a11"],
 " requires the solution at position ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "-", "1"}], TraditionalForm]],ExpressionUUID->
  "ec427fb7-1212-4185-8875-0f09eb5972d5"],
 ". Therefore we have to compute the solution step-wise starting at 1.     "
}], "Text",
 CellChangeTimes->{{3.8654861928876677`*^9, 3.8654862339545994`*^9}, {
   3.8654862662233*^9, 3.865486324397025*^9}, {3.865486377952034*^9, 
   3.865486430595523*^9}, 
   3.8654977906830616`*^9},ExpressionUUID->"f0c1c362-8ef2-4466-970d-\
bfa06dc4a746"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Monitor", "[", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"Clear", "[", "func", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"func", "[", 
           RowBox[{"t_", "?", "NumericQ"}], "]"}], ":=", 
          RowBox[{"calculateHeatingCooling", "[", 
           RowBox[{"t", ",", "istep"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"func", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"istep", ",", "1"}], "]"}], "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"istep", ">", "1"}], ",", 
           RowBox[{
            RowBox[{"col", "[", 
             RowBox[{"[", "istep", "]"}], "]"}], "=", 
            RowBox[{
             RowBox[{"col", "[", 
              RowBox[{"[", 
               RowBox[{"istep", "-", "1"}], "]"}], "]"}], "+", 
             RowBox[{
              RowBox[{"abu", "[", 
               RowBox[{"[", "istep", "]"}], "]"}], "*", 
              RowBox[{"ds", "[", 
               RowBox[{"[", "istep", "]"}], "]"}]}]}]}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"istep", ",", "1", ",", "Avstep"}], "}"}]}], "]"}], ",", 
      RowBox[{"General", "::", "munfl"}]}], "]"}], ",", "istep"}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{3.8654955923235626`*^9, 3.865496181704034*^9},
 CellLabel->
  "In[478]:=",ExpressionUUID->"f1ea9e81-ccd6-4c14-b9cb-4be4a836066c"],

Cell["\<\
The result of the computations is stored in the global variables:\
\>", "Text",
 CellChangeTimes->{{3.8654865271514397`*^9, 
  3.865486547461275*^9}},ExpressionUUID->"1ea8dbf1-f8d9-4f50-ab2e-\
b14a10f2f480"],

Cell["temp\tgas temperatures for all positions", "ItemParagraph",
 CellChangeTimes->{{3.8654865576677723`*^9, 
  3.8654865784672728`*^9}},ExpressionUUID->"af25edab-5cdd-42b4-807d-\
16fa3649bb05"],

Cell["abu\tchemical abundances for all species at all positions", \
"ItemParagraph",
 CellChangeTimes->{{3.8654865576677723`*^9, 
  3.8654866074765215`*^9}},ExpressionUUID->"cbcdd9fa-0525-4ccd-b7cd-\
ac57c90d7da4"],

Cell["col\tcolumn densities for all species at all positions", "ItemParagraph",
 CellChangeTimes->{{3.8654865576677723`*^9, 3.8654866194416237`*^9}, {
  3.8654867870949373`*^9, 
  3.8654867870960393`*^9}},ExpressionUUID->"0d24649b-fe83-411f-8608-\
ae82a2d1646e"],

Cell["\<\
sb\tsurface brightness (accumulated), i.e. emission of the PDR\
\>", "ItemParagraph",
 CellChangeTimes->{{3.8654865576677723`*^9, 3.8654866194416237`*^9}, {
  3.8654867896215935`*^9, 
  3.8654868410993843`*^9}},ExpressionUUID->"8088a5fd-4ddf-4a10-a3ef-\
1c40d05faa11"],

Cell["hcrate\theating & cooling rates  at all positions", "ItemParagraph",
 CellChangeTimes->{{3.8654865576677723`*^9, 3.8654866194416237`*^9}, {
  3.8654867896215935`*^9, 
  3.865486865469875*^9}},ExpressionUUID->"3e06c56a-ec03-4dc4-9c1d-\
10789203d164"],

Cell["hctot\ttotal heating and cooling rate at all positions", "ItemParagraph",
 CellChangeTimes->{{3.8654865576677723`*^9, 3.8654866194416237`*^9}, {
  3.8654867896215935`*^9, 
  3.8654868784538355`*^9}},ExpressionUUID->"6a2bb2f4-651e-4ffd-9b62-\
a95898773683"],

Cell["tau\toptical depths for all emission lines at all positions", \
"ItemParagraph",
 CellChangeTimes->{{3.8654865576677723`*^9, 3.8654866194416237`*^9}, {
  3.8654867896215935`*^9, 
  3.8654868940207376`*^9}},ExpressionUUID->"c1c22764-9626-4e82-8894-\
49ab7ef90627"],

Cell["pop\tenergy level population for all considered coolants.", \
"ItemParagraph",
 CellChangeTimes->{{3.8654865576677723`*^9, 3.8654866194416237`*^9}, {
  3.8654867896215935`*^9, 
  3.865486918379343*^9}},ExpressionUUID->"0332dc39-f89a-4220-87b5-\
984dc3f40140"],

Cell["Plot some abundances:", "Text",
 CellChangeTimes->{{3.865496526307769*^9, 
  3.865496534064275*^9}},ExpressionUUID->"a096b550-39f4-42ee-ab88-\
93a1e49195a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"AVGrid", ",", 
         RowBox[{"abu", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"getSpecies", "[", "#", "]"}]}], "]"}], "]"}]}], "}"}], 
       "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<H\>\"", ",", "\"\<H2\>\"", ",", "\"\<C+\>\"", ",", "\"\<C\>\"", 
       ",", "\"\<CO\>\"", ",", "\"\<CH+\>\"", ",", "\"\<CH\>\"", ",", 
       "\"\<HCO+\>\""}], "}"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<H\>\"", ",", "\"\<H2\>\"", ",", "\"\<C+\>\"", ",", "\"\<C\>\"", 
      ",", "\"\<CO\>\"", ",", "\"\<CH+\>\"", ",", "\"\<CH\>\"", ",", 
      "\"\<HCO+\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", "30"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "6"}]], ",", 
        SuperscriptBox["10", "6"]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"Axes", "->", "False"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(A\), \(V\)]\)\>\"", ",", 
      "\"\<density (\!\(\*SuperscriptBox[\(cm\), \(-3\)]\))\>\""}], "}"}]}]}],
   "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8654964106273856`*^9, 3.865496515749384*^9}},
 CellLabel->
  "In[484]:=",ExpressionUUID->"cd55447c-b55f-4feb-97e1-1b4ab43d51db"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwt13k0VO8fwPGxr9mXMcQMY+xLSWTpPiEUylaRtRBKouxURKWyhdIeKSmF
QinLfCqVr51UikJkS5asRfnN3Pn9Ned17j3POfee+byf+1D2HnL0YycQCLNs
BALz98j9jUnG8rqw1igx3C1PFmVuH501kNCFh2tYLp3N8lvHrwvZsiy3Xt74
QZegC4acLHcf7UjdPa4DpeMncBPrVQ45demAyzuWd4odtbet04HBZyxnuXes
2VyqA103WG4rUBHfeE0HDp5gWWg6bnZ9sg4892PZxrjjvU6YDmhYsZx8UuWp
qrcOiKuy/Lo17hLFVgdquVnmIHVEkwx1YO/3BNzIV8VNnKoD+S9YPlocZyIo
ogM3rrFctdi+mmtZG0wiWF40U1n5O6wN5dtY1k+N65t/pw3tVJYPf2x/MUnX
hvHf8az3Q1HJHynSBq1mln8eiEvqz9GGnTdYVn/S7vc5URtmDrIcQFCxendI
G34bsXxna5xqk5s22HKz/C27ne+1lTZ0th7HrdBL+1Gjpw1GOSx7qMU1PVHQ
Bqo7y1eOtD8sEdCGM/Isf6yhpRcuaEHB12O4JXjjQvIGtODQNZYdHdsdrrRq
QdwultOv0fSyqrRgVpjlpqFYiZS7WvCh7ihu/jXtc0lZWmARybJVLO3j0eNa
sJXGctLr2MqIA1qg2xGH+6Vw++VDu7TgcQzLK6602ABzLRAls2xyO9Z9j44W
uLyIxR090Wa6W1YLej1ZfmpIU3Di0YKrizG4Z0/EEmxnNIGSxvKa5rZ+i15N
oCqwHCxNe2XaqAlaD6JxP9gTe3v9U03YsY7l0aK2kzr5mvDuaRRu2ryyv2q6
Jizqs+yLYq0psZogUxKJO+9smxrJXxOyFFn+2qksIO6kCSkZEbjlFGLHBTBN
yF0Mx+0a2NbMqaEJSbtZvlimXPJXirHekzDcnX9jMubZNYEowLKodVvo5IQG
ZLoewb0tU9lp5LMGSOUexn2uJ2Zd/xsNcOoNxV1Pa5P8/FgDpKVZ5g5VXui4
oQEOliG4zatiuhrPasCzoEO447nantVFaIDcuWDctduVr9bs1YA3Nw/iXroc
E/dkG2P9oiDchoOtHiVGGlD94ADuCG1lrJCmAUP5+3GXRcWQ88Q0wDIjEPfU
y1a2K//U4WRoAG7tVcoDmWPqkGDpj/vArpi6cx/UwVxkH+7CvNY7SS/VIaDJ
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
fzVRRkSC64Tfll3lgsj0PTveXCYigoevbY4NF9gkauXNHiOi2ZPP2mOWOMF8
K2l1hA8RjRcL7fIs4oSZ76U0Kysi6vvo07PJjRNirvWw+aoTUSfh2R5lAU7I
oLz/WC9IRE1qQsO8VRxQIMD/JHRCGoGjT9D4fg5wvS+SurtVGpXHVk63kjjg
vNFFneMl0qjw9qrIsgZ2uCDm4tCdJo1ym/cuX4xhh8LnlFP7D0qj7PmnCTHq
7GAv0oVUbaRRssIqHs/PbJD5Ma1DWFUaxVvvTdl0lg1Unz4MlOOURmGhT0WV
jdiAQlYR3dIrhQKuCObwjhHA5m1dScYzKeT+ao/c+GUCTKul8UxkSiHn8Sd5
rVsIMFtlWeF2QAplqBO37ZtZoe9qk9TtNJNCUXEvXbScVuiTpxz+c5BhrNcS
5DP7+B99KCvqQcuEJLInSwdXif2jC7vt6bV4JYkMD7+IOnH4L936cYFZ8UVJ
RK47kLilY5kufs0zkzNQEolISaWJrF2mL0nL+28ykkSL/nDp4/kl+tkobwNP
fknU92x//o3pP3SU6+3q/EkCtQlIFvs5/KGnhodwrb4rgSo96JWaj37TC94M
uzw6IoFySwJfzYj8pq/zeOnKj0mgZDaJluchi/SlHN4lMp8EinKq7UpoW6D3
flNTnGgXR953AgasdRfoQps9H+6/LI6sF8QmhDPm6frE7bHpXuLIcEvN4ofJ
OXr8M8OwHVRxRL7qz3Fj+xz97sGn2RXDYoj3p6iQX8ksPflv6p/Ce2JoamM1
UVN4lv54umxGdb8Y6svYpzQTPEOfmxQS0VETQ/XfRLSft/yiq/NsWl8xJIpK
11UZJmj/ordvk6yuuCWKck/5mVunTdMvCL8/oeEhipK7hLcJT0zRi3kKiWJS
oihE/bnLB7spujQn1uvXLIJKF+vfGLlN0hXtGwypiSIo49rqnnrSBP3OwKpq
GwMR5IUOT+/8PE63yxXur3wnjHQH33B/v/yD/lpku0qpvjAiJMvKHXEdo0tk
bGlLyhZCfRoha9hkRukSi24U86lVqLS1zjK9a5ieVubxY9l6FYo/IuO++tIQ
/aE69+GGG4LIWzo4tGjXd/qDOt2gxmkBpFP18tQG6UH6QvwmeVUzAcTmJX3t
7Ydv9JMBwSliGfyonT3o0Y6L/XT4WwRvu/nQowJ4M7Cjj77mQYbceWU+tJKt
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
KhSW/wc2ayqJ
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
C6El/znhs/DvnOXC/3f+/wdpEobB
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
NMpNn/v/z0v7wLNcpM1DJyz95/8BeuX/uA==
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
4si4/weZVXmP
         "]]}, {}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJw1VVlQk2cUTUAEK8giylKE0Jrkzx9FsHZkUT+lZbOyg4BQjVYCLVYBlwYr
slgiophQnIrVsjS4lV0KUiJ8V6EU0SJoh72YghCMrCFACEuaPvThznk5dzlz
Zs61PXIiIFKLQqF8oan/cGHY9e7vDC3IVwtuZBSwId3GQPdgDxUK3wvpq8pk
Q7LnkSt7Mqhgc37IYFUCG07FPTSmO1OBO2sfmXCUDdE/6l/Xk1Egl+/Vr+PH
hoiGw1ajNyiQc9IpucSFDUGj1QUvvCiQdH084gSTDULS3Ic7rcZGdb8I9q5l
A+/ck9DNgWr84u1HO3apSYhuPfaF4sEyfrBXnOn1jgQ/mtlxsckyLtQSVcV0
kuAY/5iXGr+EJ4KZMlEDCbTGmAteLxdxIlFwdKqMBKP1668abV3E3xUGcQJv
kaCMgpzOrAVM0b5t/jSdBMlvX4lyp1R4yv1dk/9pEtpWryuN9FfhyPAL+aOH
Saj5HNdsqpjHY4rsv3J8SMgv+7Jh2mgeHwm8eynYhYR0qmlrbawSexs49NoS
JPAC67tS2uawAwg7Fk1J4NyOHvS0n8McszbeEJUEzzmTcUPhLMYdpUU94yxw
9KpTdkzMYKfoCNfeXhbQbkZp5/rOaPRdnh1qZoHemPGayDIFtrIPi5yvYsHk
rkfmmwwVOMTXX99UxAKJkPvh9PFpLKzd575NyILmASO72lY5Dt8f5xmayILy
bWLHFDs5jv5eZn3+Kxbk8yM/8bw6hYX9VUWiEBakdxn6GI5PYv2VVFHTpyyI
JWtDO7wn8aXSpEtvHDT9yuYm5/AJvOfr+gcqaxYIb23oa7YcxzqqRbRSnwWH
dsdP7e8Zxek1QpsV8wTYv2laOXTjHXZOHdOfGiKAkv6+1ckwGd6o2Jf19CUB
EnasA9XiLRabfrYiAxNQ/qLRXdAlxZeXg7PsiglIPmkRsSFnGLP3yx0rcwjg
mB2PKwoZwqf9AzvWphGwRfyE72T2Bieb/krfF0cA9ZDZrT86BrBLOnoe8jkB
7VrHKoJ/+AfnDFcf3upFQMUdaBoMluBp/dBzndsIUF8jawbJfmz+TFbvSiMg
r+/VgPp+L47o/lN6YrVm38ZEAytWN+7+pkh6YJYJ6hiGo+O9DhxktVqlljCh
oPLFkSDmX1ic6YbDnzEBLfAyY++0Y2cTwaGYKg0/7dNYi89acdSN4vJNeUxw
XXf9d3+vp9gjZb32+XQmpBa+tczwaMTDFgHhJ+KYsBTFk3x3uR6fTrRKWHmA
CRT+hsszF3/FDq4tpz5xZYLO3rSY53q3cdpIdyOTZEJ/klK/z5KDlwheWrUx
E2Zdht/G6oiQNHJJplAyYGHZu8WDX4l+rskWyF4zQFdyz6bzUh2a3RQwUdDE
gGVJinNlUwM6tOO9BaKEAUn+W4bONjcj627zjKxsBlCf9AlcW/5E3kF1PvIE
BiRbuG3Q4bajpPbcBi6HAY/bb8pHhl8h6frAZGMPBlAy5H88j+pAM95HN1va
MSDF1eun8pEuNPlg+1TFOg1flRd/7cteRLGPWGu8TIc9lbMePNnfSBymKj0l
pQNU3VlT+rEEHZy3+cDuJR0kxgHzNmf+QVUmojtp9XSgHV8azKoeQEvijcrO
YjrsbrnXqj03iNxj+Td/+IkOHEbQb6e3D6HHPXa2H2bRIT9VLZJ+M4zmo60b
xy9q5vf/cjWsRorMN/sm3k+lw2vn/QnPlCOopX67oTKFDrbXqUd3OskQ7Qr/
lTFfc990sU9ZwjvUPDDWmCmgw2HfUCfb2lG0J5tWvS+PDnlF2huzVWNo5Gyu
9EIVHR7rlq3RcZlAnGPWHFkrHShbS86Jd06ijyt4z85M0sFIohWv+HsSPRJ3
97AsGEC7Ghq1+fwUAt1VbcVuDNi9ozSCay1Hr878qO2WzAA/mXZAXr0cjYzv
vGKh8YuTE+bRdXAalexys7v4AROS3ct2GKunUWvOxFnuNSYIFSu27s1TICJM
KhBYEpD/8wHmBTSDMM3j5OJtAsCv3OrR6xmk6hLe59qzoG1Zx2QmaRbp1Tn3
+D3U5EdxuK4dbQ6F5RvoFTqRQAmvWOTCHLrLTWzyfajJz1W68jyOEtX1xaaV
bGFDIB9/W0KZR///h38B1pMypg==
         "]]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[0.003666666666666667], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJwlzXtMU2cYBvDTCz09p5vjMqUsk2APQp0ZslIRnPq9jjiHJNoyt6DlUtlw
RgMUVDIv42JJbMlgnc5sZAsU6rroNi1tsUvGls+6DBfd0iBDnAaKqHgFYjlo
oaOe9vzx5skvT/K8y8qrCyuEBEHkchdJl1Jo/q8igKzhL9pbulbixnfPr4sL
B9DQ1zJV0743sGVGrNrSOYPWtE7fOZu2Alu7d6YbEYumTosm40RKjDWO1/tG
WZQ9eKVgikrHvoWYeLZhFu3KP2KX56Rh/086MiPlGfKfvlfDmJZjQtcT2o2f
oaIsT6FsNhXHUuTTTv1zlJT22EU3pOJMT/HEMBFE224fy9+TkoqhwnkrriuI
lm6aO3B9iMGaBOnAlo1z6MPmJWvNHQw2XCzpN47Nobh8Wt+xn8GN1a6+vqZ5
1NS6qurHQgZbllJOdlkIvVa38vqSXAY7rpT+kOENoZd21+99czmD8SH3d5+U
/48+2+77c2Ixg33p9AmrcAFl37vxSivN4Ol/y47f6F5A5201XQYhg4nm3qPx
eWH0NynYNxZS4FiVrLZgPIxy7vT7s4MKLDc4srwbCbg8vlM6NqvAKZt150a+
JGD9tl9vVrMKnJksWTE/RkC5RJF/YkaBc1iHLVElAI/XPRDLGa7qktXHBKBG
spT+gAJrbJJ2zYAA/OfaN3RwLjrck1CpEMLnstp0E2e9trjNXCuEs50601HO
BiVJ2b1CULX4TtVx/jTcY/TGiyB0sc26n3PjUPHCSLkIGshJVS1ny8/koXmn
CJTDzuM1nL9pdgYSRWJ4Z+TltRFbdSVV6vfFcO3tUGLEDpX0gcYmhsEzFiri
XyjXR5UBMbi+6hZFfNlfMmLOiwHjw62CiH0e6Q77yRj4dmIvEfFwm+uadzwG
kgLyqO9XlG4dzZJAvTkYNnCeXkf9NW+UQFHuVNTPE9x58kEJWKgnUUsflf6u
TiXhn/W8Y71UrvYACR79o6jl7W5X5R8k5B18HLXSUJbR8qoU6ky8MzfTZ+wf
S8E6/SDqnORe5pJbCm/d4vv32LKOUTEF1Zn8vuYqnRTaTsEqy2TUelvvSfn3
FBws4Ps9h/WLVrMUjF/i/xu0MrN2Ew2/JfN7jcoLoqpTNKhZvjeF9fUtd2n4
wMbvWYZkQftqGcxpeb8AscK7XQ==
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-6.907755278982122, -13.815510557964243`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
        "\"density (\\!\\(\\*SuperscriptBox[\\(cm\\), \\(-3\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(V\\)]\\)\"", TraditionalForm], 
        None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-6.907755278982137, 
      3.4011973816621555`}, {-13.815510557964274`, 13.815510557964274`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"H\"", "\"H2\"", "\"C+\"", "\"C\"", "\"CO\"", "\"CH+\"", "\"CH\"", 
       "\"HCO+\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8654964296566625`*^9, 3.865496470130938*^9}, 
   3.865496516466385*^9},
 CellLabel->
  "Out[484]=",ExpressionUUID->"0e978dde-64df-4405-9dde-6217fb8a6a93"]
}, Open  ]],

Cell["Plot the gas and dust temperature", "Text",
 CellChangeTimes->{{3.8654966017808876`*^9, 
  3.8654966214914875`*^9}},ExpressionUUID->"6eb1aea6-c5fa-4108-b559-\
a214bfc13477"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"AVGrid", ",", 
         RowBox[{"temp", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "#"}], "]"}], "]"}]}], "}"}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Tgas\>\"", ",", "\"\<Tdust\>\""}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", "30"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "10000"}], "}"}]}], "}"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"Axes", "->", "False"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(A\), \(V\)]\)\>\"", ",", 
      "\"\<temperature (K)\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.865496614231803*^9, 3.865496657837284*^9}},
 CellLabel->
  "In[487]:=",ExpressionUUID->"9571a0ac-fe6e-41de-bf01-63d14708fd8c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1: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
WHLhwjjJ1fCkR0Vq6+UpYu6zw1k3f/0l5oguyHWzgYv3vyheXvCHOCPPq2pE
Eo7ikW147jOJ/DvL285yJohdbnt2mWvD5hPSQxIJ48i/tWyy5ecY8l/z4Lu5
Axb6ISXuljdKPGxYKr9cAuYmuKuMeI8Q13RKaj1v+E2cr1PCPKsFZ0S6mZrH
/UL+NontEkPDxD5Ln9u1WMH5kzWvNzj8JE64vri9RnGI2Nn45K89HweJtbtf
z+tJ+05MiVqkdMr+G/Iu81nFozCA9zdWb4lv6yMOO6XguDi1F/WT8z7xYG8P
8cqSysj1ct3EPM5y19+0dBI38R4t2H2lg7ggp+J1124u8Vzy0uKupV+I09vf
dc7d+4TvMULnK2l+wPojakzm3RbizMLGA7vU3xMbTbFifXKasP78Jh8FiwZi
kwUpr2y2viU+lz2gGG1WTTzjweJGxJSjXpGLY8YuFBELbDt/hC10m/jLmUmx
dkUX4nG93gEfgSyj//fUrFWtWWQhsSD3LrX1YhnxLPfshsLXVcRnbFb2BNXU
EPNUtseb1NYThylsXizg3kT8suna7/7ed8SU6N9v2B4txGdNtt7I72/D+r/p
J5O9PhFvLBw3Y337TFzxOEc8dy2XmCtl+4fq30FM857puvykk9i49m4D30QX
sYvarmd+63qIM87NZfUF9OL9X+7H2Rf3EX/dsCewbrKfmJ7Cc8hg/TfkG3m4
PS/wO7HrDrv19OeDxOkP+BhJf39gf4J54gJ6P1GP1f+GlBgME0tyeU+OfoZp
cXYeK07/wn70cx3dl/wmtv7GZ5teDruk2pu1OY3gPLbk6UvNwQmj/Ku3pY9i
/7f2qYcbjWH/1vlKpV9hzqyA9NiZcdT7oYOgFm0C+R0Kpt0rYElhwd/pLpPE
2k8d+9oof5Df7VG7VCZsLSPUvG3jX2Kfl/vfhHfAYccLS0vPTiH/YuFHY/Rp
4vw6pztalXBFYNF1jwMzyK8ukpjBO0s8/J/zhQ+3YErE4xBp0znkXy160qIL
lvfJX1O5kWJMzsPMIffLZVh7yTzNqQ6YOZafJbeah9iY7bBE5xxsnTUvzboZ
tgsqkDmmzEvsYuMYd/Ek7KMhKJxTCbPmCsIrpfmIw1ocZ78cgBP+FQycegSn
RjwakePjJ85w2O+tsxPOXy00YJ0FFwsXHjw2Atdw93+5aCpAzHkqZJ+TBLfF
Fb6r7IL73Zy2f10zj3hYX/jtVDg8KVNkKv8eFvruVK7DECSWrBReb+MLy6cV
FR6rhjV8nLWiZYVQfzORezmHYOaSxypVRbD5mPPNr/zCqD9bRGF6F+yS9ThJ
/jbsGeQivnYM9rERvWizWQT11njC5/0PHDXncjq6B05oEf2Ts1aU+H994Z5f

         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.0055000000000000005`], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[CompressedData["
1:eJxF13c4lf//B/BjHHtvMs7hnGOvohS5b6mUlZYSRSoUScOmiBDJ6lNomGkb
aZBxXqGSTYMkI7KyIqOs3/v2+V6/z1/nelzXfe7rvu779Xq+3i+q86ldx1hJ
JNJvFhKJ+D370DjcUF4HXiazLujnceKJO4Z+rxPTgaLQ5nnC+b+Tjunx6ICr
950VN6YYf9Yh6UCV4/EVfw1uiT0wog2sGqtXLFWtfGp3mzaEVc39JWwrEmxj
WaUN1SJlK05yaNHdkq8Np5bPr7gpR1nU+JY20M8Yr1jgV9DvtVHakLlz/g9h
C8OWT9rntCEl7PmKoy4pv1Rx0oaCEY8Vv2kMSqZaakOAF3XFbDIt/jIG2uD8
q2WOMH5U2V6Upg33bEJXHJwbZMQnpA02nhorLplrliMvaIGs6sdZwnOblJcX
B7TA+5DfivVjg7pnPmiBy7DUis+0Nr8eZ2pB9L3nMyvvh6qcNfhICxY9rVc8
6h4U3nNDC3ZI9U4TVnvRfKw9TAvO+Z9dsRtJ2ezDKS0ocFn+TfiueZBKnb0W
xD6NWPH3a83cb8y0oEyTe8UKXYyfZWu0QPJexBThg6pBdS8UtMD359Ik4dSz
zU/yeLUg/83pFbeWMeLuz2qC71LnL8JiXEFeGb2aYO6wdcW7djXvTG3UBMes
exOE424x1iSVaELkP6wrrusPFLtyTxOkJm3HCfPoNk+HJ2nCJ+/sMcJmgYzW
4Aua0NQ+PEo4/E1gkY+7JuxtU11xhWBzyql9mlCleHiE8LIdI9DNVBPOu8f/
JGyUHehwWFsTypxeDhP2H2vaeGCVJgQ8+TRE+KUBQ2E3pyZs/zM8SPj3xUCS
5ZQGrB+cGSCsW9/Us7lLAx7K/Okn7CnJqNxYqwE6mr9+EH58ODB77UsNOFrU
2Ud46FHTJe0sDQCb172EGTN0V5U4DfCJSP5O+CgeuI0aqAH4jyM9hDOim1Rl
XDVA77diN+HOj3Re0d0akKz/qZOwrELgCC+mAY8ZAd8I2x1vqmdX1wB/TLiD
8PVCet6ihAbcnExpJ/xxMSB+hlUD+J6IfiEsvK3p9PiYOvR/Cm4lbJ1I3z3Y
rg7qDa2fCMd0BOj1vFWHyAnKR8LVjCbx9qfqwJWwv4Uwx2n6bMsddRhcCG4i
bFoS0FYbrQ4GAfENhEPITcVVPuqQaRZXR7h8B/1mmbM6yNzyryE8nxIQ9MJa
Ha7kWFcTNuhrPJi3QR3iY/nfEvbRomP3GeogeOp5JeFCvwBKhog6jDtueU14
oqKRJXVJDZ65l5YT1uKn9yYOq4HSNelSwu77AqpiPqtBe5N9MeH7GY13wyvU
YFTg4gvCP37SIoNz1cBPJ6aQsOLaADefVDXQ4vPJJ+wU0rj9VIQaDHmYPCF8
u4am7nZGDdSERx4QbhcL4Dt8SA0yH57LWckbx8ZRO3M1ePjtSybhvQ9ojbvW
qgETl0lbybMp/3wLRTUYs9e7uZI3GxsTNguowbb7jBuE+aNoZzf+VYUtceOJ
hM1b/Pes7VcF+onYqyt5I9uor92iCuahS5dX8saFJqlSrgrxvCaXCLMW+M9R
HqpCgubuEMLYfMMX6euqMDW3OpBw0BZaichFVchx7/Qm/CrO/xavpyqIntrt
RXj2S0Mw+wFV2NMad4KwHo3muLhFFXY7JxxdyRtPf3xGVxVGX+w9RDivqIE6
LqcKLEfb9xEeYaWxDXKrQmiX7M6VvLHy7+ueVoGTl2TMCbveaHjzpUcFWq43
bSKc3aN0r6VeBXINjAxX8kbdP6q2WAXazhxYs5I3Pg3Hq+6qwActFXXCDqBk
UZagAqlrMxUJp/D4a7wIVgGHNW+kCX/e08Cfd1wFdB/HCq3kTZrS+L29KlDE
PsdBeOeQX1O6iQo8DSQt6iFfXdNQkKKpApGqWZOE64KVkhKlVaBs6esAYe5q
v3MxZBVwqcjpILxVpGFv+C9lOCO03EQ43EFpXfA3ZVjY111F+HWOn5TPe2UI
/rKliPDSRP0fz+fKMJat9oiwkaHSV9cMZei5cfk2Yb9LfqVOscpw1v5gHOEX
jfW37fyVwdg5PYTwlLTShV3HlIHeb3masM5RPyeLncog0e9wmLBnbr3J5o3K
kKtUY0P40Zyi0kZVZXhDuYoRHtzkx75WXBkGZDM1CTNi639osSjDQ5FlGcJH
WhXfKY8yYPLZbU7C6VS/+5QvDBD28JlaQ+SNe/1l6TcM+LArtJPwqheK7iIF
DHBc86Ka8H6SnyXvbQawh/M9JXzdvF6T/TIDeo8EphJuuaYouHiOAZ43/oQS
FurynZh2YkBTeLAbYSvV+uYxSwYwdBatCEefVSwcMGBA8jrP1YSry3yvddMY
sL3xjThhMle99xchBkiVzc2uRt60S3FfywIdNu6ZbyMccsvXoHaQDi+9XhcR
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
TIE=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {-6.907755278982122, 0.}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox["\"temperature (K)\"", TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(V\\)]\\)\"", TraditionalForm], 
        None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-6.907755278982137, 3.4011973816621555`}, {0., 
      9.210340371976184}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"Tgas\"", "\"Tdust\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.0055000000000000005`", "]"}], 
                   ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.865496617083553*^9, {3.8654966518428917`*^9, 3.8654966584984646`*^9}},
 CellLabel->
  "Out[487]=",ExpressionUUID->"71de9c48-0590-403e-bf6b-bd0b3b0decd9"]
}, Open  ]],

Cell["\<\
Plot the heating and cooling rates. Heating rates are solid, cooling rates \
dashed (&variants).\
\>", "Text",
 CellChangeTimes->{{3.865496678792662*^9, 3.865496683344364*^9}, {
  3.8654976870991554`*^9, 
  3.865497700982072*^9}},ExpressionUUID->"ef1ba14e-6cd0-46a7-a184-\
746d51740a8d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"hcstyle", "=", 
   RowBox[{"Directive", "/@", 
    RowBox[{"Transpose", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ColorData", "[", "97", "]"}], "/@", 
        RowBox[{"Range", "[", "16", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{
        "DotDashed", ",", "DotDashed", ",", "DotDashed", ",", "DotDashed", 
         ",", "DotDashed", ",", "Dashed", ",", "Dashed", ",", "Dashed", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thick", ",", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", "}"}], "]"}]}], "]"}], ",", "Dashed", ",", 
         RowBox[{"Dashing", "[", 
          RowBox[{"{", "}"}], "]"}], ",", 
         RowBox[{"Dashing", "[", 
          RowBox[{"{", "}"}], "]"}], ",", "Dashed", ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thin", ",", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thin", ",", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thin", ",", 
           RowBox[{"Dashing", "[", 
            RowBox[{"{", "}"}], "]"}]}], "]"}]}], "}"}]}], "}"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hclegend", "=", 
   RowBox[{"LineLegend", "[", 
    RowBox[{"hcstyle", ",", 
     RowBox[{"{", 
      RowBox[{
      "\"\<OI\>\"", ",", "\"\<CII\>\"", ",", "\"\<CI\>\"", ",", "\"\<CO\>\"", 
       ",", "\"\<13CO\>\"", ",", "\"\<gas-grain\>\"", ",", 
       "\"\<Ly-\[Alpha]\>\"", ",", "\"\<OI 6300\[Angstrom]\>\"", ",", 
       "\"\<PE\>\"", ",", "\"\<recomb cooling\>\"", ",", "\"\<CR\>\"", ",", 
       "\"\<C ion\>\"", ",", "\"\<H2 line cooling\>\"", ",", 
       "\"\<H2 pump heating\>\"", ",", "\"\<H2 form heating\>\"", ",", 
       "\"\<H2 diss heating\>\""}], "}"}], ",", 
     RowBox[{"LegendLayout", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Column\>\"", ",", "1"}], "}"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.832734801659539*^9, 3.832734803167458*^9}, 
   3.865496760962566*^9, {3.865497635424535*^9, 3.8654976449192715`*^9}},
 CellLabel->
  "In[504]:=",ExpressionUUID->"c2f90663-c7f1-4c71-a50d-0a961494e241"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLogLogPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{"AVGrid", ",", 
         RowBox[{"Abs", "[", 
          RowBox[{"hcrate", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "#"}], "]"}], "]"}], "]"}]}], "}"}], "]"}], 
      "&"}], "/@", 
     RowBox[{"Range", "[", 
      RowBox[{"Length", "[", 
       RowBox[{"hclegend", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "hclegend"}], ",", 
   RowBox[{"PlotStyle", "->", "hcstyle"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]], ",", "30"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SuperscriptBox["10", 
         RowBox[{"-", "30"}]], ",", 
        SuperscriptBox["10", 
         RowBox[{"-", "21"}]]}], "}"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"Axes", "->", "False"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(A\), \(V\)]\)\>\"", ",", 
      "\"\<h&c rate (erg \!\(\*SuperscriptBox[\(s\), \
\(-1\)]\)\!\(\*SuperscriptBox[\(cm\), \(-3\)]\))\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.86549680264021*^9, 3.865496893938966*^9}, {
  3.8654969310347705`*^9, 3.8654969339300313`*^9}, {3.8654975905001125`*^9, 
  3.8654976678546863`*^9}},
 CellLabel->
  "In[507]:=",ExpressionUUID->"32959161-be43-4397-a812-c931c0b56251"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         Dashing[{0, Small, Small, Small}]], 
        LineBox[CompressedData["
1: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
lhjy04d+OL1RKGDA/3pfdbA=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         Dashing[{0, Small, Small, Small}]], 
        LineBox[CompressedData["
1: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
OSiu5Tze/3f8v28a8dM3bLqXn4H8Pxwxz+E=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         Dashing[{0, Small, Small, Small}]], 
        LineBox[CompressedData["
1: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
BpmAfHqLXGXnAWRq3RdZ5Fcnw640bSdAtWXUORnkvw3vo+s2EyDc9JO8NLKB
kJzrK1kCCPEHVUghh7mFmT7jIgAP50t9Sbw+djkmbtNyMGxu8lAc5++Q2bpd
vRyUMwcIi+H5R0wA5bocrAu/DhDB8+XKSdAJl4Px5sKnQnh+hWbbFezkIHkg
dloA5+eWCQ5RRTkw7KoQ5cfjb8xuZluTBUNGlCh4vG5mGcsfZMErqliHG+fh
7PieHw9lwSBwXYET59+5bOH+RFn4N7LBxI7zTsqsp9VNFkaWxltZkEvKxq/Q
dWWhcuFXAhPOM6ts18c8sqArspPEgPOr11T21ogMyBdLl60dtwOxwPHB3Fcy
wGmXSlhFzmbIvpWUKwPpFx/GLCPzXDL1jQqUgY8CmdULyEkq48pHt8pA3D6D
73+QGWou/nSVlkH1WTT9CznOwbTMbl4alGNe9E8hL46NhVBapOH+S/+ySeSQ
2ItbdG5Lw0bcea8x5Cl+00X5OGkoeTc8/x3Z9/ZYlYijNDRyUPy+IQ8aXoxl
U5cGsw67yi/IB1pNzJeZpaHFqHK4F7nHa4zhx5dN0GQi8rMbec9iVt2Xik3w
w+hXcztyU4pJUmvqJmjVqUtsRt4uN2ZNP7wJukRWhRuQoSKL+7HJJlg0mo2s
RTa2NmkrFt4E7/1nyl4jP+0fzcr9KQXTRiqVVcjax7P2JtVJQT17fUYF8n1W
E7Goa1KQ5tO5pQyZdHW078gJKSC0Wt++i1ykmXXN1VYKPvfwDxQjS9UZu9sp
SIG5w/xAAXKu0yiBsioJAoUPbl9G5pvKHNbulgQ3oS71LOSUM8Yl8g8kIS9u
MuwCMovoqL9IgiQUnHaKiUc+dS9Tjc1VEhKcvI1jkVfMjGeWNkuCT5zRkxPI
YV0j5ZNckvBfzLeBAOQZ38wTX75LgKWP6evDyP6rRvqtLyXAPUHQxhV5JHNk
uSZbAozj/p51QHYnZVaXH5WAkgc+XjuR+6qMThVbSsB8+rURCrKj3Qg1V0oC
tr97zK6P3DaUwZz0RxyCBdLfqSFbRxi9i2wSB/eD/dJE5FqukeQjxeLguSrC
JoZsXphh6xqDnBB0kgu5aosRn52DOEwIfD25HmIHmxuHO8xVxWFbFQ/TH+Qy
t4wcbSZxcBw8wDKKrDxruF/+sxhM7+w41YtcfG5YQuSJGFxYlgx4jywtlfGF
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
         "]]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         Dashing[{0, Small, Small, Small}]], 
        LineBox[CompressedData["
1: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
1IGj2XWReg8iW6R+p+tJoStD6E6r1TjwPxC6m8s=
         "]]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         Dashing[{0, Small, Small, Small}]], 
        LineBox[CompressedData["
1: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
Y+ixZ4v9Ttp/u8hsqp4INt3tGlpsjMP/AHhQZ2g=
         "]]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
         "]]}, {}, {}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         Thickness[Large], 
         Dashing[{}]], 
        LineBox[CompressedData["
1:eJwd13k8VF0YB3BLZMuefZkxY8Y6pCyFxpIydtqESglFobJTqVSiIryhlESh
RUpkn6coslOWpLJliSR7kd5z5q/5fD9zl3PvPc/vOYd40N/Jk4ONja2ZnY0N
/558uDnaUEEbXvkHr1arsYRE+7FZfXFtmCXFsVwwm+S5gU8baGmZLLekbe7U
ZtMGnh0lLH861X7VZUILzPtbWJaqo/pv79YCHadRlneJnnKwqdGClSJ2Huwk
t/Z1FgVa0CMqx3LrA6rY5nQtaA/VZ1nwV+SsXowWEKe3s2xt2N6hFagFTbHH
WY65QH2p4q4Fk/YJLL9piUwl2mhBhHUBy5wy7WEyBlqQHdvGsskhqqsYWQvY
FWZZPpUfaSQgrAVVglK82OWLbfJcyzS46WPM8qIZ9d/fERqkWBxiWfdqZN/8
exo05F1h+URX26ufTBrcySlmuYBIzRp9RAPC9gGWf/hGRven0ICtXIgPW624
zbPnPA2+Tm1m+TAbddt7fxqkcwWwfN8qUqXRlQbFQlksDyS38b7ZRgN9pW6W
Fb9SxivX08DGQYgfe69qZGOxIrpfgSXLN0+2PXnKT4Na52iWuyop8bkLmnDS
8zXL4jyRAZmDmrA8zCGA7eTU5nizRROsfluwHJ9OWZ9UrglJJXEsNw5HiF/J
0YRB4w8s861rm4tO0oS6PMU12NsiKF2nzmjCTjE/lqPfRJQE+2rCZDqT5ddC
bWn+uzXhl5e4IPa/PZSIw+aawJF0lGWj7Ai3A1qasGRSx3LYZKuxi6wmkG9Q
hbBfGlAUt6/WhM6XsSzPnotgs5nRAELjL5bXNbX2b/mqAYvLbsLYfpKUauMG
DVg53sjy4wMR2XovNcDAxUQEe+xR6wWtLA2401fCMmVe2VslHh2voyeKfcgk
wpIYgf4/X8JyZmyrqoy3BvzgMRHD/vJBmV9suwbsmGlkWU4xYoKfrgEq4fvF
sfccaW1apa4BVR8XWL5RqPz0r4QGXLW+sRb7w9/whHkODXghZCiBLWLZevzn
pDq4eQyzbJeovH20Rx3YrqRKYsf1hm/of6sO4S2OUth1lNa1Pc/VISpYVBqb
+7jyQvsddTCt62HZvDy8uyFWHUalH8lgR3G1ltYEq0NAyXlZ7Cp75VuVB9Xh
2OIhOeyltPDIYjt1yNezl8c2GGrZ+3STOpi9M1PADqYp03Mp6vBWzEQRuzA0
nJApqg66wdsI2FOvW9hvrqiBsPMeIjZtjfJg4nc1EFENVsL23R1eE9epBmTH
OyTs3MyW+9Gv1aCU0U7G/jZOvnQqXw2qYkUp2Ep64YeDb6qBw7X9VGz3qBaG
/0U18OotVcG+XU9WP3xCDSYWiGrYPeLhAgf2qYG3f6o6K2/2t/zYY6UGCl3y
mtg788gtTnpqwPHmOY2VZzNhBdZKarDQtVublTfGLde3CKrBw6I1OthrYsgn
jf+owiq+jvXYVu1hO/SGVWHXhXxdVt7ItehqtasC++BNfVbeeJElVapUYe3Q
zY3YHM/CFgkPVUHD7qkhNn2p+aP0DVVQnOs2xo60IJeLnlOFsAIpE+yy+LB0
fj9VqNnvb4a98LH51CoXVeD+9XkL9gYyef9fC1Wo3+G5jZU3fmEm8+tU4WYc
txX205Jm4k95VSDcem2DPcFB5hzlVYXi5Jv2rLyxDRvqm1OBJynxTtjeKc1v
PvarQGf9vZ3Y2f2knPYmFXDx6HBm5Y16WExDqQp4Zqq4sfImuPlIzX0VyGu/
vR/bDUjWlddVYMxJzwM7jS9Mo/iUCkxcnPHC7tzRvObpERXwHun0YeVNBuln
zk4V4Fnp98N2HAttvWuqAkp7JU5iX1vf/CxNUwWKc4NCWHlzipSUKK0CESns
kdi8daGBcVwq0DFdHoW9VbR5Z/QvKpy88eACK2/cSPqnPlPhjE91LParB6FS
we+oIHhSPAF7Zarpt18RFTTe3PqPlTeGpE/emVQ4GOd6Czv0QmiF+1Uq3GLf
lYld3NJ0e08YFcyjr+Zgz0iTzjh5UqHo7Kp8bO1Doe7WjlSoO1v5gpU3+U2m
W4yp0EwpL8d+tKhEMlZF49Fkq8YeNQtdpbeWCtb+8fWsvLna9I3GTgVav287
tkeXUi31BwUabqT2YN8lhuYSPlLApkZqkJU3vk2Xpd9Q4Myrn+PYssVKvqLP
KEBiJ85hO7OF2vDfpoCCXMEKK2+smjRXXaaAfcddHnXk9mQlob+BFOBasyCK
Lfw1ZGrOnQIe7cXy2LaqTW2TNhTo2DOkgh17UqlwxIACBK7oDdh1lSHJfWQK
XHG/aYLNxdMU9FGYApZqGrbYZk5Ku9uXlaHUbrMLdlR6iEHDqDLojXd4Y1cO
N0rXfFCGrB2LQdh/tJWWKkAZ3gs/isY2iAjpLXqsDKJDM0nYQW8aK/NTleFr
fXcW9nMhpYycaGVI/rf/BfbUnpCouwHKsH4p/g22RnbjgTQ3ZXAL9+/C9pkk
midaKsP2CK7v2DkGIeS4DcrQtW3PX+yhc41c0QRlsPA/IaKB86aJOBIpoAwa
Xc4U7P2SIXVBi2SozxU3wk4/0JjnN0SGMd98J+yeR8Q471Yy6P2m+WBLzgcf
da8gQ+nFjHPYO0wabffkkkEnlzcdOzGWqOWUTAZJu5Bi7JYPwcLWUWS42jnd
hi2g2PjL/CgZGnkuTWJbHSG+N3Img74wXUAT+WJh8AvdLWQgJlPUsWv+NvxH
0yaDTwHDGpvdkhhClSOjvvLiKPbmxGBnAg8ZVq4HxWNH9jZslJ4lAfCkFWKX
Uoiyon0k4EvQ/Ig9HxC8zNdIghcfTdloOG/KGz5zlpCgeeM3FezjXETmchYJ
2m5Rt2Pn2wffnYsnwcWr0mewJ9Iazk5GkEDfsvExtuoQwWPEmwQWBY692F60
4C1920nw+VDFGi2cN6ENyh/pJJitUTTF7ntNWN2uToIjP+ODsRXWBI/WS5JA
oouYj+26u+FdNScJQkzGR7BTMwmPKn4qwaYWDrI2zpvxoCtFn5SAWyjqILaY
XsOx/FoleHYmIgvbIYpgn1OoBF/jBUewr9UHad/NUIIbVds11yE3iDeIpMUp
waVkr2Bsnv2EmeshSkAt9HiNvTUv6EOshxKkDBwW0UE+P1NfdN5eCVLF//PA
BmNCSqShErif5SnFXrkUFBpEVYKcjCGR9cib2uv3+Ikpgcs2Gz/sUDmCofc/
Ing/8mjGLvIKknMfJwLnSQedDcjTBfV/nbuIkF278Sa29pLiV8dqIrgcsOTW
RT5mEQRWT4mQkPIgGPthfH2m+S0i7AuKGsce/ah43ugSEbZWc3rqISuTgw7p
niRCDcV9EPugX70FbT8RThBqvfRx3pQoUqnWRPhP6+hP7M8cQTwEfSJYDkWf
MkCWsa0fkyIRwemnpchGnDcpig0iQkT4uGn6IXZyf+BjviUCKLBVWm3CeaNe
f5VzhAD/DY5MYQsFK/ovtxNgD9eL24bINhDoMFdFgEmCp6MRzhu++nWTDwkQ
8cBUwBi5doei2MgNArzoSmzGXpUROPv1HAHiP2enbsZ5M/auo9uPAJun3/rQ
kc+sV3zZ5kKA0iBrCxPkilOBqfVbCeAsEaNiivy79l1YtQ4Bzg11iJsh64sq
ulYoEEDyynU+c+RAt0CjIj4C1B6U5duC349tkqHbD0VwSO8Ss8D522+8YvtG
EYKP0lS24ucPHgX6bUUoU7+ybRt+Xr6k8+uCFGHTtQMnLPHzZRhvJdkqwp0a
Uh4D5+f6UZ61yoogk28zYYXHX5fYwP1XAcS5XY1s8HjdjK8tflCALXfb02xx
Hv4acfj+WAHuXDXissf5dyFRrDdaAdxdqGcccN7JGHc2uSmAIIPK44T8IH8k
lblBAZIudd7djvPMPNH1mYACcPp0MHbi/OoyUsgakgfT5/Wcu5Eljo70JVfI
Q1yTR4szzie2xKyLyfKQLbrziQvOo/+MvEKPykOflMsdN5w/qiMqPlvkIXNc
N2sfMlvV9XFXOXmIDCiscMf54mSUbzsrBwOZ98cP4jwZHg6gN8rB7bkRbU/k
gIjr69dly8H32/uueuO8EDKaV4qUgzvL8+w+OB+yh0vEd8jBoR858UdxHhhc
j+DWkIPdOif0/ZFdmgw3L3LKwdMO9z/Hcb0fGGb7/kkWzt+4/DEQ1/d8QvWn
QlkIdl7TGYJcH2t4sSlOFl4lSf0Kx/WrOGzJ9JCFYy2D6qdxvRYm8D8zlAVL
xReXzuL6tDRsvicmC6eyPnFdQH7R+y0heVwGFsXLcmJw/R1P2H6xWgbGHCr9
ruB64zKUCL0lA0I/DrglIJNvfus+clIGhj+sP5GM64mWcMvVWgb+G2p+lorr
p3rTPluSDIzc/Sp3G9fL7m8E+pI0UD6QijKRBSfiB7XfS4PMTt/IB7geojY9
UHokDT1NqYGP8Pxf++2w+HlpGAq8l1GAfDovXp3bVRoKphL/FeF+arxpckFH
GlbMY2+U4/ncPlQwxicNkw+qvF4hT3rFn/w0IAWRyadO1CIfXtqo11QmBU+b
NCqacD+MH1qsSpQCsxjrrR+Q95Hjywt8pCAx6aTYJ+Tuko2n75lJQdsLF8oA
7m+2QybJMlKwnffD2THk5v5rnBenJUE1u03lF7Jl8Ma3IfWS0GbqpfAb+TXf
UMyRe5LgbFzryf4G9aeMa9au4ZKQPGDHwYdcsn6joK2TJIRPn14QRdapG2zd
rIbOb+NkyCHnu11L0uaQhK/mJX+UkVV+GexS6pEAU4WHwtrI9y4MSok/l4Ae
I0L8JmQ5mWufuGIlQNrsXrgFcmq+wZ2FAxKwIMjZ7YAsaj7oPrZRAuLZ/R+7
IV/pukr6JCIB1apRfw8j8xw1GG4cWwv7jrm2BSGfYxvMrXq1FjJjPtHOIy8n
X/UtSFsLNQrt8teRg1UNaPeOr4Xjk745GcjTlQNTSYy1wPW6qTMf+ajT1cIL
xLXwt1SgrAp5eFg/OOS3OJAdij1akA9GDBgcaROHukHNH33IvUJXl1zyxKGY
IBU+g7wrW7/K5qw4HIk/Y7T6LdqvGAxEbd4jDok73ULkkG2arphrrxOHe80T
YeuR3x7Q51biFQfiie7LNsgm8/11Yv1iMGZTVumNXBF7JY6rVAzMDXYPRyPr
KerbLSSIwRETkbws5ILCfuGxw2JASK9+UY2sZnnlfY+JGNzZ+aF3CPlBr96N
RikxMC59JLa61hIIx/udq6ZEQcRA300N+SbXFdmCOlHorl0NdsgSN/W+ZN4V
Be4DHVaByAm0/rtJoaLgF/OJ5xYyX3WcxwUHUeiZ9eeuRo7erUcJURGFjNP/
7CeQ2Sb6Rg+zicJyhcq0RJ0lhEfFPXLpFoHBDR9/myHPiuv52RSIgG+tZ2AA
ckBen/bmGBGIE7rrn4H83ThuRstdBBi3v/1uQT7UrltMNBCBU+81lDjeoXz3
6gsVExYBjnfCi7rILkuxhlyjwnDoWE+cL/KHeN2VeaYw8EPM5D1kO3IfjKYI
A/lwz7pe5PqS2PM9/sJAWNpxWLLeErbY6m5t3CYM/57Z3N+BXNX/ladKURjO
hY4vJyEHTIin7P8pBDpPDKM7kA+v9ZEzzxACZzeao3QD2l9tZmZS7IWg3y47
fD+yg7c4le+fIIg8DpbKRbZMOPL4R74gCG6IMp9BNiqtWte2TxCt8x6sNW1E
eTUg9vKFoCA4vv6Wdx2ZzH/EKLVqDRjk7ZL7hiy3oepVhN8akHm9OdawCe0H
9opt26+wBmJNpUX/Q1518XCjWbMA9Ltlvf+FvJxf6Ug5LQD3Bcd+Ojaj9XeX
aBcvTQB87jlcLkIeYjvs9uMzP3z0e1wt14LyQrWyv/UqP4ytbK25hNzqJOr9
wpgf3hrPPJtHronwnkj5wQcXZ+WKjrSi+s+uOB5xmw9sgroX+pALmkQW9tny
wQe3hftubWi9OO8VafaXF3r7ZX70IqcqVrBTnvDC9oO1ywfaUf1ailzi3csL
d6bCuCeQo497CfwQ4IWRVVXGEe/Reutm+fXWCh6IJ5h3C31A9VgtLPniKA/c
Hlpa8xD50IRneoocD5iV6UhbdaD+vracGNG4GiQLH+hNIdtsFs7ZF7ka8hNz
76d3onry9tQw01gNXGcNcu27UL9OKHum3MsNfW/J53m7UX8uFdLnvcIN1ne0
TtcjEwYOVUwYcsONe7ShxI+WIMVfZto6zgUhy9qcHj2o324Qqi28xQWSwQ80
DD+h+b73kE2KNRdsPBFTJNuL5veF0rbwpVUwev/s/KrPqH/mC+7e92gVJIcr
2Swg93V59Jq6roLEEj7JmS9ovrKVHlDmXwVMY/mKxa9oP60qOMJTzgnHFwqz
efpR/3PyODrhwwkpY52bSQOo30WU/GqR4QTTucC/loOWkJu9JqSwngP0XTKc
w4dQP2s6uHwjnAMuWbc0vfyG+tf8y7Phasg5Sn3sI5YQo7hm9b4edjjzIEtq
zyja/1kevGIayw4idoncVWOoHx1/KaK8iR3euT6jrxtH8/2mQArPdzaIEbnh
XjiB5nv1AbmJNDbQffVbwGIS9ZeJ4swWBhtcfC43NfwT5YWalJ3XzD/mscfS
lWm/0PeMfO2suf0fM6iDobVvBl2v+ajH7PMVJvP6Qz7dOVQvBEm/ctEVZkzn
NjnFBfR9TrwKPXfiL/PDuUeb5H+j71Hje57Rvszca2e3VXsJzX8JiWvCOsvM
cQ5JtT1/LWHRG1K7ri8x3Xu6P6X+Q++31Cfrzq8/TFLGB7cpdga08q/N93T8
w9xotaXMfRUDSvYySzSe/WZKvP2+ZpybAXefHqmeEf7NNDTNO53Ay4AYdvHm
soBFpqqhrKmTAANCt1d1n21dYHqQNqSuE2KA+/3Dg5baC8zTqT86tEQZYLkg
OimUMM9cbTHrareWAQaMysXOn3NMNoZz+jUpBhBueXPesZ9jiudZykzLMoDn
h4ig59NZJq/ae59wRQZMba6Q0hCaZZqtPNRVJTGgL8GLNOM3wyzxndFlozKg
bkCYVtY8zYzTEjZkV2dAwYZyg7O0aeY+kRBVmhYa/0VPc8trv5hpq28uxaxH
4+8WshOanGJ+CSt9LWbAgAC1MudO2ynmd3pjTqsROn+x7u0m159Mdg7viVem
DEhIl++tk5lk/nTIGR/byoD9Jid+7eqZYNopEGWtbRigPfSW+1vaODPPpJl/
1JEBbDGycif3fGeWWa/4VO9G41UPWMcuPcZUFzHh7NuLrt9SszW+e4TZGO5b
aXKIAVEnpd3kU4eZDJnTmaM+6P1J+h1/tPsbU2DX9a6e4wzQKn99caPkEFP0
2LtcmTAGsO+XTK/tHGAGWphFPYpiQBvH0Wc7b/QzKdm/xxNiGPDsAbwd3NnH
VGKU3G5OYMC/ZLWSQbUvzBGbBd/DaQzI6H0/8C/vEzPkSanTwXvofuRTa+RU
PzK5i88EwiN0vC/FwCC3k9n8Sl32UhEDMgtbDu6gfmD+udRVUsZkAH0p9GrA
gzamrcCr0f316PgLWwKkrZuZRedVAyI6GGC2NuWNI+Mds8yiqFaknwHnssdk
YrfVMIvOXnRR+cGAv96hfdFxVUxRMdW4mt/ofV2Uj5u79IJ5+4lHyzi3FXBZ
XfBt5LnPPELgb8wSt4IvZxYFemXcmVslzXdNK1nBvOHwWABXFj0gUDvo8zor
WFqxrd92sZDO+Kzu4WtqBav7chW7LlfSb02ejr/naAUrfWc3Fb6tpt+Ytb97
+aAVnHHU+hZeV0en8zsEUgOtgP11b7xZfRO9LuyK8vmLVhAlbSHP5dVGD9gd
wpedZgWv2m5Njw6/p9d7OJRff2IFbLHTtY3enfQytzLhHa+t4KwZ43bBaDfd
aOGKxkwXOv5PxonkI5/oBBJHWMikFZgWzm8L/f6ZvoqW9XCMyxqg6IFgvm4f
XX7VkfdOCtbQJ+L0WzG4n55OCLKu0LcGgt/fwevFA/TInHPtWk7WYFKf28y5
MEivvMNIeHnMGtwpO0qD9L/Rddflc+yLtYa75/5ljYQM09N6VGVpuej6Xx5e
21MyQucNerVjfa01fN20K6xhcZT+2iU0MWzEGogp7IeMN36nE/8wRNbw2oDp
zGO7p2Hj9O/SXhV/1G3ggL3zRmLZBF2Hw0jGwcEGMh5xkpP+/KAf0r4kJRts
A69WPxXkMvxJ109/l3vktg2w6TyJLDeeooss0aes39qAcB/HidnPU/RQG6Vz
bVM2QLjm7K15+hf9Y6udB5+8LZgY5bt5KUzT2xr7V3isbcHhO6dTRtU0/dDK
qYwv4bbgnrpnW/e+Gbp38OWWO49tIWrrUyORfzP074/3ebr12ULC7Codq4xZ
+tnh0mo1CTu4e8+Fep4+Rx+bM+SRt7MDcCiQq/g6Ry9QsLtsGWMHrStconNn
5umbj+8PrKmxg77HrqtphAW6z9Fc/TxOe2BzfbbsBQv0lD11esIW9iDMu3o6
w32R/vDpQIXYZXvQfuk20s32m+5bs3WpucUeTDyf94pk/qZ3s31hfyrgAA5i
PO1Wpn/oZg8zv03qOEDAq7215/v/0A1awxSKXRwgyr+wouLsEv04tUldPNoB
EuR5n88Rl+nXWukU6acOUNCwL4f2GvlhcWPHJweAsBfp3gf/0oPmIq658jlC
K5Uv8S7HCj2jySypYpMjZGie9dIhrdBr/v3OmN/iCP8DtRhR6Q==
         "]]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.571589, 0.586483, 0.], 
         Dashing[{Small, Small}]], 
        LineBox[CompressedData["
1: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
FNBYp9ZtrOQsWtjB//QK31g=
         "]]}, {
        Hue[0.030679774997896203`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.915, 0.3325, 0.2125], 
         Dashing[{}]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.266747752497686, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
         Dashing[{}]], 
        LineBox[CompressedData["
1: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
FJ8WKiwkTiHLzoUEeFRQoVxeUAW346YGa+e7VJj0pSCnJ5O0HDKpELzXCLn5
Y4iYZQwVyvSckIUJDVNmAVS4NX0Mebsf6YOhEzY+JA05sTjkme5mKpzsfoRc
s1R/kaVNhS1rG5C5zUmhDCUq7Ej6gWycHuJEFKDCVIMQAeVNd/0G+RkKCKlo
IpfRSYoSPRTIjbdFngsK+SvYQIGHE0eR15XXf+EtpcDd09nIR/hJnL83KaC6
uxK50Dbk2mwqBdydBpDHcutP/YykgO5zYSJutQHi/iEf7P0desjerJDNPTso
4GHqiVwQVk/rYFNA4eE55J7XxJVtGhTgiy9HVlkdMlwnS4Hy6VFk193176t5
KXB5QZGEO+c68UHFBBleXrVB/vQj+OzzLjKIL8YiS+rVHyp8R4a7rDJkuxii
7Z1ibDxjCvl8XbD2tXwyvBLRIOOul6oXz00hw/15b2SBvcTpC6FkkP5TgLz1
XvDH5P1kOKT7HTluuu55nC0ZdDIYFNxgRMyOMiCDgU0A8r/TwWHBDDJUHixG
3thW5xwoSYYO0hJymBLRwGeZBFlhFlTcz72DlTx+kKAmKQf51+O6Jad2Ejw+
OoqsvUj4Zl9NAhE7Ng33oS3BsL2IBMzN2cj3U+uum10mwS3/X8jDHYQ4w9Mk
WNttR8dNowZ76R4jwfPZp8j7Auu2sPaSwO2GHAPlTSmBwbAkQa1YLPIXnmAB
4noSlMZNICtY143IUUhQIempivImm1AvLkqChMlPyJm9xx8KLhJB1tZeDeWN
Rt053iEi/LFrQRYNIRz+20aEDHtHddxWcNxutooIqw59QU4WrNP5eZ8IJfX+
GrjfORIkh7KIcOfLMjJf/vGZb7FESC/JZaK8GXn/3+dAIux/tUET98m1hJJW
FyIw1HuQK6KP59RtJQK37TkW7t/v3odXryGCU5CJFu71EgTXChUiyPX9RT7u
dtzwuSARrEmgjfbHOsPAbZwAe/ek6KD87TX6Z/2GAOGUvWvQ9YcMA/sKAXZW
GaxF1yuYEacTTIDzN0nr0PXlG22lWBPgjJe4LsrPtcMC0jQCXPMW0kPrr02v
X7GkAnZksfVovW5G5xc+qoCcGVEf5eHUkN3oQxXw8jDcgPIvIV2yO14FLk16
bUR5p2D0qdFNBXQaLhngvl04lMNZpwLx974aojwzS3d9IqwCHBkdY5Rf7YYq
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
bQ+irXJ8BX/m2TXLv/PnNtvD/wDPgDRG
         "]]}, {}, {
        Hue[0.7388837074972656, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
         Thickness[Tiny], 
         Dashing[{}]], 
        LineBox[CompressedData["
1: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
         "]]}, {
        Hue[0.9749516849970554, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
         Thickness[Tiny], 
         Dashing[{}]], 
        LineBox[CompressedData["
1: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
j//KRzH+73qpPfy/8/X4Kbf+8/8AJgJ3lA==
         "]]}, {
        Hue[0.21101966249684523`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 360], 0.002777777777777778]], 
         AbsoluteThickness[1.6], 
         RGBColor[
         0.838355547812947, 0.44746667828057946`, 0.0208888695323676], 
         Thickness[Tiny], 
         Dashing[{}]], 
        LineBox[CompressedData["
1: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
j9ebhUhna0jS6c9ODZGAPxJyXjtdrEGwJtYr2k4CLOXis6Rc0ff5/ZvowWoS
0JbSMjeKmjDRN+pLkICbbWV3a92sISwy9qHzR3EoUy6YzHO3hjmpTX7sYnHI
PP1SKPUAmjcP+vTMr4qDm2Gz8WUPaxg3i53V9RCH5KyfJVGe6Pm+feNTspE4
pNcaFkYfRPPduy9EUkwcUteDb4oXmjeLMSb8o2Jwop6slH8IPa8nblyeR8Rg
UPQ875vD6Pmc2gej6WJQ7X/PedobzZuymIufTopBYwnRnexrDZacjTsad4pB
oIEFy+0Iet7u7xWoIorBOhl9j9yjaH0TUukHpkXhWNR09+wxdB6ljyptyxKF
bAvbZZsT6PnKHMmh24rCUcs1Ak/80HzzkWIIroiA2pWHm+n+6HwlHXk0WSgC
vD+KP945hZ5nnletb3MXgVLbkzTNADSvBiSfPRYRAfv/VA8jgWg+CR0xvVG1
DuZPz/YcCELnw6CqOtxvHeyYmG4XDkHPA26SOw+orIOdJMWE16Fo3lz2bbRo
FgYHjxP74sPRfi+s3E0/JwzPxXsCPc+i79+dEp1rdYTh9L+e+tvOo/lB8HWd
/CwEPL9Xf94QheaFemV/a7wQ1BVNVupdRPvVXsLnsZkQcJJdVc2i0ffXcJ+J
9ElBODzV6OJ4BZ3/uxWnwm8LAs+b308vXEP7r0n8lztHEOT9v0dXxKLvi/Pe
ERZLa8H5K0VxdQI6z8QKHvq/a+FcTXj9gSR0fq3Er6x1WwsukwFjb1PQ/jnl
LTwpvBZkx9RbLP9B37cyy5NbKwRgy0JYR2s6Oo81YrKPjwtA6RvlPX6ZaD9M
HL6VriQAGfxIgfJtdL9Ll5PDG9fAcDLRsDcLnS9zsTz3iDVw08fAufQOOk8+
h7UstNbAaUOr4Mx76L5OelFC61kNK4Uqc2n56H5+Lmq4Nm41fLGWN859iM7H
wKGKCZPV8HPEreRVoTXICb3Y2vqNH3LfLdf/LUH3rYHom9Kb/GB+gvrL6gna
726H2OksfohhGRUUlKH9Hf28LWyRD/imxV0pFej+LBTZ7/6QDyrLqFeLEXRf
dnr1bHXhg/HYon/31qD9SnjuSRPiA9/Hk7YSb9DztLrIiEA5Lzia7pofrkf3
n73X8YmjvEDMTtDqaEb3XXjZTIsCL0SOkC9+areG/LvrgkvrV8Fd4sbEPx/Q
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
y93wfyoyw1c=
         "]]}}}, {{}, {}}}, {
    DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, 
     AxesOrigin -> {-6.907755278982122, -69.07755278982121}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
        "\"h&c rate (erg \\!\\(\\*SuperscriptBox[\\(s\\), \
\\(-1\\)]\\)\\!\\(\\*SuperscriptBox[\\(cm\\), \\(-3\\)]\\))\"", 
         TraditionalForm], None}, {
        FormBox[
        "\"\\!\\(\\*SubscriptBox[\\(A\\), \\(V\\)]\\)\"", TraditionalForm], 
        None}}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Exp[
            Part[#, 1]], 
           Exp[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{-6.907755278982137, 
      3.4011973816621555`}, {-69.07755278982137, -48.35428695287496}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0]}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"OI\"", "\"CII\"", "\"CI\"", "\"CO\"", "\"13CO\"", "\"gas-grain\"", 
       "\"Ly-\[Alpha]\"", "\"OI 6300\[Angstrom]\"", "\"PE\"", 
       "\"recomb cooling\"", "\"CR\"", "\"C ion\"", "\"H2 line cooling\"", 
       "\"H2 pump heating\"", "\"H2 form heating\"", "\"H2 diss heating\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Dashing[{0, Small, Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    Dashing[{0, Small, Small, Small}]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.75, 0], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.75, 0], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    Thickness[Large], 
                    Dashing[{}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    Thickness[Large], 
                    Dashing[{}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.571589, 0.586483, 0.], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    Dashing[{}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.915, 0.3325, 0.2125], 
                    Dashing[{}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #11}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Dashing[{}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
                    Dashing[{}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #12}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    Dashing[{Small, Small}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142], 
                    Dashing[{Small, Small}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #13}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Thickness[Tiny], 
                    Dashing[{}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
                    Thickness[Tiny], 
                    Dashing[{}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #14}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    Thickness[Tiny], 
                    Dashing[{}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                    Thickness[Tiny], 
                    Dashing[{}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #15}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.838355547812947, 0.44746667828057946`, 
                    0.0208888695323676], 
                    Thickness[Tiny], 
                    Dashing[{}]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[
                    0.838355547812947, 0.44746667828057946`, 
                    0.0208888695323676], 
                    Thickness[Tiny], 
                    Dashing[{}]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #16}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small", ",", "Small", ",", "Small"}], 
                    "}"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.363898, 0.618501, 0.782349]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0.75, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.647624, 0.37816, 0.614037]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.571589, 0.586483, 0.]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.915, 0.3325, 0.2125]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.40082222609352647`, 0.5220066643438841, 0.85]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.9728288904374106, 0.621644452187053, 
                    0.07336199581899142]|>, "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}]}], "}"}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[0.736782672705901, 0.358, 0.5030266573755369]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.28026441037696703`, 0.715, 0.4292089322474965]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{"{", 
                   RowBox[{
                    
                    TemplateBox[<|
                    "color" -> 
                    RGBColor[
                    0.838355547812947, 0.44746667828057946`, 
                    0.0208888695323676]|>, "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Tiny", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", "}"}], "]"}]}], "]"}]}], "}"}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10, ",", #11, ",", #12, ",", #13, 
               ",", #14, ",", #15, ",", #16}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"\"Column\"", ",", "1"}], "}"}]}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.86549685449675*^9, 3.8654968942925177`*^9}, 
   3.865496934840809*^9, {3.8654975922194843`*^9, 3.8654976250396395`*^9}, {
   3.865497656259517*^9, 3.8654976683646545`*^9}},
 CellLabel->
  "Out[507]=",ExpressionUUID->"f5b33587-625e-4b5c-97a7-bc74d42f274d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 652.5},
WindowMargins->{{
  Automatic, -4.7999999999999545`}, {-4.7999999999999545`, Automatic}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"7b6a0b9a-d516-4b87-bf0a-2b1c664e9a91"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 153, 3, 98, "Title",ExpressionUUID->"99ed4942-640d-4bde-882d-29edb32f8af7"],
Cell[736, 27, 222, 5, 85, "Subtitle",ExpressionUUID->"21a5a9fb-324d-4180-8c57-4b0d041ee12a"],
Cell[961, 34, 476, 9, 177, "Abstract",ExpressionUUID->"62696cf4-36bf-4dc8-9d5f-d3a7e31f0194"],
Cell[1440, 45, 246, 4, 31, "Author",ExpressionUUID->"a1fa3a0c-8515-4dca-b0e0-cb72c1ae5178"],
Cell[1689, 51, 359, 8, 79, "Affiliation",ExpressionUUID->"03c572dd-dc8e-467e-9f1c-e3a8e8ee03e0"],
Cell[2051, 61, 497, 14, 35, "Text",ExpressionUUID->"c524b818-8ad1-4c7d-a2f1-f621f266b455"],
Cell[CellGroupData[{
Cell[2573, 79, 157, 3, 69, "Chapter",ExpressionUUID->"f8c5d479-6c07-4b28-9c1f-c1420026cd77"],
Cell[2733, 84, 404, 8, 104, "Text",ExpressionUUID->"7efd485d-f881-4766-a9a6-910c5b37bcb6"],
Cell[3140, 94, 100882, 1658, 238, "Input",ExpressionUUID->"9ca28ab2-20d2-4e28-88ae-42a2e21605c1"],
Cell[104025, 1754, 363, 7, 81, "Text",ExpressionUUID->"2c28aa45-2a62-4a92-a401-163ff5b65a34"],
Cell[104391, 1763, 714, 13, 173, "Text",ExpressionUUID->"3edd86c3-be5f-497f-b311-3d5fd0ade6a8"],
Cell[105108, 1778, 1013, 17, 311, "Text",ExpressionUUID->"fd0e8221-9299-4bd1-b5c5-5acd46e57c22"],
Cell[106124, 1797, 196600, 3228, 333, "Input",ExpressionUUID->"64c8b24a-aeb3-49a1-9240-3c01a6a4d1a2"],
Cell[302727, 5027, 223, 5, 35, "Text",ExpressionUUID->"3f117a61-2b93-4067-a30f-0819b6e0f852"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302987, 5037, 151, 3, 69, "Chapter",ExpressionUUID->"59428753-6ad2-44fb-9ee7-3069ef580caa"],
Cell[CellGroupData[{
Cell[303163, 5044, 160, 3, 67, "Section",ExpressionUUID->"ede1bae0-ec53-4e09-a16b-ac4963a4ba8a"],
Cell[CellGroupData[{
Cell[303348, 5051, 165, 3, 54, "Subsection",ExpressionUUID->"34a8527b-276a-4db2-a97b-01c5276ea870"],
Cell[CellGroupData[{
Cell[303538, 5058, 270, 4, 28, "Input",ExpressionUUID->"bde0fc5a-c412-4978-8ed8-4f92c76597f6"],
Cell[303811, 5064, 209, 3, 32, "Output",ExpressionUUID->"a6a3965d-0de7-4801-9640-f7a22d9a5d72"]
}, Open  ]],
Cell[304035, 5070, 292, 7, 28, "Input",ExpressionUUID->"71385248-ee77-47ca-b7ab-6cd1b874be68"],
Cell[304330, 5079, 196, 3, 35, "Text",ExpressionUUID->"b533cb05-8ea7-4aba-b7db-fcb505107da8"],
Cell[304529, 5084, 916, 30, 143, "Input",ExpressionUUID->"576ccfad-d19c-4234-b397-18df06dc57c6"],
Cell[305448, 5116, 1506, 42, 48, "Input",ExpressionUUID->"2c27f276-4a9a-4f47-bb91-49aa00b9076c"],
Cell[306957, 5160, 168, 3, 35, "Text",ExpressionUUID->"d34aa0e5-0386-4cc8-983e-cf4d025d2230"],
Cell[CellGroupData[{
Cell[307150, 5167, 4705, 121, 537, "Input",ExpressionUUID->"8974fbbe-a04e-4fb5-bcf4-16d082fb8ca9"],
Cell[311858, 5290, 17574, 337, 66, "Output",ExpressionUUID->"2bda562b-a271-42bb-8e08-b50af2d7565e"]
}, Open  ]],
Cell[329447, 5630, 218, 5, 35, "Text",ExpressionUUID->"46a7c3df-aef5-4e09-b7b9-f3c0ac7144d1"],
Cell[329668, 5637, 2142, 56, 220, "Input",ExpressionUUID->"8453e11b-fe4d-4a38-9a60-8597f3196a8f"],
Cell[331813, 5695, 766, 18, 45, "Input",ExpressionUUID->"5efdfd60-bd97-4394-819a-6bf0b9ca358b"],
Cell[CellGroupData[{
Cell[332604, 5717, 633, 14, 28, "Input",ExpressionUUID->"5b464a4e-4449-4707-861a-740b4b3e8b90"],
Cell[333240, 5733, 17441, 394, 233, "Output",ExpressionUUID->"83aa5ba4-bddc-4335-8f7d-d1636964fc18"]
}, Open  ]],
Cell[350696, 6130, 3513, 102, 318, "Input",ExpressionUUID->"ad25dc3f-1514-431f-a87e-52863ff18acb"],
Cell[354212, 6234, 711, 19, 28, "Input",ExpressionUUID->"c1fd0682-806d-49f2-acc2-2a74d5f7fccd"],
Cell[354926, 6255, 626, 13, 86, "Input",ExpressionUUID->"f132c429-7831-40a9-a8a7-6a53994c39a4"],
Cell[355555, 6270, 38329, 882, 1971, "Input",ExpressionUUID->"756b1591-ac13-43ac-926f-5ecdad34d6b1"],
Cell[393887, 7154, 189, 3, 35, "Text",ExpressionUUID->"7bde1ae8-d714-453a-a7d6-6129502785bc"],
Cell[CellGroupData[{
Cell[394101, 7161, 4586, 126, 200, "Input",ExpressionUUID->"16f4de82-5239-403a-89e5-8c42db8edc7e"],
Cell[398690, 7289, 22671, 436, 66, "Output",ExpressionUUID->"23592b56-4fa0-405a-bb7d-0bda2afe8040"]
}, Open  ]],
Cell[421376, 7728, 775, 22, 28, "Input",ExpressionUUID->"790cb448-90b2-415b-9625-895a2a6c1612"],
Cell[422154, 7752, 918, 26, 28, "Input",ExpressionUUID->"07602322-0787-44a7-bb5c-296c26a7d2fd"],
Cell[423075, 7780, 748, 23, 28, "Input",ExpressionUUID->"77cac0a7-f76b-45bd-b5c2-66a181c79fe9"],
Cell[423826, 7805, 178, 3, 35, "Text",ExpressionUUID->"e0a41cd1-c1dc-483d-b459-368a65f85253"],
Cell[CellGroupData[{
Cell[424029, 7812, 1484, 38, 66, "Input",ExpressionUUID->"2eafc1b5-dd08-438b-ae55-e8a401cd0f98"],
Cell[425516, 7852, 15875, 304, 66, "Output",ExpressionUUID->"02819bb3-213e-4c99-9fb8-d10ec68de2f9"]
}, Open  ]],
Cell[441406, 8159, 214, 5, 35, "Text",ExpressionUUID->"5eae3a3b-272c-4c18-8d16-29991e7d739f"],
Cell[CellGroupData[{
Cell[441645, 8168, 1415, 45, 65, "Input",ExpressionUUID->"123eb1a7-e9d5-4102-8071-f4e3ca34cd21"],
Cell[443063, 8215, 16474, 317, 66, "Output",ExpressionUUID->"dd85a3fb-e7ca-436b-8b93-33747145c3b1"]
}, Open  ]],
Cell[459552, 8535, 162, 3, 35, "Text",ExpressionUUID->"6faa2f82-bbd7-420a-9c05-e19468932dc5"],
Cell[CellGroupData[{
Cell[459739, 8542, 1772, 51, 118, "Input",ExpressionUUID->"83a49c7c-217d-4dca-8925-be47dc4940c9"],
Cell[461514, 8595, 17224, 329, 66, "Output",ExpressionUUID->"ee678cba-e700-4fff-89ed-a6ec76f544d3"]
}, Open  ]],
Cell[478753, 8927, 158, 3, 35, "Text",ExpressionUUID->"797d7e7c-fd33-456f-bfa2-53bd0c036770"],
Cell[CellGroupData[{
Cell[478936, 8934, 1914, 56, 166, "Input",ExpressionUUID->"40cfaa8f-deb0-4c66-872d-237f15b88a65"],
Cell[480853, 8992, 18282, 350, 66, "Output",ExpressionUUID->"e1a28543-d333-4458-a6c9-86918318c49b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499172, 9347, 3424, 86, 187, "Input",ExpressionUUID->"7bc01d91-2b5f-4f6e-b759-816daf0b46aa"],
Cell[502599, 9435, 14895, 286, 66, "Output",ExpressionUUID->"5d786484-7394-451a-b6de-96b1bc0e8d1d"],
Cell[517497, 9723, 17951, 343, 66, "Output",ExpressionUUID->"cf3d6069-159e-4e14-be9f-b5b431f77b36"]
}, Open  ]],
Cell[535463, 10069, 167, 3, 35, "Text",ExpressionUUID->"013a2de3-4cdd-472b-a552-1019d84e12ee"],
Cell[535633, 10074, 3325, 80, 382, "Input",ExpressionUUID->"d1da9a9f-e7bd-4ba5-8753-00097bb85185"],
Cell[538961, 10156, 479, 15, 35, "Text",ExpressionUUID->"bd4f431a-b623-47a3-aa0a-ae65c33143c7"],
Cell[CellGroupData[{
Cell[539465, 10175, 3227, 84, 220, "Input",ExpressionUUID->"bac18b4c-9bcc-4d61-b419-b4e16f49edbe"],
Cell[542695, 10261, 18930, 361, 66, "Output",ExpressionUUID->"4764d030-e837-42d7-a285-b574d92c63a2"]
}, Open  ]],
Cell[561640, 10625, 172, 3, 35, "Text",ExpressionUUID->"a3a2de5b-a678-4e9b-9bec-a724f9197429"],
Cell[CellGroupData[{
Cell[561837, 10632, 4982, 128, 222, "Input",ExpressionUUID->"168cd93a-3d59-4da4-8500-b671d6dc20f7"],
Cell[566822, 10762, 21498, 414, 66, "Output",ExpressionUUID->"883e5548-a082-4290-bdba-45da7e2b0333"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[588369, 11182, 159, 3, 38, "Subsection",ExpressionUUID->"349830a5-0a26-455e-b732-12c8d7e8de76"],
Cell[588531, 11187, 167, 3, 35, "Text",ExpressionUUID->"8193ec95-88b9-45aa-84b4-24118890dead"],
Cell[588701, 11192, 291, 7, 28, "Input",ExpressionUUID->"a89c5b27-9d5c-4bf2-acf2-cd68fdaa6aaf"],
Cell[CellGroupData[{
Cell[589017, 11203, 1661, 46, 162, "Input",ExpressionUUID->"66e61793-f326-4250-8b8f-61ab3ab2451c"],
Cell[590681, 11251, 575, 9, 32, "Output",ExpressionUUID->"6753602f-3b92-4003-b8e5-37fa8326220d"],
Cell[591259, 11262, 578, 9, 32, "Output",ExpressionUUID->"3af45241-d25a-4bbf-947f-817a7f6bc0e1"],
Cell[591840, 11273, 577, 9, 32, "Output",ExpressionUUID->"2f3fd19e-c22f-4991-a59b-96cf24a20bad"]
}, Open  ]],
Cell[592432, 11285, 203, 3, 35, "Text",ExpressionUUID->"bfbadd36-1b93-423a-b6c7-278c9ac12e5d"],
Cell[CellGroupData[{
Cell[592660, 11292, 1148, 31, 72, "Input",ExpressionUUID->"64a808e4-1c0c-48ac-8300-1637014af84b"],
Cell[593811, 11325, 558, 8, 32, "Output",ExpressionUUID->"a79b3d8f-ced1-4b54-abb7-b7975997e46e"]
}, Open  ]],
Cell[594384, 11336, 297, 7, 35, "Text",ExpressionUUID->"278200f3-fddb-4abe-a9af-3824854d2a23"],
Cell[CellGroupData[{
Cell[594706, 11347, 373, 9, 28, "Input",ExpressionUUID->"f1488576-aa9b-4e3f-a6a5-5687fdf88c47"],
Cell[595082, 11358, 4979, 106, 147, "Output",ExpressionUUID->"8b756cda-3ec6-4a08-97ca-994841ba0218"]
}, Open  ]],
Cell[600076, 11467, 4622, 112, 219, "Input",ExpressionUUID->"e3e62bda-e276-4728-931f-133b78697be5"],
Cell[604701, 11581, 615, 15, 28, "Input",ExpressionUUID->"fa87f0e0-ee34-4aca-be7c-ce8ae37d375f"],
Cell[CellGroupData[{
Cell[605341, 11600, 353, 10, 28, "Input",ExpressionUUID->"766ebc0d-3bf9-472a-ba8f-fa6ddaa30f1d"],
Cell[605697, 11612, 539, 10, 35, "Output",ExpressionUUID->"bc3a2ae4-a493-40d0-82c9-19162365a7ba"]
}, Open  ]],
Cell[606251, 11625, 172, 3, 35, "Text",ExpressionUUID->"9df7f178-b16d-473c-98e0-3a0f20ceccb0"],
Cell[CellGroupData[{
Cell[606448, 11632, 360, 8, 28, "Input",ExpressionUUID->"568fdaac-8f2f-4123-9f6d-ce0ccaaea206"],
Cell[606811, 11642, 1214, 20, 32, "Output",ExpressionUUID->"78828273-c026-49c9-a1bb-e6ed385e1f87"]
}, Open  ]],
Cell[608040, 11665, 739, 21, 48, "Input",ExpressionUUID->"5c721553-e4e2-4632-9c27-9f40b9961f05"],
Cell[CellGroupData[{
Cell[608804, 11690, 272, 6, 28, "Input",ExpressionUUID->"465e8a09-5f85-4d10-b177-8dd2adfa33e5"],
Cell[609079, 11698, 394, 6, 32, "Output",ExpressionUUID->"21a8b7a8-0636-4cea-8bf3-c06d2e98e805"]
}, Open  ]],
Cell[CellGroupData[{
Cell[609510, 11709, 266, 6, 28, "Input",ExpressionUUID->"9316ca40-9a2c-4ca2-a656-a0c2ff7d67a1"],
Cell[609779, 11717, 332, 5, 32, "Output",ExpressionUUID->"44431c5e-103e-48dc-8f74-1c65d03cd520"]
}, Open  ]],
Cell[CellGroupData[{
Cell[610148, 11727, 185, 3, 28, "Input",ExpressionUUID->"b642aec1-06b3-448f-acf3-91cb1ce4f9d3"],
Cell[610336, 11732, 275, 5, 32, "Output",ExpressionUUID->"4e75c4dc-fffe-4576-b7c2-7baab5c4e603"]
}, Open  ]],
Cell[610626, 11740, 161, 3, 35, "Text",ExpressionUUID->"56c9e1e6-c814-477b-8da7-fe4685ac2f07"],
Cell[610790, 11745, 3049, 79, 183, "Input",ExpressionUUID->"d2a6bc17-6274-4df8-82e7-1243bf448ce9"],
Cell[CellGroupData[{
Cell[613864, 11828, 219, 4, 28, "Input",ExpressionUUID->"33742ee2-df83-45bf-b490-80df7a30c998"],
Cell[614086, 11834, 457, 9, 32, "Output",ExpressionUUID->"662df52f-f0dd-4635-8971-78810ea7a49b"]
}, Open  ]],
Cell[614558, 11846, 1663, 44, 105, "Input",ExpressionUUID->"6cdf6e02-234f-4bd1-b4c8-3d45f1ab9141"],
Cell[CellGroupData[{
Cell[616246, 11894, 258, 5, 28, "Input",ExpressionUUID->"0a7856be-fdeb-47f4-b81e-9443de2ab4e7"],
Cell[616507, 11901, 730, 11, 32, "Output",ExpressionUUID->"fd13caa6-9640-46e2-ad85-076607199a9e"]
}, Open  ]],
Cell[617252, 11915, 243, 4, 35, "Text",ExpressionUUID->"ea7d7199-b5a8-4feb-9e8e-3251a5b5d654"],
Cell[617498, 11921, 493, 13, 25, "ItemParagraph",ExpressionUUID->"ca1a25ca-d49f-48cf-b52c-c6a8a1df356a"],
Cell[617994, 11936, 201, 3, 25, "ItemParagraph",ExpressionUUID->"4837cf21-54ae-4470-8b4e-67262a1d8c0d"],
Cell[618198, 11941, 200, 3, 25, "ItemParagraph",ExpressionUUID->"b7613202-e650-4830-9a0b-0e6f05cf892b"],
Cell[618401, 11946, 434, 12, 25, "ItemParagraph",ExpressionUUID->"c1d4181a-b2ea-4511-844d-467de68462b6"],
Cell[618838, 11960, 440, 12, 25, "ItemParagraph",ExpressionUUID->"ce1a1e98-d0da-4998-9c6c-1027457d499d"],
Cell[619281, 11974, 235, 4, 25, "ItemParagraph",ExpressionUUID->"0ceaf407-fdc8-4f06-b34e-1ac6772b47a3"],
Cell[619519, 11980, 230, 3, 25, "ItemParagraph",ExpressionUUID->"ff812340-e8f4-4622-b7cf-1c62fd98099f"],
Cell[619752, 11985, 487, 13, 25, "ItemParagraph",ExpressionUUID->"458cbd0d-f7fb-44ba-a248-2778741517a2"],
Cell[620242, 12000, 486, 13, 25, "ItemParagraph",ExpressionUUID->"f554234d-bc62-4414-a912-5aa65449f60d"],
Cell[620731, 12015, 479, 13, 25, "ItemParagraph",ExpressionUUID->"5e3c7e80-d7e5-40c1-9069-41932ff74211"],
Cell[621213, 12030, 414, 12, 25, "ItemParagraph",ExpressionUUID->"c950e554-d335-4577-87c4-7e8e499384a0"],
Cell[621630, 12044, 200, 3, 35, "Text",ExpressionUUID->"d78f9577-969f-4a7d-ac8f-5e55c19c4f82"],
Cell[621833, 12049, 7332, 186, 431, "Input",ExpressionUUID->"bcbce9b3-0b00-44c9-9d48-ebc6ebae2742"],
Cell[CellGroupData[{
Cell[629190, 12239, 534, 14, 28, "Input",ExpressionUUID->"74e79b9b-178f-43d1-adb0-e731806e0a57"],
Cell[629727, 12255, 10593, 267, 156, "Output",ExpressionUUID->"678ac0af-9e76-434a-bcbb-40aa4506612e"]
}, Open  ]],
Cell[640335, 12525, 1808, 45, 53, "Input",ExpressionUUID->"d59b6b8f-e391-42c4-9a2a-2eaa8b4d0db5"],
Cell[642146, 12572, 1247, 28, 52, "Input",ExpressionUUID->"4a4e3dbf-e1fe-4d83-95d8-d1603b505724"],
Cell[643396, 12602, 1556, 35, 31, "Input",ExpressionUUID->"3b7e3762-6fae-42a0-a0e7-f98ec294bdd0"],
Cell[644955, 12639, 729, 20, 28, "Input",ExpressionUUID->"5c1103d4-4b38-493f-bdc7-1e6dc8dc2c05"],
Cell[645687, 12661, 210, 4, 35, "Text",ExpressionUUID->"24d427a4-f48b-4064-80fa-b7cc6a1e3a6e"],
Cell[645900, 12667, 924, 22, 31, "Input",ExpressionUUID->"eea732ea-6ad5-4d43-bf81-848a023171e1"],
Cell[646827, 12691, 178, 3, 35, "Text",ExpressionUUID->"933b194e-9c1b-4ed9-8782-bb6ce65d3d72"],
Cell[CellGroupData[{
Cell[647030, 12698, 1864, 46, 53, "Input",ExpressionUUID->"05fe449e-ca70-46d2-a45a-b30081ee01f5"],
Cell[648897, 12746, 87964, 1904, 377, "Output",ExpressionUUID->"90c9c116-8df4-4f74-bd02-76fd9ef61e8c"]
}, Open  ]],
Cell[736876, 14653, 196, 3, 35, "Text",ExpressionUUID->"3834fbc0-e93c-45fc-bc69-1266e4adc99a"],
Cell[CellGroupData[{
Cell[737097, 14660, 655, 18, 28, "Input",ExpressionUUID->"ef1e2bce-e3e5-42be-905f-d8029710c87f"],
Cell[737755, 14680, 412, 9, 32, "Output",ExpressionUUID->"8267df57-10a4-47d0-bfd6-cffcd7f06613"]
}, Open  ]],
Cell[CellGroupData[{
Cell[738204, 14694, 687, 19, 31, "Input",ExpressionUUID->"b05162fb-c68a-416d-940c-efe43db70a78"],
Cell[738894, 14715, 477, 9, 35, "Output",ExpressionUUID->"d27314cb-6361-4ba4-b914-a4e96b9575e6"]
}, Open  ]],
Cell[739386, 14727, 3073, 83, 153, "Input",ExpressionUUID->"d4a79b8e-4757-4ef1-aee6-7d5a979416fd"]
}, Closed]],
Cell[CellGroupData[{
Cell[742496, 14815, 417, 6, 38, "Subsection",ExpressionUUID->"90c60cd0-7e91-4671-a067-bda6d796917b"],
Cell[742916, 14823, 579, 10, 48, "Input",ExpressionUUID->"a4644531-2d16-4a79-9401-9363cb71e1a0"],
Cell[743498, 14835, 293, 8, 81, "Text",ExpressionUUID->"b2ea9aef-aaee-4088-b877-7b23ad72a7c4"],
Cell[743794, 14845, 507, 13, 25, "ItemParagraph",ExpressionUUID->"de909c5e-9546-4764-97e1-5868cd604759"],
Cell[744304, 14860, 327, 5, 25, "ItemParagraph",ExpressionUUID->"1e622036-b684-40ed-9398-cdb758b4713b"],
Cell[744634, 14867, 330, 5, 25, "ItemParagraph",ExpressionUUID->"674870ef-31cd-4cd3-a3f0-aafc50a4529b"],
Cell[744967, 14874, 266, 4, 25, "ItemParagraph",ExpressionUUID->"ab1a22c3-703f-4eb8-a57b-f30041ccdd07"],
Cell[745236, 14880, 264, 4, 25, "ItemParagraph",ExpressionUUID->"6b4e7f70-1fe6-459f-bb03-cf8cda2f19f2"],
Cell[745503, 14886, 435, 11, 25, "ItemParagraph",ExpressionUUID->"4594ab34-ddce-400a-893a-5a57ca8bc938"],
Cell[745941, 14899, 261, 4, 25, "ItemParagraph",ExpressionUUID->"3496ccbf-b7b7-4037-ac94-3ad0ddde0023"],
Cell[746205, 14905, 324, 5, 25, "ItemParagraph",ExpressionUUID->"a8cdbab9-1b5b-4b12-a7d9-4ecec394280d"],
Cell[746532, 14912, 683, 19, 25, "ItemParagraph",ExpressionUUID->"3bc3ba7c-055e-4ab6-a87f-4e05810bf6c7"],
Cell[747218, 14933, 309, 5, 25, "ItemParagraph",ExpressionUUID->"b6f7caaa-0abf-4e64-b92c-0736e5b970d5"],
Cell[747530, 14940, 382, 5, 25, "ItemParagraph",ExpressionUUID->"2b27c896-b5d0-4f7f-8be6-b126b2cc6d2d"],
Cell[747915, 14947, 610, 15, 26, "ItemParagraph",ExpressionUUID->"738384cf-c649-4dc6-8008-a759f9fe4965"],
Cell[748528, 14964, 405, 6, 25, "ItemParagraph",ExpressionUUID->"38fbe038-1fa3-4590-845c-5b672cdc0542"],
Cell[748936, 14972, 567, 10, 25, "ItemParagraph",ExpressionUUID->"ede226ca-757b-4f8a-9caa-3badf96589c9"],
Cell[749506, 14984, 353, 5, 25, "ItemParagraph",ExpressionUUID->"6a6995cc-426c-4595-b652-daf00f2b360c"],
Cell[CellGroupData[{
Cell[749884, 14993, 304, 5, 25, "ItemParagraph",ExpressionUUID->"06e5882b-f945-46d4-a89c-aeb6ba7aa1c2"],
Cell[750191, 15000, 12025, 319, 664, "Input",ExpressionUUID->"e7a02d53-7f2f-416a-9a7e-38a10c0788f1"],
Cell[762219, 15321, 822, 24, 85, "Input",ExpressionUUID->"da613c8a-22c3-43af-a3fd-6a74cb7f94e6"]
}, Open  ]],
Cell[763056, 15348, 187, 3, 35, "Text",ExpressionUUID->"3cf975b6-f4b3-43b2-950b-d6807b1ded1e"],
Cell[763246, 15353, 645, 14, 28, "Input",ExpressionUUID->"f35b2bd3-be76-46d2-a7d7-6cdf56f16840"],
Cell[CellGroupData[{
Cell[763916, 15371, 367, 6, 28, "Input",ExpressionUUID->"e9cdb496-24b1-4335-a364-d92995ac861d"],
Cell[764286, 15379, 381140, 6336, 66, "Output",ExpressionUUID->"45c00afa-0a7e-480e-9858-0f83114702d1"]
}, Open  ]],
Cell[1145441, 21718, 180, 3, 35, "Text",ExpressionUUID->"e2dda161-1968-4fdd-94ed-9da30a2aa7a9"],
Cell[1145624, 21723, 1495, 45, 48, "Input",ExpressionUUID->"a8860b84-0a77-4ec0-a8e6-92b40e6d9c90"],
Cell[CellGroupData[{
Cell[1147144, 21772, 389, 9, 28, "Input",ExpressionUUID->"b5d64200-ac2a-45db-8f5a-8284b837dfc4"],
Cell[1147536, 21783, 3428, 109, 114, "Output",ExpressionUUID->"c8967634-450a-439f-807f-e6403bdaf82b"]
}, Open  ]],
Cell[1150979, 21895, 472, 13, 35, "Text",ExpressionUUID->"f5a1ffd7-6edb-4c2b-9391-1d19509d768b"],
Cell[CellGroupData[{
Cell[1151476, 21912, 299, 6, 28, "Input",ExpressionUUID->"bda5d4f6-b75d-49a3-995b-098fafd76471"],
Cell[1151778, 21920, 1865, 30, 114, "Output",ExpressionUUID->"e640baa3-0d96-4d23-a57e-cc61a25d3da6"]
}, Open  ]],
Cell[1153658, 21953, 197, 7, 81, "Text",ExpressionUUID->"933ad66d-c14b-477c-bdcc-0f29a07dba14"],
Cell[1153858, 21962, 202, 3, 25, "ItemParagraph",ExpressionUUID->"c2ad30a6-68f2-4fb7-9389-2a756a204500"],
Cell[1154063, 21967, 401, 10, 25, "ItemParagraph",ExpressionUUID->"34a03f36-0e4a-43c7-9256-12c730ac5a0b"],
Cell[1154467, 21979, 225, 3, 25, "ItemParagraph",ExpressionUUID->"0211f44f-be83-4bb5-9b84-7159bd3fe9ae"],
Cell[1154695, 21984, 226, 3, 25, "ItemParagraph",ExpressionUUID->"8cce04c9-176c-464b-9c91-8c952bdd1a53"],
Cell[1154924, 21989, 554, 16, 25, "ItemParagraph",ExpressionUUID->"d96e55de-898e-4beb-b9b8-60a755945c2b"],
Cell[1155481, 22007, 569, 17, 25, "ItemParagraph",ExpressionUUID->"c66626be-f380-4fff-a04a-bb5f584786df"],
Cell[1156053, 22026, 620, 18, 25, "ItemParagraph",ExpressionUUID->"cc102539-798a-49a4-aa1a-5575a6fc4c7a"],
Cell[1156676, 22046, 487, 13, 25, "ItemParagraph",ExpressionUUID->"6c6bd002-57e7-4f21-af3c-a1cca74008a2"],
Cell[1157166, 22061, 479, 13, 25, "ItemParagraph",ExpressionUUID->"2cf07a86-dc4c-455a-9333-342bd1ad2c3f"],
Cell[1157648, 22076, 483, 13, 25, "ItemParagraph",ExpressionUUID->"f926bb02-4d1f-4b6c-bf69-73bb07b834df"],
Cell[1158134, 22091, 648, 19, 25, "ItemParagraph",ExpressionUUID->"eaf7a156-b1b3-471a-9ce6-a468ef2cb592"],
Cell[1158785, 22112, 460, 14, 25, "ItemParagraph",ExpressionUUID->"d51b7e23-9f17-4042-852f-03742a362853"],
Cell[1159248, 22128, 421, 11, 25, "ItemParagraph",ExpressionUUID->"547bc57a-1901-4da8-b576-ebf7cc7b9644"],
Cell[1159672, 22141, 268, 7, 58, "Text",ExpressionUUID->"7b2049ad-297d-4878-b7cf-66db1ae97204"],
Cell[1159943, 22150, 22898, 506, 1258, "Input",ExpressionUUID->"28220c17-d903-434b-ba1d-c21eb4d28ab8"],
Cell[1182844, 22658, 216, 5, 35, "Text",ExpressionUUID->"39a49b0f-3640-4469-a19c-6a3b2d5e55df"],
Cell[1183063, 22665, 1511, 43, 48, "Input",ExpressionUUID->"61590923-3da2-4dde-acff-b59db1df6f92"],
Cell[1184577, 22710, 341, 10, 35, "Text",ExpressionUUID->"5d5884b4-8cb8-4eb9-860c-916426d71474"],
Cell[CellGroupData[{
Cell[1184943, 22724, 624, 18, 67, "Input",ExpressionUUID->"ac7980f0-9e87-4781-aeab-072f2fab8f06"],
Cell[1185570, 22744, 253, 4, 32, "Output",ExpressionUUID->"6987f64d-dca0-4a30-90f7-95133c5ac626"],
Cell[1185826, 22750, 251, 4, 32, "Output",ExpressionUUID->"b8560ecb-7746-4961-9563-7cf8b7cf2572"]
}, Open  ]],
Cell[1186092, 22757, 236, 6, 35, "Text",ExpressionUUID->"1404efd5-e352-4371-8d25-5039e99c5105"],
Cell[CellGroupData[{
Cell[1186353, 22767, 280, 6, 28, "Input",ExpressionUUID->"35868084-fa2f-4b00-882e-64a9326d02e4"],
Cell[1186636, 22775, 1651, 27, 114, "Output",ExpressionUUID->"d9e1937a-5d8e-4e26-b382-c1e0f74f987c"]
}, Open  ]],
Cell[1188302, 22805, 194, 3, 35, "Text",ExpressionUUID->"33fbeb25-364b-42d0-9048-99ce3c3c34e4"],
Cell[CellGroupData[{
Cell[1188521, 22812, 480, 8, 28, "Input",ExpressionUUID->"bcc75ec2-18c2-4cc1-8806-f1dbfa25d029"],
Cell[1189004, 22822, 488, 11, 28, "Message",ExpressionUUID->"aa33c218-19ab-4af6-b127-cd1a8891e6d6"],
Cell[1189495, 22835, 489, 11, 28, "Message",ExpressionUUID->"04b7fa31-6352-4c0f-a462-21fb09c5bde5"],
Cell[1189987, 22848, 489, 11, 28, "Message",ExpressionUUID->"57b396c7-22b6-4b37-87f8-8fc5f2d31155"],
Cell[1190479, 22861, 456, 10, 28, "Message",ExpressionUUID->"d3e31bf1-45e2-4f1e-8819-d2d057a3b0a8"],
Cell[1190938, 22873, 1614, 25, 95, "Output",ExpressionUUID->"d6e2984b-e819-402e-b710-4669ac881aca"]
}, Open  ]],
Cell[1192567, 22901, 453, 15, 35, "Text",ExpressionUUID->"1f57286a-fdbb-4a22-9bfd-b419f5a80ba4"],
Cell[1193023, 22918, 2247, 59, 181, "Input",ExpressionUUID->"80b9a8fe-41f8-4f68-aa66-891ebe9b278e"],
Cell[CellGroupData[{
Cell[1195295, 22981, 277, 6, 28, "Input",ExpressionUUID->"c8a482c8-7dec-4661-9366-2b5960812ed3"],
Cell[1195575, 22989, 505, 11, 28, "Message",ExpressionUUID->"48346261-e153-49d0-8762-1c3b15b2e82a"],
Cell[1196083, 23002, 519, 11, 28, "Message",ExpressionUUID->"aad9e3d2-3940-49ee-a324-f266d8341756"],
Cell[1196605, 23015, 520, 11, 28, "Message",ExpressionUUID->"1a2e1bc3-6c1f-4b43-9d25-5f56659ef1fd"],
Cell[1197128, 23028, 456, 10, 28, "Message",ExpressionUUID->"1acc4422-0034-432b-8d74-e123661410c1"],
Cell[1197587, 23040, 453, 10, 35, "Output",ExpressionUUID->"5a90fb1c-439d-45ad-aa7a-c65f89adac71"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1198077, 23055, 3993, 77, 129, "Input",ExpressionUUID->"87c15f0c-0c74-4d13-98fb-93b8d3ed2e09"],
Cell[1202073, 23134, 614, 13, 28, "Message",ExpressionUUID->"32ddfd7c-15c1-4769-bb8c-bb3000be71df"],
Cell[1202690, 23149, 614, 13, 28, "Message",ExpressionUUID->"63f994a9-cfe4-469a-985f-b50910f6245d"],
Cell[1203307, 23164, 614, 13, 28, "Message",ExpressionUUID->"03d338de-7e4c-4447-9f3b-e9fd50e1e1ce"],
Cell[1203924, 23179, 578, 12, 28, "Message",ExpressionUUID->"3d557ca8-6eac-4b10-912e-d900a93c371f"],
Cell[1204505, 23193, 3933, 63, 78, "Output",ExpressionUUID->"b44d4c5b-ad98-4d67-95a5-cd1f1e8f90d1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1208487, 23262, 226, 4, 38, "Subsection",ExpressionUUID->"e802443d-96dd-4959-957c-a9483c0fc430"],
Cell[1208716, 23268, 64119, 1546, 4393, "Input",ExpressionUUID->"2e10255b-cdcc-408b-a2b4-44850546a174"]
}, Closed]],
Cell[CellGroupData[{
Cell[1272872, 24819, 247, 4, 38, "Subsection",ExpressionUUID->"6ee41e2d-da5d-4daf-b9b2-e7ce557ef1b6"],
Cell[1273122, 24825, 183, 3, 35, "Text",ExpressionUUID->"da3ae3a6-7dd2-4c5d-b555-35f223c5d1b7"],
Cell[1273308, 24830, 2186, 60, 162, "Input",ExpressionUUID->"0dda4a01-7244-42d7-8be5-c2b6b3fa8588"],
Cell[1275497, 24892, 364, 7, 35, "Text",ExpressionUUID->"cbf82edd-06c2-4fd4-95d2-c6bdb00cf4d6"],
Cell[1275864, 24901, 21841, 525, 1103, "Input",ExpressionUUID->"3a17f5f2-de47-4cea-873b-b3bd5750fca5"],
Cell[1297708, 25428, 972, 24, 58, "Text",ExpressionUUID->"f0c1c362-8ef2-4466-970d-bfa06dc4a746"],
Cell[1298683, 25454, 1692, 43, 162, "Input",ExpressionUUID->"f1ea9e81-ccd6-4c14-b9cb-4be4a836066c"],
Cell[1300378, 25499, 217, 5, 35, "Text",ExpressionUUID->"1ea8dbf1-f8d9-4f50-ab2e-b14a10f2f480"],
Cell[1300598, 25506, 195, 3, 25, "ItemParagraph",ExpressionUUID->"af25edab-5cdd-42b4-807d-16fa3649bb05"],
Cell[1300796, 25511, 214, 4, 25, "ItemParagraph",ExpressionUUID->"cbcdd9fa-0525-4ccd-b7cd-ac57c90d7da4"],
Cell[1301013, 25517, 262, 4, 25, "ItemParagraph",ExpressionUUID->"0d24649b-fe83-411f-8608-ae82a2d1646e"],
Cell[1301278, 25523, 278, 6, 25, "ItemParagraph",ExpressionUUID->"8088a5fd-4ddf-4a10-a3ef-1c40d05faa11"],
Cell[1301559, 25531, 255, 4, 25, "ItemParagraph",ExpressionUUID->"3e06c56a-ec03-4dc4-9c1d-10789203d164"],
Cell[1301817, 25537, 262, 4, 25, "ItemParagraph",ExpressionUUID->"6a2bb2f4-651e-4ffd-9b62-a95898773683"],
Cell[1302082, 25543, 269, 5, 25, "ItemParagraph",ExpressionUUID->"c1c22764-9626-4e82-8894-49ab7ef90627"],
Cell[1302354, 25550, 265, 5, 25, "ItemParagraph",ExpressionUUID->"0332dc39-f89a-4220-87b5-984dc3f40140"],
Cell[1302622, 25557, 163, 3, 35, "Text",ExpressionUUID->"a096b550-39f4-42ee-ab88-93a1e49195a5"],
Cell[CellGroupData[{
Cell[1302810, 25564, 1756, 48, 96, "Input",ExpressionUUID->"cd55447c-b55f-4feb-97e1-1b4ab43d51db"],
Cell[1304569, 25614, 62910, 1156, 246, "Output",ExpressionUUID->"0e978dde-64df-4405-9dde-6217fb8a6a93"]
}, Open  ]],
Cell[1367494, 26773, 179, 3, 35, "Text",ExpressionUUID->"6eb1aea6-c5fa-4108-b559-a214bfc13477"],
Cell[CellGroupData[{
Cell[1367698, 26780, 1299, 37, 74, "Input",ExpressionUUID->"9571a0ac-fe6e-41de-bf01-63d14708fd8c"],
Cell[1369000, 26819, 22830, 426, 254, "Output",ExpressionUUID->"71de9c48-0590-403e-bf6b-bd0b3b0decd9"]
}, Open  ]],
Cell[1391845, 27248, 297, 7, 35, "Text",ExpressionUUID->"ef1ba14e-6cd0-46a7-a184-746d51740a8d"],
Cell[1392145, 27257, 2306, 55, 143, "Input",ExpressionUUID->"c2f90663-c7f1-4c71-a50d-0a961494e241"],
Cell[CellGroupData[{
Cell[1394476, 27316, 1761, 48, 74, "Input",ExpressionUUID->"32959161-be43-4397-a812-c931c0b56251"],
Cell[1396240, 27366, 141544, 2579, 396, "Output",ExpressionUUID->"f5b33587-625e-4b5c-97a7-bc74d42f274d"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

